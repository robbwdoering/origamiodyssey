[{"/home/bbor/dev/origamiodyssey/src/index.js":"1","/home/bbor/dev/origamiodyssey/src/layout/Header.js":"2","/home/bbor/dev/origamiodyssey/src/layout/Body.js":"3","/home/bbor/dev/origamiodyssey/src/layout/Footer.js":"4","/home/bbor/dev/origamiodyssey/src/layout/pages/Splash.js":"5","/home/bbor/dev/origamiodyssey/src/layout/pages/Lesson.js":"6","/home/bbor/dev/origamiodyssey/src/infra/constants.js":"7","/home/bbor/dev/origamiodyssey/src/anim/Scene.js":"8","/home/bbor/dev/origamiodyssey/src/infra/appReducer.js":"9","/home/bbor/dev/origamiodyssey/src/style/theme.js":"10","/home/bbor/dev/origamiodyssey/src/anim/Paper.js":"11","/home/bbor/dev/origamiodyssey/src/infra/actions.js":"12","/home/bbor/dev/origamiodyssey/src/layout/NavDrawer.js":"13","/home/bbor/dev/origamiodyssey/src/layout/pages/ModelSelect.js":"14","/home/bbor/dev/origamiodyssey/src/layout/pages/FoldControls.js":"15","/home/bbor/dev/origamiodyssey/src/layout/pages/User.js":"16","/home/bbor/dev/origamiodyssey/src/static/lettering.js":"17","/home/bbor/dev/origamiodyssey/src/layout/pages/FoldEditorCards.js":"18","/home/bbor/dev/origamiodyssey/src/infra/utils.js":"19","/home/bbor/dev/origamiodyssey/src/layout/pages/InstructionalHierarchy.js":"20","/home/bbor/dev/origamiodyssey/src/layout/pages/ModelCard.js":"21"},{"size":2295,"mtime":1619380718747,"results":"22","hashOfConfig":"23"},{"size":2172,"mtime":1619842262830,"results":"24","hashOfConfig":"23"},{"size":6206,"mtime":1619842262830,"results":"25","hashOfConfig":"23"},{"size":442,"mtime":1616978827522,"results":"26","hashOfConfig":"23"},{"size":0,"mtime":1616978827522,"results":"27","hashOfConfig":"23"},{"size":131,"mtime":1613020940457,"results":"28","hashOfConfig":"23"},{"size":7206,"mtime":1619842262830,"results":"29","hashOfConfig":"23"},{"size":3675,"mtime":1619842262830,"results":"30","hashOfConfig":"23"},{"size":1449,"mtime":1619378467145,"results":"31","hashOfConfig":"23"},{"size":7126,"mtime":1619880761237,"results":"32","hashOfConfig":"23"},{"size":31590,"mtime":1619880025220,"results":"33","hashOfConfig":"23"},{"size":648,"mtime":1619378421326,"results":"34","hashOfConfig":"23"},{"size":5667,"mtime":1619381326537,"results":"35","hashOfConfig":"23"},{"size":6327,"mtime":1619842262830,"results":"36","hashOfConfig":"23"},{"size":2814,"mtime":1616978827522,"results":"37","hashOfConfig":"23"},{"size":9139,"mtime":1619392552291,"results":"38","hashOfConfig":"23"},{"size":14459,"mtime":1619825902551,"results":"39","hashOfConfig":"23"},{"size":9512,"mtime":1619363000023,"results":"40","hashOfConfig":"23"},{"size":5585,"mtime":1619842262830,"results":"41","hashOfConfig":"23"},{"size":15589,"mtime":1619881178181,"results":"42","hashOfConfig":"23"},{"size":6441,"mtime":1619833426774,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"eii7vj",{"filePath":"47","messages":"48","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"46"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"46"},"/home/bbor/dev/origamiodyssey/src/index.js",[],["102","103"],"/home/bbor/dev/origamiodyssey/src/layout/Header.js",["104","105","106","107","108","109","110","111","112","113","114"],"/**\n * FILENAME: Header.js\n *\n * DESCRIPTION: Renders the basic of the animation.\n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n\tAppBar,\n\tClickAwayListener,\n\tToolbar,\n\tIconButton,\n\tTypography,\n\tMenu,\n\tMenuItem,\n\tInputBase\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\n// import OriDomi from \"oridomi\";\nimport { setShowNavDrawer, setFoldState, setLayoutState } from './../infra/actions';\nimport useStyles from './../style/theme.js';\nimport Lettering from './../static/lettering.js';\n\nexport const Header = props => {\n\tconst { setShowNavDrawer, setFoldState, setLayoutState } = props;\n\n\tconst [showMenu, setShowMenu] = useState(false);\n\n\tconst styles = useStyles();\n\tconst fold = useRef(null);\n\n\tconst toggleMenu = e => {\n\t\tsetShowNavDrawer();\n\t};\n\n\tconst handleClickAway = e => {\n\t\tsetShowNavDrawer(false);\n\t};\n\n\tconst handleClickLogo = e => {\n\t\tsetFoldState(null);\n\t\tsetLayoutState(null);\n\t};\n\n\tconst handleSearchChange = event => {\n\t\tsetLayoutState({\n\t\t\tsearchStr: event.target.value || ''\n\t\t});\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<AppBar className={styles.appBarContainer}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tclassName=\"menu-button\"\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\tonClick={toggleMenu}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<div className={styles.appLettering} onClick={toggleMenu}>\n\t\t\t\t\t\t<Lettering style={{maxWidth: window.innerWidth }} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.searchContainer}>\n\t\t\t\t\t\t<div className={styles.searchIcon}>\n\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<InputBase\n\t\t\t\t\t\t\tplaceholder=\"Search Modelsâ€¦\"\n\t\t\t\t\t\t\tclasses={{ root: styles.inputRoot, input: styles.inputInput }}\n\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'search' }}\n\t\t\t\t\t\t\tonChange={handleSearchChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</React.Fragment>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {};\n};\n\nexport default connect(mapStateToProps, { setShowNavDrawer, setFoldState, setLayoutState })(Header);\n","/home/bbor/dev/origamiodyssey/src/layout/Body.js",["115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],"/**\n * FILENAME: Body.js\n *\n * DESCRIPTION: The main body of the app, where most instruction, navigation, and animation happens.\n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SwipeableDrawer, Button, List, Divider, ListItem } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { useCookies } from 'react-cookie';\n\nimport { Pages, Folds, initNavTree } from './../infra/constants';\nimport { setLayoutState, setFoldState, setEditorState, setUserState } from './../infra/actions';\nimport Splash from './pages/Splash';\nimport ModelSelect from './pages/ModelSelect';\nimport FoldEditorCards from './pages/FoldEditorCards';\nimport User from './pages/User';\nimport InstructionalHierarchy from './pages/InstructionalHierarchy';\nimport Scene from './../anim/Scene';\nimport useStyles from './../style/theme';\n\nexport const Body = props => {\n\tconst {\n\t\tlayoutState,\n\t\tlayoutStateHash,\n\t\tsetLayoutState,\n\t\tfoldState,\n\t\tfoldStateHash,\n\t\tsetFoldState,\n\t\teditorState,\n\t\teditorStateHash,\n\t\tsetEditorState,\n\t\tuserState,\n\t\tsetUserState\n\t} = props;\n\n\t// ----------\n\t// STATE INIT\n\t// ----------\n\tconst classes = useStyles();\n\tconst containerRef = useRef();\n\tconst fold = useRef({});\n\tconst [curHash, setHash] = useState(0);\n\tconst [cookies, setCookies] = useCookies([]);\n\n\t// ----------------\n\t// MEMBER FUNCTIONS\n\t// ----------------\n\tconst renderPage = () => {\n\t\tconst pageProps = {};\n\n\t\tswitch (layoutState.page) {\n\t\t\tcase Pages.Splash:\n\t\t\t\treturn <Splash {...pageProps} />;\n\t\t\tcase Pages.ModelSelect:\n\t\t\t\treturn <ModelSelect {...pageProps} />;\n\t\t\tcase Pages.User:\n\t\t\t\treturn <User {...pageProps} />;\n\t\t\tcase Pages.Fold:\n\t\t\t\treturn (\n\t\t\t\t\t<InstructionalHierarchy\n\t\t\t\t\t\twindowHeight={windowHeight}\n\t\t\t\t\t\tinitFold={fold.current.json}\n\t\t\t\t\t\tfoldLastUpdated={fold.current.lastUpdated}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t};\n\n\tconst renderPiecemeal = () => {\n\t\tswitch (layoutState.page) {\n\t\t\tcase Pages.Fold:\n\t\t\t\treturn ((userState.showEditor) ? (\n\t\t\t\t\t<FoldEditorCards\n\t\t\t\t\t\twindowHeight={windowHeight}\n\t\t\t\t\t\tinitFold={fold.current.json}\n\t\t\t\t\t\tcurFold={layoutState.curFold}\n\t\t\t\t\t\tfoldOverrideCallback={foldOverrideCallback}\n\t\t\t\t\t\tfoldLastUpdated={fold.current.lastUpdated}\n\t\t\t\t\t/>\n\t\t\t\t) : null);\n\t\t\tcase Pages.Splash:\n\t\t\tcase Pages.ModelSelect:\n\t\t\tcase Pages.User:\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t};\n\n\tconst selectFold = () => {\n\t\tconsole.log('selectFold', layoutState, Folds);\n\t\tsetFoldState({\n\t\t\tstepIdx: -1,\n\t\t\tactive: false \n\t\t});\n\t\tfold.current = {\n\t\t\tjson:\n\t\t\t\tlayoutState.curFold && Folds[layoutState.curFold]\n\t\t\t\t\t? JSON.parse(JSON.stringify(Folds[layoutState.curFold].json))\n\t\t\t\t\t: null,\n\t\t\tlastUpdated: Date.now()\n\t\t};\n\n\t\ttriggerRerender();\n\t};\n\n\tconst foldOverrideCallback = newFold => {\n\t\tconsole.log('[foldOverrideCallback] ', newFold);\n\t\tObject.assign(fold.current.json, newFold);\n\n\t\t// Reset fold state\n\t\tsetFoldState(null);\n\t};\n\n\tconst triggerRerender = () => {\n\t\tsetHash(cur => cur + 1);\n\t};\n\n\tconst saveStateToCookies = () => {\n\t\t// const finalFoldState = Object.assign({}, foldState, { stepIdx: -1 });\n\t\tsetCookies(\n\t\t\t'origamiodyssey_state',\n\t\t\t{ layoutState, foldState, editorState, userState },\n\t\t\t{ path: '/' }\n\t\t);\n\t};\n\n\tconst fetchStateFromCookies = () => {\n\t\tif (cookies.origamiodyssey_state) {\n\t\t\tconsole.log('Applying state from cookies.', cookies.origamiodyssey_state);\n\t\t\t// Override fields that we don't want to carry over between sessions \n\t\t\tconst layoutState = Object.assign({}, cookies.origamiodyssey_state.layoutState, { searchStr: '' });\n\t\t\tconst foldState = Object.assign({}, cookies.origamiodyssey_state.foldState, { repeatRoot: -1, repeatRange: [] });\n\t\t\tsetLayoutState(layoutState);\n\t\t\tsetFoldState(foldState);\n\t\t\tsetEditorState(cookies.origamiodyssey_state.editorState);\n\t\t\tsetUserState(cookies.origamiodyssey_state.userState);\n\t\t} else {\n\t\t\tconsole.log('Failed to apply cookies.', cookies);\n\t\t}\n\t};\n\n\t// ---------\n\t// LIFECYCLE\n\t// ---------\n\t// Rerender whenever the page resizes\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', triggerRerender);\n\t\twindow.addEventListener('beforeunload', saveStateToCookies);\n\n\t\tfetchStateFromCookies();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tsaveStateToCookies();\n\t}, [layoutState.hash, foldState.hash, editorState.hash]);\n\n\t// Get the actual JSON for whatever fold name is selected\n\tuseEffect(selectFold, [layoutState.curFold]);\n\n\t// Calculate height of window-matching containers\n\tconst windowHeight = useMemo(() => {\n\t\t// The scene always fills the window after accounting for the AppBar\n\t\treturn window.innerHeight - 64;\n\t}, [curHash]);\n\n\tconst page = useMemo(renderPage, [layoutState.page]);\n\tconst piecemeal = useMemo(renderPiecemeal, [layoutState.page, windowHeight]);\n\n\tconst sceneStyle = {\n\t\theight: windowHeight + 64 + 'px',\n\t\tdisplay: layoutState.page === Pages.Fold ? undefined : \"none\"\n\t};\n\n\tconsole.log('[body]', fold.current);\n\n\treturn (\n\t\t<div className={classes.bodyContainer} ref={containerRef}>\n\t\t\t<div className={classes.sceneContainer} style={sceneStyle}>\n\t\t\t\t<Scene\n\t\t\t\t\tpaperSize={windowHeight}\n\t\t\t\t\tinitFold={fold.current.json}\n\t\t\t\t\tfoldLastUpdated={fold.current.lastUpdated}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{page && (\n\t\t\t\t<div className={classes.centerColumn} style={{ height: windowHeight + 'px' }}>\n\t\t\t\t\t{renderPage()}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{piecemeal && <div className={classes.piecemealContainter}>{renderPiecemeal()}</div>}\n\t\t</div>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tlayoutState: state.appReducer.layoutState,\n\t\tlayoutStateHash: state.appReducer.layoutState.hash,\n\t\tfoldState: state.appReducer.foldState,\n\t\tfoldStateHash: state.appReducer.foldState.hash,\n\t\teditorState: state.appReducer.editorState,\n\t\teditorStateHash: state.appReducer.editorState.hash,\n\t\tuserState: state.appReducer.userState,\n\t\tuserStateHash: state.appReducer.userState.hash\n\t};\n};\n\nexport default connect(mapStateToProps, { setLayoutState, setFoldState, setEditorState, setUserState })(Body);\n","/home/bbor/dev/origamiodyssey/src/layout/Footer.js",["134","135","136","137","138"],"/**\n * FILENAME: Scene.js \n *\n * DESCRIPTION: Renders the basic of the animation. \n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nexport const Footer = props => {\n\tconst { } = props;\n\n\treturn (\n\t\t<div className=\"footer\">\n\t\t</div>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {};\n};\n\nexport default connect(mapStateToProps, {})(Footer);\n","/home/bbor/dev/origamiodyssey/src/layout/pages/Splash.js",[],"/home/bbor/dev/origamiodyssey/src/layout/pages/Lesson.js",[],["139","140"],"/home/bbor/dev/origamiodyssey/src/infra/constants.js",["141","142","143","144","145"],"/**\n * FILENAME: Constants.js\n *\n * DESCRIPTION: Contains constants for use accross the app.\n */\n\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport SchoolIcon from '@material-ui/icons/School';\nimport ClassIcon from '@material-ui/icons/Class';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\n\n// The FOLD files\nimport BirdBase from './../folds/BirdBase.json';\nimport BoatBase from './../folds/BoatBase.json';\nimport FrogBase from './../folds/FrogBase.json';\nimport WaterBombBase from './../folds/WaterBombBase.json';\nimport SailBoat from './../folds/SailBoat.json';\nimport Heart from './../folds/Heart.json';\nimport Crane from './../folds/Crane.json';\nimport Butterfly from './../folds/Butterfly.json';\nimport Lily from './../folds/Lily.json';\n\n// Images\nimport lilyImage from './../static/lily_thumbnail.png';\nimport craneImage from './../static/crane_thumbnail.png';\nimport butterflyImage from './../static/butterfly_thumbnail.png';\nimport heartImage from './../static/heart_thumbnail.png';\nimport sailboatImage from './../static/sailboat_thumbnail.png';\nimport waterbomb_baseImage from './../static/waterbomb_base_thumbnail.png';\nimport boat_baseImage from './../static/boat_base_thumbnail.png';\nimport bird_baseImage from './../static/bird_base_thumbnail.png';\n\nexport const Pages = {\n\tSplash: 'Splash',\n\tModelSelect: 'ModelSelect',\n\tFold: 'Fold',\n\tUser: 'User',\n\n\t// Used but undefined\n\tLesson: 'Lesson',\n\tHistory: 'History',\n\tLearnDashboard: 'LearnDashboard',\n\tTeachDashboard: 'TeachDashboard'\n};\n\nexport const TagCategories = {\n\ttype: {\n\t\ttext: 'Type',\n\t\txs: 6,\n\t\tsm: 4,\n\t\tmd: 2\n\t},\n\tauthor: {\n\t\ttext: 'Author',\n\t\txs: 6,\n\t\tsm: 4,\n\t\tmd: 2\n\t},\n\tcounterpart: {\n\t\ttext: 'Object',\n\t\txs: 12,\n\t\tsm: 8,\n\t\tmd: 4\n\t},\n\tduration: {\n\t\ttext: 'Time',\n\t\txs: 12,\n\t\tsm: 8,\n\t\tmd: 4\n\t}\n};\n\nexport const Tags = {\n\tbase: {\n\t\ttext: 'Base',\n\t\tcategory: 'type'\n\t},\n\tmodel: {\n\t\ttext: 'Model',\n\t\tcategory: 'type'\n\t},\n\ttraditional: {\n\t\ttext: 'Traditional',\n\t\tcategory: 'author'\n\t},\n\tbird: {\n\t\ttext: 'Bird',\n\t\tcategory: 'counterpart'\n\t},\n\tinsect: {\n\t\ttext: 'Insect',\n\t\tcategory: 'counterpart'\n\t},\n\tanimal: {\n\t\ttext: 'Animal',\n\t\tcategory: 'counterpart'\n\t},\n\tboat: {\n\t\ttext: 'Boat',\n\t\tcategory: 'counterpart'\n\t},\n\tflower: {\n\t\ttext: 'Flower',\n\t\tcategory: 'counterpart'\n\t},\n\tfive_mins: {\n\t\ttext: '5 Mins',\n\t\tcategory: 'duration'\n\t},\n\tfifteen_mins: {\n\t\ttext: '15 Mins',\n\t\tcategory: 'duration'\n\t},\n\tthirty_mins: {\n\t\ttext: '30 Mins',\n\t\tcategory: 'duration'\n\t},\n\thour_plus: {\n\t\ttext: '1+ hours',\n\t\tcategory: 'duration'\n\t}\n};\n\nexport const Folds = {\n\tSailBoat: {\n\t\tname: 'Sail Boat',\n\t\tstaticImg: sailboatImage,\n\t\tdescription: 'An assymetrical sailboat with a built in kickstand - perfect for display.',\n\t\ttags: ['model', 'boat', 'five_mins'],\n\t\tauthor: 'Traditional',\n\t\tjson: SailBoat\n\t},\n\tHeart: {\n\t\tname: 'Heart',\n\t\tstaticImg: heartImage,\n\t\tdescription: \"A flat heart that's particularly easy to fold - a great place to start.\",\n\t\ttags: ['model', 'five_mins'],\n\t\tauthor: 'Traditional',\n\t\tjson: Heart\n\t},\n\tCrane: {\n\t\tname: 'Crane',\n\t\tstaticImg: craneImage,\n\t\tdescription: 'The quintessential origami model - fold 1000 of these!',\n\t\ttags: ['model', 'fifteen_mins', 'bird', 'animal'],\n\t\tauthor: 'Traditional',\n\t\tjson: Crane\n\t},\n\tButterfly: {\n\t\tname: 'Butterfly',\n\t\tstaticImg: butterflyImage,\n\t\tdescription: 'A 3D flapping butterfly built upon a boat base.',\n\t\ttags: ['model', 'five_mins', 'insect', 'animal'],\n\t\tauthor: 'Traditional',\n\t\tjson: Butterfly\n\t},\n\tLily: {\n\t\tname: 'Lily',\n\t\tstaticImg: lilyImage,\n\t\tdescription: 'A symmetrical flower perfect for a boquet, or mounted on a folded stem.',\n\t\ttags: ['model', 'fifteen_mins', 'flower'],\n\t\tauthor: 'Traditional',\n\t\tjson: Lily\n\t},\n\tBirdBase: {\n\t\tname: 'Bird Base',\n\t\tstaticImg: bird_baseImage,\n\t\tdescription: 'The first base many learn, this is perfect for winged creations such as birds and dragons.',\n\t\ttags: ['base'],\n\t\tauthor: 'Traditional',\n\t\tjson: BirdBase\n\t},\n\tWaterBombBase: {\n\t\tname: 'Waterbomb Base',\n\t\tstaticImg: waterbomb_baseImage,\n\t\tdescription: 'A very simple base with four flaps.',\n\t\ttags: ['base'],\n\t\tauthor: 'Traditional',\n\t\tjson: WaterBombBase\n\t},\n\tBoatBase: {\n\t\tname: 'Boat Base',\n\t\tstaticImg: boat_baseImage,\n\t\tdescription: 'A more specific base for blocky models, such as boats and frames.',\n\t\ttags: ['base'],\n\t\tauthor: 'Traditional',\n\t\tjson: BoatBase\n\t}\n};\n\nexport const initAppReducerState = {\n\tlayoutState: {\n\t\thash: 0,\n\t\tpage: Pages.ModelSelect,\n\t\tcurFold: null,\n\t\tfoldHash: 0,\n\t\tuseImages: false,\n\t\tshowEditor: true,\n\t\texpandHierarchy: false,\n\t\tsearchStr: ''\n\t},\n\tfoldState: {\n\t\thash: 0,\n\t\tstepIdx: -1, // Depends on selected level\n\t\tactive: false,\n\t\toverrideWithEditor: false,\n\t\tusingDefaults: true,\n\t\trepeatRoot: -1,\n\t\trepeatRange: null,\n\t},\n\teditorState: {\n\t\thash: 0,\n\t\tedgeHighlights: [],\n\t\tvertexHighlights: [],\n\t\tfaceHighlights: [],\n\t\tshowEdges: false,\n\t\tshowVertices: false,\n\t\tshowFaces: true,\n\t\tshowTriangulations: false,\n\t\tshowLables: false\n\t},\n\tuserState: {\n\t\thash: 0,\n\t\tshowEditor: false,\n\t\tusername: null,\n\t\tshowTimerAssess: false,\n\t\tshowLikertAssess: false,\n\t\tmodelList: []\n\t},\n\tshowNavDrawer: false\n};\n\nexport const Actions = {\n\tSET_LAYOUT_STATE: 'SET_LAYOUT_STATE',\n\tSET_SHOW_NAV_DRAWER: 'SET_SHOW_NAV_DRAWER',\n\tSET_PAGE_CONFIG: 'SET_PAGE_CONFIG',\n\tSET_FOLD_STATE: 'SET_FOLD_STATE',\n\tSET_EDITOR_STATE: 'SET_EDITOR_STATE',\n\tSET_USER_STATE: 'SET_USER_STATE'\n};\n\nexport const initNavTree = [\n\t{\n\t\ttext: 'Return to Fold',\n\t\tconditional: \"is_saved_fold\",\n\t\tclassName: \"primary-drawer-node\",\n\t\tkey: Pages.Fold \n\t},\n\t{\n\t\ttext: 'Model Select',\n\t\tkey: Pages.ModelSelect \n\t},\n\t{\n\t\ttext: 'User Page',\n\t\tconditional: \"is_logged_in\",\n\t\tkey: Pages.User \n\t},\n\t{\n\t\ttext: 'Login / Register',\n\t\tconditional: \"is_not_logged_in\",\n\t\tkey: 'login' \n\t},\n\t{\n\t\ttext: 'What is Origami?',\n\t\tkey: 'context_root',\n\t\tchildren: [\n\t\t\t{\n\t\t\t\ttext: 'History',\n\t\t\t\tkey: 'history'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: 'Origami Today',\n\t\t\t\tkey: 'current_origami'\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: 'Practical Origami',\n\t\t\t\tkey: 'practical'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\ttext: 'Learn Origami',\n\t\tkey: 'learn_root',\n\t\tchildren: [\n\t\t\t{\n\t\t\t\ticon: <DashboardIcon />,\n\t\t\t\ttext: 'Dashboard',\n\t\t\t\tkey: 'learn_dashboard'\n\t\t\t},\n\t\t\t{\n\t\t\t\ticon: <GroupAddIcon />,\n\t\t\t\ttext: 'Join Class',\n\t\t\t\tkey: 'join_class'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\ttext: 'Teach Origami',\n\t\tkey: 'teach_root',\n\t\tchildren: [\n\t\t\t{\n\t\t\t\ticon: <DashboardIcon />,\n\t\t\t\ttext: 'Lesson Plans',\n\t\t\t\tkey: 'lesson_plan_dashboard'\n\t\t\t},\n\t\t\t{\n\t\t\t\ticon: <SchoolIcon />,\n\t\t\t\ttext: 'Read Research Paper',\n\t\t\t\tkey: 'google_scholar'\n\t\t\t},\n\t\t\t{\n\t\t\t\ticon: <ClassIcon />,\n\t\t\t\ttext: 'Origami in the Classroom',\n\t\t\t\tkey: 'teaching_tips'\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\ticon: <GitHubIcon />,\n\t\ttext: 'Source Code',\n\t\tkey: 'github'\n\t}\n];\n\nexport const initFoldState = {\n\t//place to store buffer geo vertex data\n\tpositions: [],\n\t//place to store buffer geo vertex colors\n\tcolors: [],\n\tindices: [],\n\tnodes: [],\n\tfaces: [],\n\tedges: [],\n\tcreases: [],\n\tvertices: [], //indexed vertices array\n\tfold: null,\n\tcreaseParams: null\n};\n\n/*\nexport const Lines = {\n    U: hingeLines,\n    M: mountainLines,\n    V: valleyLines,\n    C: cutLines,\n    F: facetLines,\n    B: borderLines\n};\n*/\n","/home/bbor/dev/origamiodyssey/src/anim/Scene.js",["146","147","148","149","150","151","152","153","154","155","156","157","158"],"/**\n * FILENAME: Scene.js \n *\n * DESCRIPTION: Renders the basic of the animation. \n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\n// Threejs - 3D Animation\nimport { Canvas, useFrame, useThree, useLoader, extend } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\n// React Spring - animation\nimport { useUpdate, useSpring, useSprings, animated, config }  from 'react-spring';\n// import { a, useTransition, Transition } from '@react-spring/three';\n\nimport { Paper } from \"./Paper\";\nimport { Pages, Folds } from \"./../infra/constants\";\nimport { setLayoutState, setFoldState } from \"./../infra/actions\";\n\n// Extend will make OrbitControls available as a JSX element called orbitControls for us to use.\nextend({ OrbitControls });\n\nconst CameraControls = () => {\n\t// Get a reference to the Three.js Camera, and the canvas html element.\n\t// We need these to setup the OrbitControls class.\n\t// https://threejs.org/docs/#examples/en/controls/OrbitControls\n\tconst {\n\t\tcamera,\n\t\tgl: { domElement }\n\t} = useThree();\n\n\tconst controls = useRef();\n\n\tuseFrame(({ gl }) => {\n\t\tgl.setClearColor(0xf1f4f4, 1);\n\t\treturn controls.current.update();\n\t});\n\n\treturn (\n\t\t<orbitControls\n\t\t\tref={controls}\n\t\t\targs={[camera, domElement]}\n\t\t\tenableZoom={true}\n\t\t\tenableRotate={true}\n\t\t\tenableDolly={false}\n\t\t\tmouseButtons={{\n\t\t\t\tRIGHT: THREE.MOUSE.ROTATE,\n\t\t\t\tLEFT: THREE.MOUSE.ROTATE,\n\t\t\t\tMIDDLE: THREE.MOUSE.PAN,\n\t\t\t}}\n\t\t\t// maxAzimuthAngle={Math.PI / 4}\n\t\t\t// maxPolarAngle={Math.PI * 3 / 4}\n\t\t\t// minAzimuthAngle={-Math.PI / 4}\n\t\t\t// minPolarAngle={-Math.PI * 3 / 4}\n\t\t/>\n\t);\n};\n\n/**\n * Main component.\n */\nexport const Scene = props => {\n\tconst { initFold, foldLastUpdated, paperSize, layoutState, layoutStateHash, foldState, foldStateHash, setFoldState, editorState, editorStateHash } = props;\n\tconst [overlays, setOverlays] = useState({});\n\tconst [overlayPos, setOverlayPos] = useState({});\n\n\tconst ctrlOverlay = inArr => {\n\t\tconst newOverlays = Object.assign({}, overlays);\n\t\tconst newOverlayPos = Object.assign({}, overlayPos);\n\n\t\tinArr.forEach(({ show, name, component, pos }) => {\n\t\t\tif (show) {\n\t\t\t\tnewOverlays[name] = component;\n\n\t\t\t\tif (pos) {\n\t\t\t\t\toverlayPos[name] = pos;\n\t\t\t\t}\n\t\t\t} else if (!show && newOverlays[name]) {\n\t\t\t\tdelete newOverlays[name];\n\t\t\t\tdelete overlayPos[name];\n\t\t\t}\n\t\t})\n\n\t\tsetOverlays(newOverlays);\n\t\tsetOverlayPos(overlayPos)\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Canvas camera={{fov: 100, position: [0, 1.8, 0]}} onCreated={state => state.gl.setClearColor(\"red\")} >\n\t\t\t\t<spotLight position={[5, 10, 0]} color='#f1f1ff' distance={100} penumbra={0.75} decay={2} />\n\t\t\t\t<CameraControls />\n\n\t\t\t\t<Paper\n\t\t\t\t\tposition={[0, 0, 0]}\n\t\t\t\t\tscale={10}\n\t\t\t\t\tinitFold={initFold}\n\t\t\t\t\tfoldLastUpdated={foldLastUpdated}\n\t\t\t\t\tfoldKey={layoutState.curFold}\n\t\t\t\t\tfoldState={foldState}\n\t\t\t\t\tfoldStateHash={foldStateHash}\n\t\t\t\t\teditorState={editorState}\n\t\t\t\t\teditorStateHash={editorStateHash}\n\t\t\t\t\tsetFoldState={setFoldState}\n\t\t\t\t\tinitStep={-1}\n\t\t\t\t\tctrlOverlay={ctrlOverlay}\n\t\t\t\t\toverlayPos={overlayPos}\n\t\t\t\t/>\n\t\t\t</Canvas>\n\t\t\t{Object.values(overlays)}\n\t\t</React.Fragment>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tlayoutState: state.appReducer.layoutState,\n\t\tlayoutStateHash: state.appReducer.layoutState.hash,\n\t\tfoldState: state.appReducer.foldState,\n\t\tfoldStateHash: state.appReducer.foldState.hash,\n\t\teditorState: state.appReducer.editorState,\n\t\teditorStateHash: state.appReducer.editorState.hash,\n\t};\n};\n\nexport default connect(mapStateToProps, { setLayoutState, setFoldState })(Scene);\n","/home/bbor/dev/origamiodyssey/src/infra/appReducer.js",["159"],"/**\n * FILENAME: appReducer.js\n *\n * DESCRIPTION: Handles state update for all layout actions.\n */\n\nimport { initAppReducerState, Actions } from './constants';\n\nconst finalInitState = JSON.parse(JSON.stringify(initAppReducerState));\n\nexport const appReducer = (state = finalInitState, action) => {\n\tlet newState = Object.assign({}, state);\n\n\tswitch (action.type) {\n\t\tcase Actions.SET_SHOW_NAV_DRAWER:\n\t\t\t// If passed a val set to that, otherwise toggle\n\t\t\tnewState.showNavDrawer = action.payload !== undefined ? action.payload : !newState.showNavDrawer;\n\t\t\tbreak;\n\t\tcase Actions.SET_LAYOUT_STATE:\n\t\t\tconsole.log('[SET_LAYOUT_STATE]', action.payload);\n\t\t\tObject.assign(newState.layoutState, action.payload || initAppReducerState.layoutState);\n\t\t\tnewState.layoutState.hash++;\n\t\t\tbreak;\n\t\tcase Actions.SET_FOLD_STATE:\n\t\t\tconsole.log('[SET_FOLD_STATE]', action.payload);\n\t\t\tObject.assign(newState.foldState, action.payload || initAppReducerState.foldState);\n\t\t\tnewState.foldState.hash++;\n\t\t\tbreak;\n\t\tcase Actions.SET_EDITOR_STATE:\n\t\t\tconsole.log('[SET_EDITOR_STATE]', action.payload);\n\t\t\tObject.assign(newState.editorState, action.payload || initAppReducerState.editorState);\n\t\t\tnewState.editorState.hash++;\n\t\t\tbreak;\n\t\tcase Actions.SET_USER_STATE:\n\t\t\tconsole.log('[SET_USER_STATE]', action.payload);\n\t\t\tObject.assign(newState.userState, action.payload || initAppReducerState.userState);\n\t\t\tnewState.userState.hash++;\n\t\t\tbreak;\n\t}\n\n\treturn newState;\n};\n","/home/bbor/dev/origamiodyssey/src/style/theme.js",["160"],"/home/bbor/dev/origamiodyssey/src/anim/Paper.js",["161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184"],"/home/bbor/dev/origamiodyssey/src/infra/actions.js",[],"/home/bbor/dev/origamiodyssey/src/layout/NavDrawer.js",["185","186","187","188","189","190","191","192","193"],"/**\n * FILENAME: NavDrawer.js \n *\n * DESCRIPTION: A sidebar-based nav tree, custom built to take advantage of react-spring.\n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SwipeableDrawer, Button, List, Divider, ListItem, } from '@material-ui/core';\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nimport { Pages, initNavTree } from \"./../infra/constants\";\nimport { setShowNavDrawer, setLayoutState, setFoldState } from \"./../infra/actions\";\nimport useStyles from \"./../style/theme\";\n\nexport const NavDrawer = props => {\n\tconst { page, showNavDrawer, setShowNavDrawer, layoutState, setLayoutState, foldState, setFoldState, userState } = props;\n\n\tconst [navTreeData, setNavTree] = useState(initNavTree);\n\tconst styles = useStyles();\n\n\tconst { loginWithRedirect, isAuthenticated, isLoading } = useAuth0();\n\n\tconst findNode = (key, node = navTreeData, path = []) => {\n\t\t// Root case - recurse into array of subtrees\n\t\tif (Array.isArray(node)) {\n\t\t\treturn node.reduce((acc, childNode) => {\n\t\t\t\tif (!acc) {\n\t\t\t\t\tconst ret = findNode(key, childNode, path);\n\n\t\t\t\t\tif (ret && ret[1]) {\n\t\t\t\t\t\tacc = ret;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t}, null) || [null, null];\n\n\t\t// Success case - we found the node\n\t\t} else if (node.key === key) {\n\t\t\treturn [[node.key, ...path], node];\n\n\t\t// Child case - recurse into children\n\t\t} else if (node.children) {\n\t\t\treturn node.children.reduce((acc, childNode) => {\n\t\t\t\tif (!acc) {\n\t\t\t\t\tconst [foundPath, foundNode] = findNode(key, childNode, path);\n\n\t\t\t\t\tif (foundNode) {\n\t\t\t\t\t\tacc = [[key, ...foundPath], foundNode];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn acc;\n\t\t\t}, null) || [null, null];\n\t\t}\n\n\t\t// Failure case - return null\n\t\treturn [[], null];\n\t}\n\n\tconst setNode = (path, field, val, node = navTreeData) => {\n\t\tlet newNavTree = [...navTreeData];\n\n\t\t// Nested function that recurses through the tree to modify a node\n\t\tconst recursiveSet = (path, node = newNavTree) => {\n\t\t\tif (!path || path.length === 0) {\n\t\t\t\tnode[field] = val; \n\t\t\t} else if (Array.isArray(node)) {\n\t\t\t\tlet child = node.find(e => e.key === path[0]);\n\t\t\t\trecursiveSet(path.slice(1), child);\n\t\t\t} else if (node.children) {\n\t\t\t\tlet child = node.children.find(e => e.key === path[0]);\n\t\t\t\trecursiveSet(path.slice(1), child);\n\t\t\t}\n\t\t}\n\n\t\trecursiveSet(path);\n\t\tsetNavTree(newNavTree);\n\t}\n\n\tconst handleNavDrawerSelect = (event, key) => {\n\t\tif (!key) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the key is a page ID, just take us to that page\n\t\tif (Object.keys(Pages).includes(key)) {\n\t\t\tsetLayoutState({ page: key });\n\t\t\tsetShowNavDrawer(false);\n\t\t\treturn;\n\t\t} \n\n\t\t// If the node has children, show or hide them on parent click\n\t\tconst [path, node] = findNode(key);\n\t\tif (node.children) {\n\t\t\tsetNode(path, \"expanded\", !node.expanded);\n\t\t\treturn;\n\t\t}\n\n\t\t// Else handle key-specific behavior (i.e. everything else)\n\t\tswitch (key) {\n\t\t\tcase \"github\":\n\t\t\t\twindow.open('https://github.com/robbwdoering/origamiodyssey', '_blank');\n\t\t\t\tbreak;\n\t\t\tcase \"login\":\n\t\t\t\tloginWithRedirect();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"unhandled navDrawer option\", key);\n\t\t}\n\t\tsetShowNavDrawer(false);\n\t}\n\n\tconst conditionalEx = condName => {\n\t\tif (!condName) {\n\t\t\treturn true;\n\t\t}\n\n\t\tswitch(condName) {\n\t\t\tcase \"is_saved_fold\":\n\t\t\t\treturn layoutState.page !== Pages.Fold && foldState.stepIdx !== -1;\n\t\t\tcase \"is_logged_in\":\n\t\t\tconsole.log(\"[conditionalEx]\", isAuthenticated);\n\t\t\t\treturn isAuthenticated;\n\t\t\tcase \"is_not_logged_in\":\n\t\t\t\treturn !isAuthenticated;\n\t\t\tdefault:\n\t\t\t\tconsole.error(\"passed invalid conditional: \", condName);\n\t\t\t\treturn true;\n\t\t}\n\t}\n\n\tconst renderNavNode = (node, nestedLevel = 0) => {\n\t\tif (!node || node.hidden || !conditionalEx(node.conditional)) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Nested component that just renders one node, with no regard for hierarchy beyond tracking nestedLevel\n\t\tconst Node = ({ node, nestedLevel }) => {\n\t\t\tconst icon = node.icon || (node.children ? (node.expanded ? <ArrowDropDownIcon /> : <ArrowRightIcon />) : null );\n\n\t\t\treturn (\n\t\t\t\t<ListItem \n\t\t\t\t\tclassName={`nested-level-${nestedLevel} ${node.className || \"\"}`}\n\t\t\t\t\tkey={node.key}\n\t\t\t\t\tbutton\n\t\t\t\t\tonClick={e => handleNavDrawerSelect(e, node.key)}\n\t\t\t\t>\n\t\t\t\t\t{icon && <ListItemIcon> {icon} </ListItemIcon>}\n\t\t\t\t\t<ListItemText> {node.text} </ListItemText>\n\t\t\t\t</ListItem>\n\t\t\t);\n\t\t};\n\n\t\tlet ret = [<Node key={\"node_\"+node.key} node={node} nestedLevel={nestedLevel} />];\n\n\t\tif (node.children && node.expanded) {\n\t\t\tnode.children.forEach(child => {\n\t\t\t\tret = ret.concat(renderNavNode(child, nestedLevel + 1));\n\t\t\t});\n\t\t};\n\n\t\treturn ret;\n\t};\n\n\treturn (\n\t\t<SwipeableDrawer\n\t\t\tanchor='left'\n\t\t\tkey=\"swipable-drawer\"\n\t\t\tclasses={{\n\t\t\t\troot: styles.navDrawerRoot,\n\t\t\t\tpaper: styles.navDrawerPaper\n\t\t\t}}\n\t\t\topen={showNavDrawer}\n\t\t\tonOpen={() => setShowNavDrawer(true)}\n\t\t\tonClose={() => setShowNavDrawer(false)}\n\t\t>\n\t\t\t<List key=\"main-list\">\n\t\t\t\t{navTreeData.reduce((acc, node) => {\n\t\t\t\t\tacc = acc.concat(renderNavNode(node));\n\t\t\t\t\treturn acc;\n\t\t\t\t}, [])}\n\t\t\t</List>\n\t\t</SwipeableDrawer>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tlayoutState: state.appReducer.layoutState,\n\t\tlayoutStateHash: state.appReducer.layoutState.hash,\n\t\tfoldState: state.appReducer.foldState,\n\t\tshowNavDrawer: state.appReducer.showNavDrawer,\n\t\tuserState: state.appReducer.userState\n\t};\n};\n\nexport default connect(mapStateToProps, { setShowNavDrawer, setLayoutState, setFoldState })(NavDrawer);","/home/bbor/dev/origamiodyssey/src/layout/pages/ModelSelect.js",["194","195","196","197","198","199","200","201","202","203","204","205","206","207","208"],"/**\n * FILENAME: ModelSelect.js\n *\n * DESCRIPTION: This page allows the user to browse through cards, read details on models, and select one to fold.\n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useUpdate, useSpring, useSprings, animated, config } from 'react-spring';\n\nimport {\n\tDivider,\n\tTypography,\n\tCardMedia,\n\tCardActionArea,\n\tCardActions,\n\tCardContent,\n\tButton,\n\tGrid,\n\tFab,\n\tCard,\n\tChip\n} from '@material-ui/core';\nimport FilterList from '@material-ui/icons/FilterList';\nimport Clear from '@material-ui/icons/Clear';\n\nimport useStyles from './../../style/theme';\nimport { Folds, Pages, Tags, TagCategories } from './../../infra/constants';\nimport { setLayoutState } from './../../infra/actions';\nimport ModelCardContainer from './ModelCard';\nconst AnimatedCard = animated(Card);\n\nexport const ModelSelect = props => {\n\tconst { layoutState, setLayoutState } = props;\n\tconst classes = useStyles();\n\n\t// ----------\n\t// STATE INIT\n\t// ----------\n\t// Used to track which card is currently open\n\tconst [activeIndex, setActiveIndex] = useState(-1);\n\n\t// Used to track which card is currently open\n\tconst [filterTags, setFilterTags] = useState(new Set());\n\n\tconst [curHash, setHash] = useState(0);\n\n\tconst cardRefs = useRef(Object.keys(Folds).map(() => createRef()));\n\n\t// ----------------\n\t// MEMBER FUNCTIONS\n\t// ----------------\n\n\t/**\n\t * Reads the list of all cards, and decides which to include.\n\t * Note that this is likely to grow suddenly and quickly in complexity as soon as we start\n\t * including folds from other sources, or, god forbid, external REST sources.\n\t * @return an array of Fold objects - see constants.js for format\n\t */\n\tconst filterCardList = () => {\n\t\treturn Object.keys(Folds).filter(() => true);\n\t};\n\n\tconst triggerRerender = () => {\n\t\tsetHash(cur => cur + 1);\n\t};\n\n\t/**\n\t * Handles a click on one of the cards - just prompts update and relies on hooks to do actual work.\n\t */\n\tconst handleCardClick = (event, index) => {\n\t\tsetActiveIndex(activeIndex === index ? -1 : index);\n\n\t\t// TODO - redo this whole thing with React Portals\n\t\tsetTimeout(() => triggerRerender(), 50);\n\t};\n\n\tconst generateFilterCardStyle = () => {\n\t\tconst isActive = activeIndex === -2;\n\t\treturn {\n\t\t\theight: isActive ? 'min-content' : '64px'\n\t\t};\n\t};\n\n\tconst handleFilterTagClick = tagKey => {\n\t\tlet newFilterTags = new Set(filterTags);\n\n\t\tif (newFilterTags.has(tagKey)) {\n\t\t\tnewFilterTags.delete(tagKey);\n\t\t} else {\n\t\t\tnewFilterTags.add(tagKey);\n\t\t}\n\n\t\tsetFilterTags(newFilterTags);\n\t};\n\n\tconst tagsAreHidden = (obj, searchStr) => {\n\t\tlet ret = false;\n\t\tif (filterTags.size) {\n\t\t\t// If there's filters and this doesn't match, hide it\n\t\t\tret = ret || !obj.tags.some(tagKey => filterTags.has(tagKey));\n\t\t}\n\t\tif (searchStr.length) {\n\t\t\t// If there's a search str and this doesn't match, hide it\n\t\t\tret =\n\t\t\t\tret ||\n\t\t\t\t!(obj.name.toLowerCase().includes(searchStr) || obj.description.toLowerCase().includes(searchStr));\n\t\t}\n\t\t// console.log('tagsAreHidden', ret, searchStr, obj);\n\n\t\treturn ret;\n\t};\n\n\t// ---------\n\t// LIFECYCLE\n\t// ---------\n\t// Get the list of all cards to display\n\tconst cardList = useMemo(filterCardList, []);\n\n\tconst filterCardStyle = useMemo(generateFilterCardStyle, [window.innerWidth, activeIndex]);\n\tconst searchStr = useMemo(() => layoutState.searchStr.toLowerCase(), [layoutState.searchStr]);\n\n\tconst filterIsActive = activeIndex === -2;\n\tconst filterChoicesStyle = {\n\t\tdisplay: filterIsActive ? undefined : 'none'\n\t};\n\n\t// \t\n\n\tconsole.log(\"[ModelSelect] \", cardList.length, cardList, activeIndex);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div\n\t\t\t\tclassName={`${classes.filter_card} ${activeIndex === -2 ? classes.filter_card__active : ''}`}\n\t\t\t\tstyle={filterCardStyle}\n\t\t\t>\n\t\t\t\t<div className={classes.filter_toggle_container}>\n\t\t\t\t\t{filterTags.size > 0 && (\n\t\t\t\t\t\t<Fab\n\t\t\t\t\t\t\tclassName={classes.filter_clear}\n\t\t\t\t\t\t\tonClick={() => setFilterTags(new Set())}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Clear />\n\t\t\t\t\t\t</Fab>\n\t\t\t\t\t)}\n\t\t\t\t\t<Fab\n\t\t\t\t\t\tclassName={classes.filter_toggle}\n\t\t\t\t\t\tonClick={e => handleCardClick(e, -2)}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\tvariant=\"extended\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<FilterList />\n\t\t\t\t\t\tFilter\n\t\t\t\t\t</Fab>\n\t\t\t\t</div>\n\t\t\t\t<Grid container className={classes.filter_choices} style={filterChoicesStyle}>\n\t\t\t\t\t{Object.keys(TagCategories).map(categoryKey => (\n\t\t\t\t\t\t<Grid item className={classes.editor_row} {...TagCategories[categoryKey]}>\n\t\t\t\t\t\t\t{/* Title */}\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tclassName={classes.modelCard_label}\n\t\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\t\t\t\t\tcomponent=\"h4\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{TagCategories[categoryKey].text}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Divider />\n\n\t\t\t\t\t\t\t{Object.keys(Tags)\n\t\t\t\t\t\t\t\t.filter(tagKey => Tags[tagKey].category === categoryKey)\n\t\t\t\t\t\t\t\t.map(tagKey => (\n\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\tkey={tagKey}\n\t\t\t\t\t\t\t\t\t\tclickable\n\t\t\t\t\t\t\t\t\t\tlabel={Tags[tagKey].text}\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleFilterTagClick(tagKey)}\n\t\t\t\t\t\t\t\t\t\tcolor={filterTags.has(tagKey) ? 'primary' : undefined}\n\t\t\t\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\t\t\t\troot: `${classes.tagchip}`\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t))}\n\t\t\t\t</Grid>\n\t\t\t</div>\n\n\t\t\t<div className={classes.page_ModelSelect_container}>\n\t\t\t\t{cardList.map((cardKey, i) => {\n\t\t\t\t\tconst isHidden = tagsAreHidden(Folds[cardKey], searchStr);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<React.Fragment key={cardKey}>\n\t\t\t\t\t\t\t{/* This is the \"anchor\" that positions the card, takes advantage of CSS */}\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tref={cardRefs.current[i]}\n\t\t\t\t\t\t\t\tclassName={classes.modelCard_placeholder}\n\t\t\t\t\t\t\t\tstyle={{ display: isHidden ? 'none' : undefined }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ModelCardContainer\n\t\t\t\t\t\t\t\tplaceholderRef={cardRefs.current[i]} \n\t\t\t\t\t\t\t\tname={Folds[cardKey].name}\n\t\t\t\t\t\t\t\tcardKey={cardKey}\n\t\t\t\t\t\t\t\tfoldEntry={Folds[cardKey]}\n\t\t\t\t\t\t\t\tindex={i}\n\t\t\t\t\t\t\t\tisActive={activeIndex === i}\n\t\t\t\t\t\t\t\tshouldOpenFlipped={false}\n\t\t\t\t\t\t\t\tisHidden={isHidden}\n\t\t\t\t\t\t\t\thandleCardClick={handleCardClick}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tlayoutState: state.appReducer.layoutState,\n\t\tlayoutStateHash: state.appReducer.layoutState.hash\n\t};\n};\n\nexport default connect(mapStateToProps, { setLayoutState })(ModelSelect);\n","/home/bbor/dev/origamiodyssey/src/layout/pages/FoldControls.js",["209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227"],"/**\n * FILENAME: FoldControls.js \n *\n * DESCRIPTION: These are piecemeal controls for the fold state. \n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useUpdate, useSpring, useSprings, animated, config }  from 'react-spring';\n\nimport { SwipeableDrawer, Button,  ButtonGroup, List, Divider, ListItem, Card } from '@material-ui/core';\nimport SkipPrevious from \"@material-ui/icons/SkipPrevious\";\nimport SkipNext from \"@material-ui/icons/SkipNext\";\n\nimport useStyles from \"./../../style/theme\";\nimport { Folds } from \"./../../infra/constants\";\nimport { setFoldState } from \"./../../infra/actions\";\n// const AnimatedCard = animated(Card);\n\nexport const FoldControls = props => {\n\tconst { windowHeight, foldState, foldStateHash, setFoldState } = props;\n\n\t// ----------\n\t// STATE INIT \n\t// ----------\n\tconst classes = useStyles();\n\tconst [cardRefs, setCardRefs] = useState([]);\n\tconst [curHash, setHash] = useState(0);\n\n\t// ----------------\n\t// MEMBER FUNCTIONS \n\t// ----------------\n\n\t// Changes the current instructional sequential step, prompting animation.\n\tconst changeStep = (delta) => {\n\t\tlet newStepIndex = Math.min(Math.max(foldState.stepIdx + delta, -1), foldState.maxSteps);\n\t\tsetFoldState({\n\t\t\tstepIdx: newStepIndex\n\t\t});\n\t};\n\n\tconst calcControlsPosition = () => {\n\t\treturn (window.innerWidth - 128) / 2;\n\t}\n\n\tconst triggerRerender = () => {\n\t\tsetHash(cur => cur + 1);\n\t};\n\n\t// ---------\n\t// LIFECYCLE\n\t// ---------\n\n\tconst buttonClasses = useMemo(() => ({\n\t\troot: classes.fold_controls_button,\n\t\tlabel: classes.fold_controls_button_label\n\t}), []);\n\n\t// Rerender whenever the page resizes\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"resize\", triggerRerender);\n\t}, []);\n\n\tconst ctrlLeft = useMemo(calcControlsPosition, [window.innerWidth]);\n\n    return (\n    \t<React.Fragment>\n\t\t\t<Card className={classes.fold_controls} style={{left: ctrlLeft}} >\n\t\t\t\t<ButtonGroup className={classes.fold_controls_button_container} color=\"primary\" variant=\"text\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclasses={buttonClasses}\n\t\t\t\t\t\tonClick={() => changeStep(-1)}\n\t\t\t\t\t\tdisabled={foldState.stepIdx < 0}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SkipPrevious className={classes.fold_controls_button_icon} />\n\t\t\t\t\t\tPrev\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclasses={buttonClasses}\n\t\t\t\t\t\tonClick={() => changeStep(1)}\n\t\t\t\t\t\tdisabled={foldState.stepIdx >= foldState.maxSteps - 1}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SkipNext className={classes.fold_controls_button_icon} />\n\t\t\t\t\t\tNext\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n    \t\t</Card>\n    \t</React.Fragment>\n    );\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tfoldState: state.appReducer.foldState,\n\t\tfoldStateHash: state.appReducer.foldState.hash\n\t};\n};\n\nexport default connect(mapStateToProps, { setFoldState })(FoldControls);\n",["228","229"],"/home/bbor/dev/origamiodyssey/src/layout/pages/User.js",["230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245"],"/**\n * FILENAME: User.js\n *\n * DESCRIPTION: This page allows the user to browser through cards, read details on models, and select one to fold.\n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useUpdate, useSpring, useSprings, animated, config } from 'react-spring';\n\nimport {\n\tSwipeableDrawer,\n\tMenu,\n\tButtonGroup,\n\tButton,\n\tSelect,\n\tInput,\n\tMenuItem,\n\tList,\n\tDivider,\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableContainer,\n\tTableHead,\n\tTableRow,\n\tListItem,\n\tCard,\n\tGrid,\n\tTypography,\n\tPaper\n} from '@material-ui/core';\nimport { ToggleButton } from '@material-ui/lab';\nimport Remove from '@material-ui/icons/Remove';\nimport ExitToApp from '@material-ui/icons/ExitToApp';\n\nimport { useAuth0 } from '@auth0/auth0-react';\n\nimport useStyles from './../../style/theme';\nimport { Folds, Pages } from './../../infra/constants';\nimport { setUserState, setLayoutState } from './../../infra/actions';\n// const AnimatedCard = animated(Card);\n\nexport const User = props => {\n\tconst { userState, setUserState, layoutState, setLayoutState } = props;\n\tconst classes = useStyles();\n\tconst { user, loginWithRedirect, isLoading, logout, isAuthenticated } = useAuth0();\n\tconst [addModelAnchor, setAddModelAnchor] = useState();\n\n\t// ----------\n\t// STATE INIT\n\t// ----------\n\n\t// ----------------\n\t// MEMBER FUNCTIONS\n\t// ----------------\n\n\tconst ControlRow = ({ text, children, ...rest }) => (\n\t\t<Grid item className={classes.editor_row} {...rest}>\n\t\t\t{/* Title */}\n\n\t\t\t<Typography className={classes.modelCard_label} variant=\"body2\" color=\"textSecondary\" component=\"h4\">\n\t\t\t\t{text}\n\t\t\t</Typography>\n\t\t\t<Divider />\n\n\t\t\t{children}\n\t\t</Grid>\n\t);\n\n\tconst handleUserFormChange = (name, value) => {\n\t\tsetUserState({ [name]: value });\n\t};\n\n\tconst handleModelSelection = foldKey => {\n\t\tsetAddModelAnchor(null);\n\n\t\t// Exit early if this is already in the list\n\t\tif (userState.modelList.find(entry => entry.foldKey === foldKey)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet newModelListEntry = {\n\t\t\tfoldKey: foldKey,\n\t\t\tinterval: 0,\n\t\t\trepetition: 0,\n\t\t\tefactor: 2.5\n\t\t};\n\n\t\tconst newModelList = [...userState.modelList, newModelListEntry];\n\t\tsetUserState({ modelList: newModelList });\n\t};\n\n\tconst handleOpenFold = foldKey => {\n\t\tsetLayoutState({\n\t\t\tpage: Pages.Fold,\n\t\t\tcurFold: foldKey\n\t\t});\n\t};\n\n\tconst handleRemoveFold = foldKey => {\n\t\tconst idx = userState.modelList.findIndex(entry => entry.foldKey === foldKey);\n\t\tconsole.log(\"[handleRemoveFold]\", idx)\n\t\t// Exit early if this isn't already in the list\n\t\tif (idx === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet newArr = [...userState.modelList];\n\t\tnewArr.splice(idx, 1);\n\n\t\tsetUserState({ modelList: newArr });\n\t};\n\n\t// ---------\n\t// LIFECYCLE\n\t// ---------\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<Typography className={classes.modelCard_label} variant=\"h3\" color=\"textSecondary\" component=\"h3\">\n\t\t\t\tLoading...\n\t\t\t</Typography>\n\t\t);\n\t} else if (!isAuthenticated) {\n\t\treturn (\n\t\t\t<Paper className={classes.user_login_prompt} elevation={3}>\n\t\t\t\t<Typography className={classes.modelCard_label} variant=\"h3\" color=\"textSecondary\" component=\"h3\">\n\t\t\t\t\tLogin\n\t\t\t\t</Typography>\n\n\t\t\t\t<Typography variant=\"body\" color=\"textSecondary\" component=\"body\">\n\t\t\t\t\tPlease login to access user page features and preferences.\n\t\t\t\t</Typography>\n\n\t\t\t\t<Button onClick={() => loginWithRedirect()} color=\"primary\">\n\t\t\t\t\tLogin\n\t\t\t\t</Button>\n\t\t\t</Paper>\n\t\t);\n\t}\n\n\tconsole.log('[User]', user);\n\n\treturn (\n\t\t<Grid container spacing={2}>\n\t\t\t{/* Profile Information */}\n\t\t\t<Grid item xs={6} md={4}>\n\t\t\t\t<Paper className={classes.user_profile} elevation={3}>\n\t\t\t\t\t<Typography className={classes.modelCard_label} variant=\"h3\" color=\"textSecondary\" component=\"h3\">\n\t\t\t\t\t\tProfile\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<br />\n\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t<ControlRow text=\"Email\" xs={12} md={8}>\n\t\t\t\t\t\t\t<div> {user.email} </div>\n\t\t\t\t\t\t</ControlRow>\n\t\t\t\t\t\t<ControlRow text=\"Logout\" xs={12} md={4}>\n\t\t\t\t\t\t\t<Button onClick={() => loginWithRedirect()} color=\"primary\">\n\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</ControlRow>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Paper>\n\t\t\t</Grid>\n\n\t\t\t{/* Preferences */}\n\t\t\t<Grid item xs={6} md={8}>\n\t\t\t\t<Paper className={classes.user_pref} elevation={2}>\n\t\t\t\t\t<Typography className={classes.modelCard_label} variant=\"h3\" color=\"textSecondary\" component=\"h3\">\n\t\t\t\t\t\tPreferences\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<br />\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t<Grid item xs={6} md={4}>\n\t\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\t\tvalue={userState.showEditor}\n\t\t\t\t\t\t\t\tselected={userState.showEditor}\n\t\t\t\t\t\t\t\tonChange={() => handleUserFormChange('showEditor', !userState.showEditor)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tShow Editor\n\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} md={8}>\n\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" component=\"h4\">\n\t\t\t\t\t\t\t\tShow special cards during instructions for controlling the animation, and identifying\n\t\t\t\t\t\t\t\tindividual vertices and edges in the paper.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item xs={6} md={4}>\n\t\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\t\tvalue={userState.showTimerAssess}\n\t\t\t\t\t\t\t\tselected={userState.showTimerAssess}\n\t\t\t\t\t\t\t\tonChange={() => handleUserFormChange('showTimerAssess', !userState.showTimerAssess)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tShow Timer\n\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} md={8}>\n\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" component=\"h4\">\n\t\t\t\t\t\t\t\tShow a timer that allows you to track model folding speed over time. Turning this on\n\t\t\t\t\t\t\t\tallows the assistant to identify your strengths and weakenesses better.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item xs={6} md={4}>\n\t\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\t\tvalue={userState.showLikertAssess}\n\t\t\t\t\t\t\t\tselected={userState.showLikertAssess}\n\t\t\t\t\t\t\t\tonChange={() => handleUserFormChange('showLikertAssess', !userState.showLikertAssess)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tShow Quality Prompts\n\t\t\t\t\t\t\t</ToggleButton>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} md={8}>\n\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" component=\"h4\">\n\t\t\t\t\t\t\t\tShow a prompt after completing a model, allowing you to track quality over time. Turning\n\t\t\t\t\t\t\t\tthis on allows the assistant to identify your strengths and weakenesses better.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Paper>\n\t\t\t</Grid>\n\n\t\t\t{/* Assistant */}\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Paper className={classes.user_assistant} elevation={2}>\n\t\t\t\t\t<Typography className={classes.modelCard_label} variant=\"h3\" color=\"textSecondary\" component=\"h3\">\n\t\t\t\t\t\tAssistant\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<br />\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={classes.user_add_model_button}\n\t\t\t\t\t\tonClick={event => setAddModelAnchor(event.currentTarget)}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd Model To Plan\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Menu\n\t\t\t\t\t\tname=\"modelAdd\"\n\t\t\t\t\t\tinput={<Input id=\"Menu-multiple-chip\" />}\n\t\t\t\t\t\tclassName={classes.user_add_model_menu}\n\t\t\t\t\t\tanchorEl={addModelAnchor}\n\t\t\t\t\t\topen={Boolean(addModelAnchor)}\n\t\t\t\t\t\tonClose={() => setAddModelAnchor(null)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{Object.keys(Folds)\n\t\t\t\t\t\t\t.filter(foldKey => !userState.modelList.find(entry => entry.foldKey === foldKey))\n\t\t\t\t\t\t\t.map(foldKey => (\n\t\t\t\t\t\t\t\t<MenuItem key={foldKey} value={foldKey} onClick={() => handleModelSelection(foldKey)}>\n\t\t\t\t\t\t\t\t\t{Folds[foldKey].name}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</Menu>\n\n\t\t\t\t\t<TableContainer>\n\t\t\t\t\t\t<Table>\n\t\t\t\t\t\t\t<TableHead className={classes.user_models_header}>\n\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t<TableCell className={classes.slimCol}> Controls </TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell> Model Name </TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell className={classes.slimCol}> Interval </TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell className={classes.slimCol}> Repetition </TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell className={classes.slimCol}> Difficulty </TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t{userState.modelList.map(entry => {\n\t\t\t\t\t\t\t\t\tconst foldObj = Folds[entry.foldKey];\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.slimCol}>\n\t\t\t\t\t\t\t\t\t\t\t\t<ButtonGroup className={classes.user_row_controls} color=\"primary\" variant=\"icon\" >\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={() => handleRemoveFold(entry.foldKey)} title=\"Remove this model from the schedule\"> <Remove /> </Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={() => handleOpenFold(entry.foldKey)} title=\"Start this fold\"> <ExitToApp /> </Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell> {foldObj.name} </TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.slimCol}> {entry.interval} </TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.slimCol}> {entry.repetition} </TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<TableCell className={classes.slimCol}> {entry.efactor} </TableCell>\n\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</TableContainer>\n\t\t\t\t</Paper>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tuserState: state.appReducer.userState,\n\t\tuserStateHash: state.appReducer.userState.hash,\n\t\tlayoutState: state.appReducer.layoutState,\n\t\tlayoutStateHash: state.appReducer.layoutState.hash\n\t};\n};\n\nexport default connect(mapStateToProps, { setUserState, setLayoutState })(User);\n","/home/bbor/dev/origamiodyssey/src/static/lettering.js",[],"/home/bbor/dev/origamiodyssey/src/layout/pages/FoldEditorCards.js",["246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267"],"/**\n * FILENAME: FoldEditorCards.js\n *\n * DESCRIPTION: These cards are shown on either side of the model, and allow realtime editing of .fold files.\n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useUpdate, useSpring, useSprings, animated, config } from 'react-spring';\nimport { JsonEditor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport Downloader from 'js-file-downloader';\n\nimport {\n\tButton,\n\tTypography,\n\tButtonGroup,\n\tChip,\n\tInput,\n\tSelect,\n\tMenuItem,\n\tGrid,\n\tList,\n\tDivider,\n\tListItem,\n\tCard\n} from '@material-ui/core';\nimport SkipPrevious from '@material-ui/icons/SkipPrevious';\nimport SkipNext from '@material-ui/icons/SkipNext';\nimport { ToggleButton } from '@material-ui/lab';\n\nimport useStyles from './../../style/theme';\nimport { Folds } from './../../infra/constants';\nimport { setFoldState, setEditorState } from './../../infra/actions';\n// const AnimatedCard = animated(Card);\n\nexport const FoldEditorCards = props => {\n\tconst {\n\t\tcurFold,\n\t\tinitFold,\n\t\tfoldLastUpdated,\n\t\twindowHeight,\n\t\tfoldOverrideCallback,\n\t\tfoldState,\n\t\tfoldStateHash,\n\t\tsetFoldState,\n\t\teditorState,\n\t\teditorStateHash,\n\t\tsetEditorState\n\t} = props;\n\n\t// ----------\n\t// STATE INIT\n\t// ----------\n\tconst classes = useStyles();\n\tconst [curHash, setHash] = useState(0);\n\tconst localFold = useRef();\n\n\t// ----------------\n\t// MEMBER FUNCTIONS\n\t// ----------------\n\tconst calcControlsPosition = () => {\n\t\treturn (window.innerWidth - 128) / 2;\n\t};\n\n\tconst CardLabel = ({ text }) => (\n\t\t<React.Fragment>\n\t\t\t<Typography className={classes.modelCard_label} variant=\"body2\" color=\"textSecondary\" component=\"h4\">\n\t\t\t\t{text}\n\t\t\t</Typography>\n\t\t\t<Divider />\n\t\t</React.Fragment>\n\t);\n\n\tconst ControlRow = ({ name, text, width, children }) => (\n\t\t<Grid item xs={width || 12} className={classes.editor_row}>\n\t\t\t{/* Title */}\n\t\t\t<CardLabel text={name} />\n\t\t\t{text !== undefined && (\n\t\t\t\t<Typography className={classes.editor_bodyText} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\t\t\t\t\t<strong>{text}</strong>\n\t\t\t\t</Typography>\n\t\t\t)}\n\n\t\t\t{children}\n\t\t</Grid>\n\t);\n\n\tconst resetLocalFold = () => {\n\t\t// console.log('[resetLocalFold]', initFold);\n\t\tlocalFold.current = JSON.parse(JSON.stringify(initFold));\n\t};\n\n\tconst handleFoldChange = e => {\n\t\tObject.assign(localFold.current, e);\n\t};\n\n\tconst handleSaveClick = () => {\n\t\tif (!localFold.current || !curFold) {\n\t\t\tconsole.error(\"Couldn't save file; no current value.\");\n\t\t\treturn;\n\t\t}\n\n\t\tfoldOverrideCallback(localFold.current);\n\t};\n\n\tconst handleExportClick = async () => {\n\t\tif (!localFold.current || !curFold) {\n\t\t\tconsole.error(\"Couldn't export file; no current value.\");\n\t\t\treturn;\n\t\t}\n\n\t\tlet fileDownloadUrl = `data:application/json,${encodeURIComponent(JSON.stringify(localFold.current, null, 2))}`;\n\t\t// fileDownloadUrl = URL.createObjectURL(fileDownloadUrl)\n\n\t\tnew Downloader({\n\t\t\turl: fileDownloadUrl,\n\t\t\tfilename: `${curFold}.json`\n\t\t}).then(() => {\n\t\t\tconsole.log('finished download.');\n\t\t});\n\t};\n\n\tconst handleEditorFormChange = (field, value) => {\n\t\tsetEditorState({ [field]: value });\n\t};\n\n\tconst handleSelectionChange = event => {\n\t\t// console.log('GOT EVENT! ', event.target);\n\t\tconst field = event.target.name;\n\t\tconst value = event.target.value;\n\n\t\tsetEditorState({ [field]: value });\n\t};\n\n\t// ---------\n\t// LIFECYCLE\n\t// ---------\n\tconst buttonClasses = useMemo(\n\t\t() => ({\n\t\t\troot: classes.fold_controls_button,\n\t\t\tlabel: classes.fold_controls_button_label\n\t\t}),\n\t\t[]\n\t);\n\n\tuseEffect(resetLocalFold, [initFold]);\n\n\tconst ctrlLeft = useMemo(calcControlsPosition, [window.innerWidth]);\n\n\t// If we don't have any fold file loaded yet, don't show these\n\tif (!initFold) {\n\t\treturn <div />;\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{/* Details on the fold state */}\n\t\t\t<Card className={classes.editorState}>\n\t\t\t\t<Typography className={classes.editor_cardTitle} variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n\t\t\t\t\tFold State\n\t\t\t\t</Typography>\n\t\t\t\t<Grid container>\n\t\t\t\t\t<ControlRow name=\"Step Index\" text={`${foldState.stepIdx + 2}/${foldState.maxSteps + 1}`} width={6} />\n\t\t\t\t</Grid>\n\t\t\t</Card>\n\n\t\t\t{/* Details on the current instruction */}\n\t\t\t<Card className={classes.editorDetails}>\n\t\t\t\t<Typography className={classes.editor_cardTitle} variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n\t\t\t\t\tEditor Controls\n\t\t\t\t</Typography>\n\t\t\t\t<Grid container>\n\t\t\t\t\t<ControlRow name=\"Highlighted Edges\">\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tname=\"edgeHighlights\"\n\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\tvalue={editorState.edgeHighlights}\n\t\t\t\t\t\t\tonChange={handleSelectionChange}\n\t\t\t\t\t\t\tinput={<Input id=\"select-multiple-chip\" />}\n\t\t\t\t\t\t\trenderValue={selected => (\n\t\t\t\t\t\t\t\t<div className={classes.chips}>\n\t\t\t\t\t\t\t\t\t{selected.map(idx => (\n\t\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\t\t\tlabel={initFold.edges_vertices[idx].toString()}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tclassName={classes.editor_select}\n\t\t\t\t\t\t\t// MenuProps={MenuProps}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{initFold.edges_vertices.map((edge, index) => {\n\t\t\t\t\t\t\t\tconst name = edge.toString();\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<MenuItem key={name} value={index}>\n\t\t\t\t\t\t\t\t\t\t{index}: {name}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"vertexHighlights\">\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tname=\"vertexHighlights\"\n\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\tvalue={editorState.vertexHighlights}\n\t\t\t\t\t\t\tonChange={handleSelectionChange}\n\t\t\t\t\t\t\tinput={<Input id=\"select-multiple-chip\" />}\n\t\t\t\t\t\t\trenderValue={selected => (\n\t\t\t\t\t\t\t\t<div className={classes.chips}>\n\t\t\t\t\t\t\t\t\t{selected.map(idx => (\n\t\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\t\t\tlabel={`${idx}: ${initFold.vertices_coords[idx].toString()}`}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tclassName={classes.editor_select}\n\t\t\t\t\t\t\t// MenuProps={MenuProps}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{initFold.vertices_coords.map((coords, index) => {\n\t\t\t\t\t\t\t\tconst name = coords.toString();\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<MenuItem key={name} value={index}>\n\t\t\t\t\t\t\t\t\t\t{index}: {name}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"faceHighlights\">\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tname=\"faceHighlights\"\n\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\tvalue={editorState.faceHighlights}\n\t\t\t\t\t\t\tonChange={handleSelectionChange}\n\t\t\t\t\t\t\tinput={<Input id=\"select-multiple-chip\" />}\n\t\t\t\t\t\t\trenderValue={selected => (\n\t\t\t\t\t\t\t\t<div className={classes.chips}>\n\t\t\t\t\t\t\t\t\t{selected.map(idx => (\n\t\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\t\t\tlabel={`${idx}: ${initFold.faces_vertices[idx].toString()}`}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tclassName={classes.editor_select}\n\t\t\t\t\t\t\t// MenuProps={MenuProps}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{initFold.faces_vertices.map((face, index) => {\n\t\t\t\t\t\t\t\tconst name = face.toString();\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<MenuItem key={name} value={index}>\n\t\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"Show Edges\" width={4}>\n\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\tselected={editorState.showEdges}\n\t\t\t\t\t\t\tonChange={() => handleEditorFormChange('showEdges', !editorState.showEdges)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"Show Vertices\" width={4}>\n\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\tselected={editorState.showVertices}\n\t\t\t\t\t\t\tonChange={() => handleEditorFormChange('showVertices', !editorState.showVertices)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"Show Faces\" width={4}>\n\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\tselected={editorState.showFaces}\n\t\t\t\t\t\t\tonChange={() => handleEditorFormChange('showFaces', !editorState.showFaces)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"Show Tri\" width={4}>\n\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\tselected={editorState.showTriangulations}\n\t\t\t\t\t\t\tonChange={() =>\n\t\t\t\t\t\t\t\thandleEditorFormChange('showTriangulations', !editorState.showTriangulations)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"Show Labels\" width={4}>\n\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\tselected={editorState.showLabels}\n\t\t\t\t\t\t\tonChange={() =>\n\t\t\t\t\t\t\t\thandleEditorFormChange('showLabels', !editorState.showLabels)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t</Grid>\n\t\t\t</Card>\n\n\t\t\t{/* Entry box for direct JSON manipulation */}\n\t\t\t<Card className={classes.editorEntry}>\n\t\t\t\t<Typography className={classes.editor_cardTitle} variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n\t\t\t\t\t<code>.fold</code> file\n\t\t\t\t</Typography>\n\t\t\t\t<ButtonGroup className={classes.editor_floatAction} color=\"primary\" variant=\"text\" size=\"large\">\n\t\t\t\t\t<Button onClick={handleSaveClick}> Local Save </Button>\n\t\t\t\t\t<Button onClick={handleExportClick}> Export To Disk </Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t\t<JsonEditor\n\t\t\t\t\tvalue={{\n\t\t\t\t\t\tfaces_vertices: initFold.faces_vertices,\n\t\t\t\t\t\tvertices_coords: initFold.vertices_coords,\n\t\t\t\t\t\tedges_vertices: initFold.edges_vertices,\n\t\t\t\t\t\tinstructions: initFold.instructions\n\t\t\t\t\t}}\n\t\t\t\t\tonChange={handleFoldChange}\n\t\t\t\t\thtmlElementProps={{ class: classes.editor_jsonTextArea }}\n\t\t\t\t\tallowedModes={['tree', 'form']}\n\t\t\t\t\tnavigationBar={false}\n\t\t\t\t\thistory={true}\n\t\t\t\t/>\n\t\t\t</Card>\n\t\t</React.Fragment>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tfoldState: state.appReducer.foldState,\n\t\tfoldStateHash: state.appReducer.foldState.hash,\n\t\teditorState: state.appReducer.editorState,\n\t\teditorStateHash: state.appReducer.editorState.hash\n\t};\n};\n\nexport default connect(mapStateToProps, { setFoldState, setEditorState })(FoldEditorCards);\n","/home/bbor/dev/origamiodyssey/src/infra/utils.js",["268","269"],"/**\n * FILENAME: Constants.js\n *\n * DESCRIPTION: Contains constants for use accross the app.\n */\n\n/*\n * This walks the tree recursively, collecting an array of steps at this \"level\".\n */\nexport const collectStepsForLevel = (fold, level, isDefault) => {\n\tconsole.log(\"[collectStepsForLevel]\", fold, level, isDefault);\n\tif (!fold || !fold.instructions) {\n\t\treturn [];\n\t}\n\n\treturn calcStepsForLevel(fold.instructions, level, isDefault);\n};\n\n/**\n * Recursive function to build the \"step array\" for a tree.\n * The basic concept here is that the user will choose a depth, then this will build an array\n * of sequential steps \"at\" that depth.\n * @returns: a 2D array of step objects\n */\nexport const calcStepsForLevel = (inst, curLevel, isDefault, path = '0') => {\n\tif (!inst.children && !inst.length) {\n\t\t// Error case\n\t\treturn null;\n\t}\n\n\tconst isDefaultNode = isDefault && inst.default;\n\n\t// Leaf node / base case - return this as one step\n\tif (Array.isArray(inst.children[0])) {\n\t\treturn [[path, ...inst.children]];\n\n\t\t// Ancestor nodes - return a list of steps\n\t} else {\n\t\tif (isDefaultNode) {\n\t\t\t// Recursive case: This is target, so return all leaves below this as one step\n\t\t\tlet allLeafDescendants = concatDescendants(inst, curLevel);\n\t\t\t// If we just found one leaf node, treat this as a normal step w/ a 2D arr\n\t\t\tif (allLeafDescendants.length === 1) {\n\t\t\t\tallLeafDescendants = allLeafDescendants[0];\n\t\t\t}\n\t\t\treturn [[path, ...allLeafDescendants]];\n\t\t} else {\n\t\t\t// Recursive case: still above target level, so keep drilling down\n\t\t\t// COLLECT steps returned from children into one array of steps\n\t\t\treturn inst.children.reduce((acc, childInst, childIdx) => {\n\t\t\t\tlet ret = calcStepsForLevel(childInst, curLevel + 1, isDefault, path + ',' + childIdx);\n\t\t\t\treturn ret ? acc.concat(ret) : acc;\n\t\t\t}, []);\n\t\t}\n\t}\n\n\treturn null;\n};\n\n/**\n * @returns: a 2D array of every leaf node found below this node\n */\nexport const concatDescendants = (inst, curLevel) => {\n\tif (Array.isArray(inst.children[0])) {\n\t\treturn [[...inst.children]];\n\t} else {\n\t\t// turn many 1d arrs into one - concat\n\t\treturn inst.children.reduce((acc, childInst) => {\n\t\t\tlet ret = concatDescendants(childInst, curLevel + 1);\n\t\t\treturn ret ? acc.concat(ret) : acc;\n\t\t}, []);\n\t}\n};\n\n/**\n * Recursive function to calculate the depth of the instruction tree\n */\nexport const calcMaxLevel = inst => {\n\tif (!inst) {\n\t\treturn 0;\n\t} else if (inst.children && Array.isArray(inst.children[0])) {\n\t\t// Base case: leaf node\n\t\treturn 1;\n\t} else if (inst.children) {\n\t\t// Recursive case: Return 1 plus the height of the tallest subtree\n\t\treturn 1 + Math.max(...inst.children.map(childInst => calcMaxLevel(childInst)));\n\t} else {\n\t\treturn 0;\n\t}\n};\n\nexport const findInUseFamilyNode = (stepArr, path) => {\n\treturn stepArr.reduce((acc, step, index) => {\n\t\t// True if inUse step is an ancestor or descendant of this step\n\t\tif (path.startsWith(step[0]) || step[0].startsWith(path)) {\n\t\t\t// First index holds the first discovered descendant\n\t\t\tif (acc[0] == -1) {\n\t\t\t\tacc[0] = index;\n\t\t\t}\n\n\t\t\t// Second index holds the last discovered descendant\n\t\t\tacc[1] = index;\n\t\t}\n\t\treturn acc;\n\t}, [-1, -1]);\n};\n\nexport const getHierNode = (instructions, path) => {\n\tif ((!path || !path.length) && instructions && instructions.desc) {\n\t\t// Base case: If we were passed an empty path, then this is the target node\n\t\treturn instructions;\n\t} else if (path && path.length && instructions.children) {\n\t\t// Recurse Case: Else keep drilling down\n\t\treturn getHierNode(instructions.children[parseInt(path[0])], path.slice(1));\n\t} else {\n\t\t// Error case: Return an error\n\t\treturn {};\n\t}\n};\n\n/**\n * Returns true if the origCmds array includes a non-flex command on an edge including this vert.\n * @param origCmds the array of the original commands to check against (i.e. the commands in the actual json file)\n * @param vertIdx the index of the vertex in question\n */\nexport const cmdsInvolveVert = (origCmds, vertIdx) => {\n\t// console.log(\"[cmdsInvolveVert]\", origCmds)\n\treturn (\n\t\torigCmds &&\n\t\torigCmds.find(cmd => (cmd.length !== 4 || !cmd[3].flex) && (cmd[0] === vertIdx || cmd[1] === vertIdx))\n\t);\n};\n\n/**\n * Returns true if the origCmds array includes a non-flex command on an edge including this vert.\n * @param origCmds the array of the original commands to check against (i.e. the commands in the actual json file)\n * @param vertIdx the index of the vertex in question\n */\nexport const cmdsInvolveEdge = (origCmds, edge) => {\n\t// console.log(\"[cmdsInvolveEdge]\", origCmds)\n\tif (stepIs3D(origCmds)) {\n\t\treturn origCmds.find(subCmds => cmdsInvolveEdge(subCmds, edge));\n\t}\n\n\treturn (\n\t\torigCmds &&\n\t\torigCmds.find(cmd => (cmd.length !== 4 || !cmd[3].flex) && (edge.includes(cmd[0]) && edge.includes(cmd[1])))\n\t);\n};\n\nexport const printPath = path => path.reduce((acc, idx, i) => (i ? ',' : '') + idx, '');\n\nexport const stepIs3D = step => step.length && step[0].length && Array.isArray(step[0][0]);\n\nexport const stepIs2D = step => step.length && Array.isArray(step[0]);\n\nexport const stepIs1D = step => step.length && !Array.isArray(step[0]);\n\nexport const stepHasArgs = step => step.length > 3 && step[3];\n\n/**\n * A comparison function for use in sorting lists of cmds (i.e. a step). \n * Right now just puts flex items first - this is because they don't initiate movement,\n * but need to be processed in full before any movement begins.\n */\nexport const cmdOrderingComparator = (lhs, rhs) => {\n\tconst lhsFlex = stepHasArgs(lhs) && lhs[3].flex;\n\tconst rhsFlex = stepHasArgs(lhs) && lhs[3].flex;\n\treturn (lhsFlex && !rhsFlex) ? 1 : (rhsFlex ? -1 : 0);\n};\n","/home/bbor/dev/origamiodyssey/src/layout/pages/InstructionalHierarchy.js",["270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303"],"/home/bbor/dev/origamiodyssey/src/layout/pages/ModelCard.js",["304","305","306","307","308","309","310","311","312","313","314","315","316","317","318"],"/**\n * FILENAME: ModelCard.js\n *\n * DESCRIPTION: This page allows the user to browse through cards, read details on models, and select one to fold.\n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useUpdate, useSpring, useSprings, animated, config } from 'react-spring';\n\nimport {\n\tDivider,\n\tTypography,\n\tCardMedia,\n\tCardActionArea,\n\tCardActions,\n\tCardContent,\n\tButton,\n\tGrid,\n\tFab,\n\tCard,\n\tChip\n} from '@material-ui/core';\nimport FilterList from '@material-ui/icons/FilterList';\nimport Clear from '@material-ui/icons/Clear';\n\nimport useStyles from './../../style/theme';\nimport { Folds, Pages, Tags, TagCategories } from './../../infra/constants';\nimport { setLayoutState } from './../../infra/actions';\nconst AnimatedCard = animated(Card);\n\n/**\n * Recreate the refs array, reusing elements. Note that this algo doesn't support reordering\n */\n// const updateCardRefs = () => {\n// \tsetCardRefs(elRefs =>\n// \t\tArray(cardList.length)\n// \t\t\t.fill()\n// \t\t\t.map((el, i) => cardRefs[i] || createRef())\n// \t);\n// };\n\n/**\n * A subcomponent that displays one card. This component needs to grow and shrink without affecting html\n * layout styling, so it relies on a placeholder div that only suggests a shape to the actual, absolute, Card.\n */\nexport const ModelCard = props => {\n\tconst { foldEntry, name, placeholderRef, cardKey, index, isActive, isHidden, handleCardClick, layoutState, setLayoutState } = props;\n\tconst [posHash, setPosHash] = useState(0);\n\tconst classes = useStyles();\n\tconst style = useRef({});\n\n\tuseEffect(() => console.log(\"[ModelCard]\", cardKey), []);\n\n\t/**\n\t * Pass the click event on to the parent function to open a fold page.\n\t */\n\tconst handleFoldClick = e => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\n\t\topenFold(cardKey);\n\t};\n\n\t/**\n\t * Open the fold page with the supplied model name, closing this page.\n\t */\n\tconst openFold = foldKey => {\n\t\tsetLayoutState({\n\t\t\tpage: Pages.Fold,\n\t\t\tcurFold: foldKey\n\t\t});\n\t};\n\n\t/**\n\t * Sub-subcomponent to show the label for a row on this card. This probably could be abstracted out, but it\n\t * doesn't seem worth it.\n\t */\n\tconst CardLabel = ({ text }) => (\n\t\t<React.Fragment>\n\t\t\t<Typography className={classes.modelCard_label} variant=\"body2\" color=\"textSecondary\" component=\"h4\">\n\t\t\t\t{text}\n\t\t\t</Typography>\n\t\t\t<Divider />\n\t\t</React.Fragment>\n\t);\n\n\t// INNER LIFECYCLE\n\n\t// Dynamically calculate the target size of the card\n\tstyle.current = {\n\t\theight: isActive ? '400px' : '180px',\n\t\twidth: isActive ? '400px' : '200px',\n\t\tdisplay: isHidden ? 'none' : undefined\n\t};\n\n\tif (placeholderRef && placeholderRef.current) {\n\t\tstyle.current.top = placeholderRef.current.offsetTop;\n\t\tstyle.current.left = placeholderRef.current.offsetLeft;\n\t}\n\n\t// Update hash when style changes so we can inform children\n\tuseEffect(() => setPosHash(cur => cur + 1), [style]);\n\n\t// Get the location of the current image using webpack  - probably only done once per card\n\tconst imagePath = useMemo(\n\t\t() => (layoutState.useImages ? require(`./../../static/${foldEntry.img}_thumbnail.png`) : undefined),\n\t\t[foldEntry.img, layoutState.useImages]\n\t);\n\n\tconsole.log(\"[ModelCard] \", style.current);\n\n\t// This is the actual card: an `absolute` element so it can grow or shrink in place without affecting others' positioning\n\treturn (\n\t\t\t<Card\n\t\t\t\tclassName={`${classes.modelCard} ${isActive ? classes.modelCard__active : ''}`}\n\t\t\t\tkey={cardKey}\n\t\t\t\tname={index}\n\t\t\t\tonClick={event => handleCardClick(event, index)}\n\t\t\t\tstyle={style.current}\n\t\t\t>\n\t\t\t\t<CardActionArea\n\t\t\t\t\tclassName={`${classes.modelCard_rail_container} ${\n\t\t\t\t\t\tisActive ? classes.modelCard_rail_container__active : ''\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t<div className={classes.modelCard_rail}>\n\t\t\t\t\t\t{/* Picture / Preview Model */}\n\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\tclassName={classes.modelCard_img}\n\t\t\t\t\t\t\tcomponent=\"img\"\n\t\t\t\t\t\t\talt={'Folded Model Picture'}\n\t\t\t\t\t\t\ttitle=\"Folded Model Picture\"\n\t\t\t\t\t\t\theight=\"120\"\n\t\t\t\t\t\t\t// image={imagePath}\n\t\t\t\t\t\t\timage={foldEntry.staticImg}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t{/* Title */}\n\t\t\t\t\t\t\t<Typography className={classes.modelCard_title} variant=\"h5\" component=\"h2\">\n\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t{/* Tags */}\n\t\t\t\t\t\t\t{props.isActive && (\n\t\t\t\t\t\t\t\t<div className={classes.tags} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\t\t\t\t\t\t\t\t\t{foldEntry.tags && foldEntry.tags.length\n\t\t\t\t\t\t\t\t\t\t? foldEntry.tags.map((tagKey, i) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={cardKey + '_' + tagKey}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclickable\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={Tags[tagKey].text}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`${Tags[tagKey].category\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? classes[`tags__${Tags[tagKey].category}`]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: undefined} ${classes.tagchip}`\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Details rail */}\n\t\t\t\t\t{isActive && (\n\t\t\t\t\t\t<div className={classes.modelCard_rail}>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t{props.isActive && (\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t{/* Attribution */}\n\t\t\t\t\t\t\t\t\t\t<CardLabel text=\"Creator\" />\n\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.modelCard_bodyText}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{foldEntry.author}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t\t\t\t\t<CardLabel text=\"Description\" />\n\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.modelCard_bodyText}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{foldEntry.description}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</CardActionArea>\n\n\t\t\t\t{/* Actions */}\n\t\t\t\t{isActive && (\n\t\t\t\t\t<CardActions classes={classes.modelCard_footer}>\n\t\t\t\t\t\t<Button size=\"small\" color=\"primary\">\n\t\t\t\t\t\t\tShare\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button size=\"small\" color=\"primary\">\n\t\t\t\t\t\t\tLearn More\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<div className={classes.modelCard_foldButton}>\n\t\t\t\t\t\t\t<Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={handleFoldClick}>\n\t\t\t\t\t\t\t\tFold\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</CardActions>\n\t\t\t\t)}\n\t\t\t</Card>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tlayoutState: state.appReducer.layoutState,\n\t\tlayoutStateHash: state.appReducer.layoutState.hash\n\t};\n};\n\nexport default connect(mapStateToProps, { setLayoutState })(ModelCard);\n",{"ruleId":"319","replacedBy":"320"},{"ruleId":"321","replacedBy":"322"},{"ruleId":"323","severity":1,"message":"324","line":8,"column":35,"nodeType":"325","messageId":"326","endLine":8,"endColumn":42},{"ruleId":"323","severity":1,"message":"327","line":8,"column":44,"nodeType":"325","messageId":"326","endLine":8,"endColumn":53},{"ruleId":"323","severity":1,"message":"328","line":13,"column":2,"nodeType":"325","messageId":"326","endLine":13,"endColumn":19},{"ruleId":"323","severity":1,"message":"329","line":16,"column":2,"nodeType":"325","messageId":"326","endLine":16,"endColumn":12},{"ruleId":"323","severity":1,"message":"330","line":17,"column":2,"nodeType":"325","messageId":"326","endLine":17,"endColumn":6},{"ruleId":"323","severity":1,"message":"331","line":18,"column":2,"nodeType":"325","messageId":"326","endLine":18,"endColumn":10},{"ruleId":"323","severity":1,"message":"332","line":32,"column":9,"nodeType":"325","messageId":"326","endLine":32,"endColumn":17},{"ruleId":"323","severity":1,"message":"333","line":32,"column":19,"nodeType":"325","messageId":"326","endLine":32,"endColumn":30},{"ruleId":"323","severity":1,"message":"334","line":35,"column":8,"nodeType":"325","messageId":"326","endLine":35,"endColumn":12},{"ruleId":"323","severity":1,"message":"335","line":41,"column":8,"nodeType":"325","messageId":"326","endLine":41,"endColumn":23},{"ruleId":"323","severity":1,"message":"336","line":45,"column":8,"nodeType":"325","messageId":"326","endLine":45,"endColumn":23},{"ruleId":"323","severity":1,"message":"337","line":11,"column":10,"nodeType":"325","messageId":"326","endLine":11,"endColumn":25},{"ruleId":"323","severity":1,"message":"338","line":11,"column":27,"nodeType":"325","messageId":"326","endLine":11,"endColumn":33},{"ruleId":"323","severity":1,"message":"339","line":11,"column":35,"nodeType":"325","messageId":"326","endLine":11,"endColumn":39},{"ruleId":"323","severity":1,"message":"340","line":11,"column":41,"nodeType":"325","messageId":"326","endLine":11,"endColumn":48},{"ruleId":"323","severity":1,"message":"341","line":11,"column":50,"nodeType":"325","messageId":"326","endLine":11,"endColumn":58},{"ruleId":"323","severity":1,"message":"342","line":12,"column":8,"nodeType":"325","messageId":"326","endLine":12,"endColumn":20},{"ruleId":"323","severity":1,"message":"343","line":13,"column":8,"nodeType":"325","messageId":"326","endLine":13,"endColumn":20},{"ruleId":"323","severity":1,"message":"344","line":14,"column":8,"nodeType":"325","messageId":"326","endLine":14,"endColumn":22},{"ruleId":"323","severity":1,"message":"345","line":15,"column":8,"nodeType":"325","messageId":"326","endLine":15,"endColumn":25},{"ruleId":"323","severity":1,"message":"346","line":18,"column":24,"nodeType":"325","messageId":"326","endLine":18,"endColumn":35},{"ruleId":"323","severity":1,"message":"347","line":31,"column":3,"nodeType":"325","messageId":"326","endLine":31,"endColumn":18},{"ruleId":"323","severity":1,"message":"348","line":34,"column":3,"nodeType":"325","messageId":"326","endLine":34,"endColumn":16},{"ruleId":"323","severity":1,"message":"349","line":37,"column":3,"nodeType":"325","messageId":"326","endLine":37,"endColumn":18},{"ruleId":"350","severity":1,"message":"351","line":160,"column":5,"nodeType":"352","endLine":160,"endColumn":7,"suggestions":"353"},{"ruleId":"350","severity":1,"message":"354","line":164,"column":5,"nodeType":"352","endLine":164,"endColumn":57,"suggestions":"355"},{"ruleId":"350","severity":1,"message":"356","line":167,"column":24,"nodeType":"352","endLine":167,"endColumn":45,"suggestions":"357"},{"ruleId":"350","severity":1,"message":"358","line":173,"column":5,"nodeType":"352","endLine":173,"endColumn":14,"suggestions":"359"},{"ruleId":"350","severity":1,"message":"360","line":175,"column":35,"nodeType":"352","endLine":175,"endColumn":53,"suggestions":"361"},{"ruleId":"350","severity":1,"message":"362","line":176,"column":45,"nodeType":"352","endLine":176,"endColumn":77,"suggestions":"363"},{"ruleId":"323","severity":1,"message":"364","line":8,"column":17,"nodeType":"325","messageId":"326","endLine":8,"endColumn":25},{"ruleId":"323","severity":1,"message":"365","line":8,"column":27,"nodeType":"325","messageId":"326","endLine":8,"endColumn":33},{"ruleId":"323","severity":1,"message":"324","line":8,"column":35,"nodeType":"325","messageId":"326","endLine":8,"endColumn":42},{"ruleId":"323","severity":1,"message":"327","line":8,"column":44,"nodeType":"325","messageId":"326","endLine":8,"endColumn":53},{"ruleId":"366","severity":1,"message":"367","line":12,"column":8,"nodeType":"368","messageId":"369","endLine":12,"endColumn":11},{"ruleId":"319","replacedBy":"370"},{"ruleId":"321","replacedBy":"371"},{"ruleId":"323","severity":1,"message":"364","line":7,"column":17,"nodeType":"325","messageId":"326","endLine":7,"endColumn":25},{"ruleId":"323","severity":1,"message":"365","line":7,"column":27,"nodeType":"325","messageId":"326","endLine":7,"endColumn":33},{"ruleId":"323","severity":1,"message":"324","line":7,"column":35,"nodeType":"325","messageId":"326","endLine":7,"endColumn":42},{"ruleId":"323","severity":1,"message":"327","line":7,"column":44,"nodeType":"325","messageId":"326","endLine":7,"endColumn":53},{"ruleId":"323","severity":1,"message":"372","line":17,"column":8,"nodeType":"325","messageId":"326","endLine":17,"endColumn":16},{"ruleId":"323","severity":1,"message":"324","line":8,"column":35,"nodeType":"325","messageId":"326","endLine":8,"endColumn":42},{"ruleId":"323","severity":1,"message":"327","line":8,"column":44,"nodeType":"325","messageId":"326","endLine":8,"endColumn":53},{"ruleId":"323","severity":1,"message":"373","line":12,"column":38,"nodeType":"325","messageId":"326","endLine":12,"endColumn":47},{"ruleId":"323","severity":1,"message":"374","line":17,"column":10,"nodeType":"325","messageId":"326","endLine":17,"endColumn":19},{"ruleId":"323","severity":1,"message":"375","line":17,"column":21,"nodeType":"325","messageId":"326","endLine":17,"endColumn":30},{"ruleId":"323","severity":1,"message":"376","line":17,"column":32,"nodeType":"325","messageId":"326","endLine":17,"endColumn":42},{"ruleId":"323","severity":1,"message":"377","line":17,"column":44,"nodeType":"325","messageId":"326","endLine":17,"endColumn":52},{"ruleId":"323","severity":1,"message":"378","line":17,"column":54,"nodeType":"325","messageId":"326","endLine":17,"endColumn":60},{"ruleId":"323","severity":1,"message":"379","line":21,"column":10,"nodeType":"325","messageId":"326","endLine":21,"endColumn":15},{"ruleId":"323","severity":1,"message":"380","line":21,"column":17,"nodeType":"325","messageId":"326","endLine":21,"endColumn":22},{"ruleId":"323","severity":1,"message":"381","line":67,"column":37,"nodeType":"325","messageId":"326","endLine":67,"endColumn":46},{"ruleId":"323","severity":1,"message":"347","line":67,"column":61,"nodeType":"325","messageId":"326","endLine":67,"endColumn":76},{"ruleId":"323","severity":1,"message":"382","line":73,"column":9,"nodeType":"325","messageId":"326","endLine":73,"endColumn":22},{"ruleId":"383","severity":1,"message":"384","line":14,"column":2,"nodeType":"385","messageId":"386","endLine":39,"endColumn":3},{"ruleId":"387","severity":1,"message":"388","line":98,"column":3,"nodeType":"389","messageId":"369","endLine":98,"endColumn":8},{"ruleId":"323","severity":1,"message":"390","line":11,"column":10,"nodeType":"325","messageId":"326","endLine":11,"endColumn":16},{"ruleId":"323","severity":1,"message":"373","line":11,"column":38,"nodeType":"325","messageId":"326","endLine":11,"endColumn":47},{"ruleId":"323","severity":1,"message":"391","line":11,"column":49,"nodeType":"325","messageId":"326","endLine":11,"endColumn":55},{"ruleId":"323","severity":1,"message":"375","line":16,"column":13,"nodeType":"325","messageId":"326","endLine":16,"endColumn":22},{"ruleId":"323","severity":1,"message":"392","line":36,"column":3,"nodeType":"325","messageId":"326","endLine":36,"endColumn":11},{"ruleId":"323","severity":1,"message":"393","line":37,"column":3,"nodeType":"325","messageId":"326","endLine":37,"endColumn":8},{"ruleId":"323","severity":1,"message":"394","line":42,"column":3,"nodeType":"325","messageId":"326","endLine":42,"endColumn":18},{"ruleId":"323","severity":1,"message":"348","line":45,"column":3,"nodeType":"325","messageId":"326","endLine":45,"endColumn":16},{"ruleId":"323","severity":1,"message":"349","line":48,"column":3,"nodeType":"325","messageId":"326","endLine":48,"endColumn":18},{"ruleId":"323","severity":1,"message":"395","line":54,"column":9,"nodeType":"325","messageId":"326","endLine":54,"endColumn":21},{"ruleId":"323","severity":1,"message":"396","line":54,"column":23,"nodeType":"325","messageId":"326","endLine":54,"endColumn":38},{"ruleId":"323","severity":1,"message":"397","line":57,"column":8,"nodeType":"325","messageId":"326","endLine":57,"endColumn":16},{"ruleId":"398","severity":1,"message":"399","line":339,"column":59,"nodeType":"400","messageId":"401","endLine":339,"endColumn":61},{"ruleId":"323","severity":1,"message":"402","line":496,"column":8,"nodeType":"325","messageId":"326","endLine":496,"endColumn":18},{"ruleId":"323","severity":1,"message":"403","line":538,"column":9,"nodeType":"325","messageId":"326","endLine":538,"endColumn":17},{"ruleId":"323","severity":1,"message":"404","line":792,"column":8,"nodeType":"325","messageId":"326","endLine":792,"endColumn":17},{"ruleId":"323","severity":1,"message":"405","line":826,"column":8,"nodeType":"325","messageId":"326","endLine":826,"endColumn":28},{"ruleId":"350","severity":1,"message":"406","line":939,"column":44,"nodeType":"352","endLine":942,"endColumn":3,"suggestions":"407"},{"ruleId":"350","severity":1,"message":"408","line":940,"column":3,"nodeType":"409","endLine":940,"endColumn":46},{"ruleId":"350","severity":1,"message":"408","line":941,"column":3,"nodeType":"409","endLine":941,"endColumn":43},{"ruleId":"350","severity":1,"message":"410","line":944,"column":33,"nodeType":"352","endLine":944,"endColumn":52,"suggestions":"411"},{"ruleId":"350","severity":1,"message":"412","line":945,"column":27,"nodeType":"352","endLine":945,"endColumn":36,"suggestions":"413"},{"ruleId":"350","severity":1,"message":"414","line":946,"column":39,"nodeType":"352","endLine":946,"endColumn":66,"suggestions":"415"},{"ruleId":"350","severity":1,"message":"416","line":947,"column":26,"nodeType":"352","endLine":947,"endColumn":50,"suggestions":"417"},{"ruleId":"323","severity":1,"message":"365","line":8,"column":27,"nodeType":"325","messageId":"326","endLine":8,"endColumn":33},{"ruleId":"323","severity":1,"message":"324","line":8,"column":35,"nodeType":"325","messageId":"326","endLine":8,"endColumn":42},{"ruleId":"323","severity":1,"message":"327","line":8,"column":44,"nodeType":"325","messageId":"326","endLine":8,"endColumn":53},{"ruleId":"323","severity":1,"message":"338","line":11,"column":27,"nodeType":"325","messageId":"326","endLine":11,"endColumn":33},{"ruleId":"323","severity":1,"message":"340","line":11,"column":41,"nodeType":"325","messageId":"326","endLine":11,"endColumn":48},{"ruleId":"323","severity":1,"message":"418","line":23,"column":10,"nodeType":"325","messageId":"326","endLine":23,"endColumn":14},{"ruleId":"323","severity":1,"message":"419","line":23,"column":89,"nodeType":"325","messageId":"326","endLine":23,"endColumn":101},{"ruleId":"323","severity":1,"message":"420","line":23,"column":103,"nodeType":"325","messageId":"326","endLine":23,"endColumn":112},{"ruleId":"323","severity":1,"message":"421","line":28,"column":46,"nodeType":"325","messageId":"326","endLine":28,"endColumn":55},{"ruleId":"323","severity":1,"message":"327","line":8,"column":44,"nodeType":"325","messageId":"326","endLine":8,"endColumn":53},{"ruleId":"323","severity":1,"message":"374","line":11,"column":10,"nodeType":"325","messageId":"326","endLine":11,"endColumn":19},{"ruleId":"323","severity":1,"message":"375","line":11,"column":21,"nodeType":"325","messageId":"326","endLine":11,"endColumn":30},{"ruleId":"323","severity":1,"message":"376","line":11,"column":32,"nodeType":"325","messageId":"326","endLine":11,"endColumn":42},{"ruleId":"323","severity":1,"message":"378","line":11,"column":54,"nodeType":"325","messageId":"326","endLine":11,"endColumn":60},{"ruleId":"323","severity":1,"message":"422","line":16,"column":2,"nodeType":"325","messageId":"326","endLine":16,"endColumn":11},{"ruleId":"323","severity":1,"message":"423","line":17,"column":2,"nodeType":"325","messageId":"326","endLine":17,"endColumn":16},{"ruleId":"323","severity":1,"message":"424","line":18,"column":2,"nodeType":"325","messageId":"326","endLine":18,"endColumn":13},{"ruleId":"323","severity":1,"message":"425","line":19,"column":2,"nodeType":"325","messageId":"326","endLine":19,"endColumn":13},{"ruleId":"323","severity":1,"message":"338","line":20,"column":2,"nodeType":"325","messageId":"326","endLine":20,"endColumn":8},{"ruleId":"323","severity":1,"message":"379","line":30,"column":17,"nodeType":"325","messageId":"326","endLine":30,"endColumn":22},{"ruleId":"323","severity":1,"message":"426","line":33,"column":7,"nodeType":"325","messageId":"326","endLine":33,"endColumn":19},{"ruleId":"323","severity":1,"message":"427","line":36,"column":23,"nodeType":"325","messageId":"326","endLine":36,"endColumn":37},{"ruleId":"323","severity":1,"message":"428","line":48,"column":9,"nodeType":"325","messageId":"326","endLine":48,"endColumn":16},{"ruleId":"350","severity":1,"message":"429","line":122,"column":59,"nodeType":"352","endLine":122,"endColumn":91,"suggestions":"430"},{"ruleId":"323","severity":1,"message":"365","line":8,"column":27,"nodeType":"325","messageId":"326","endLine":8,"endColumn":33},{"ruleId":"323","severity":1,"message":"431","line":8,"column":55,"nodeType":"325","messageId":"326","endLine":8,"endColumn":64},{"ruleId":"323","severity":1,"message":"374","line":11,"column":10,"nodeType":"325","messageId":"326","endLine":11,"endColumn":19},{"ruleId":"323","severity":1,"message":"375","line":11,"column":21,"nodeType":"325","messageId":"326","endLine":11,"endColumn":30},{"ruleId":"323","severity":1,"message":"376","line":11,"column":32,"nodeType":"325","messageId":"326","endLine":11,"endColumn":42},{"ruleId":"323","severity":1,"message":"377","line":11,"column":44,"nodeType":"325","messageId":"326","endLine":11,"endColumn":52},{"ruleId":"323","severity":1,"message":"378","line":11,"column":54,"nodeType":"325","messageId":"326","endLine":11,"endColumn":60},{"ruleId":"323","severity":1,"message":"337","line":13,"column":10,"nodeType":"325","messageId":"326","endLine":13,"endColumn":25},{"ruleId":"323","severity":1,"message":"339","line":13,"column":49,"nodeType":"325","messageId":"326","endLine":13,"endColumn":53},{"ruleId":"323","severity":1,"message":"340","line":13,"column":55,"nodeType":"325","messageId":"326","endLine":13,"endColumn":62},{"ruleId":"323","severity":1,"message":"341","line":13,"column":64,"nodeType":"325","messageId":"326","endLine":13,"endColumn":72},{"ruleId":"323","severity":1,"message":"380","line":18,"column":10,"nodeType":"325","messageId":"326","endLine":18,"endColumn":15},{"ruleId":"323","severity":1,"message":"432","line":23,"column":10,"nodeType":"325","messageId":"326","endLine":23,"endColumn":22},{"ruleId":"323","severity":1,"message":"348","line":23,"column":35,"nodeType":"325","messageId":"326","endLine":23,"endColumn":48},{"ruleId":"323","severity":1,"message":"433","line":29,"column":9,"nodeType":"325","messageId":"326","endLine":29,"endColumn":17},{"ruleId":"323","severity":1,"message":"434","line":29,"column":19,"nodeType":"325","messageId":"326","endLine":29,"endColumn":30},{"ruleId":"323","severity":1,"message":"428","line":30,"column":9,"nodeType":"325","messageId":"326","endLine":30,"endColumn":16},{"ruleId":"350","severity":1,"message":"435","line":59,"column":6,"nodeType":"352","endLine":59,"endColumn":8,"suggestions":"436"},{"ruleId":"350","severity":1,"message":"429","line":66,"column":49,"nodeType":"352","endLine":66,"endColumn":68,"suggestions":"437"},{"ruleId":"319","replacedBy":"438"},{"ruleId":"321","replacedBy":"439"},{"ruleId":"323","severity":1,"message":"365","line":8,"column":27,"nodeType":"325","messageId":"326","endLine":8,"endColumn":33},{"ruleId":"323","severity":1,"message":"324","line":8,"column":35,"nodeType":"325","messageId":"326","endLine":8,"endColumn":42},{"ruleId":"323","severity":1,"message":"327","line":8,"column":44,"nodeType":"325","messageId":"326","endLine":8,"endColumn":53},{"ruleId":"323","severity":1,"message":"431","line":8,"column":55,"nodeType":"325","messageId":"326","endLine":8,"endColumn":64},{"ruleId":"323","severity":1,"message":"374","line":11,"column":10,"nodeType":"325","messageId":"326","endLine":11,"endColumn":19},{"ruleId":"323","severity":1,"message":"375","line":11,"column":21,"nodeType":"325","messageId":"326","endLine":11,"endColumn":30},{"ruleId":"323","severity":1,"message":"376","line":11,"column":32,"nodeType":"325","messageId":"326","endLine":11,"endColumn":42},{"ruleId":"323","severity":1,"message":"377","line":11,"column":44,"nodeType":"325","messageId":"326","endLine":11,"endColumn":52},{"ruleId":"323","severity":1,"message":"378","line":11,"column":54,"nodeType":"325","messageId":"326","endLine":11,"endColumn":60},{"ruleId":"323","severity":1,"message":"337","line":14,"column":2,"nodeType":"325","messageId":"326","endLine":14,"endColumn":17},{"ruleId":"323","severity":1,"message":"440","line":18,"column":2,"nodeType":"325","messageId":"326","endLine":18,"endColumn":8},{"ruleId":"323","severity":1,"message":"339","line":21,"column":2,"nodeType":"325","messageId":"326","endLine":21,"endColumn":6},{"ruleId":"323","severity":1,"message":"341","line":29,"column":2,"nodeType":"325","messageId":"326","endLine":29,"endColumn":10},{"ruleId":"323","severity":1,"message":"441","line":30,"column":2,"nodeType":"325","messageId":"326","endLine":30,"endColumn":6},{"ruleId":"323","severity":1,"message":"442","line":47,"column":35,"nodeType":"325","messageId":"326","endLine":47,"endColumn":46},{"ruleId":"323","severity":1,"message":"443","line":49,"column":46,"nodeType":"325","messageId":"326","endLine":49,"endColumn":52},{"ruleId":"323","severity":1,"message":"431","line":8,"column":55,"nodeType":"325","messageId":"326","endLine":8,"endColumn":64},{"ruleId":"323","severity":1,"message":"374","line":11,"column":10,"nodeType":"325","messageId":"326","endLine":11,"endColumn":19},{"ruleId":"323","severity":1,"message":"375","line":11,"column":21,"nodeType":"325","messageId":"326","endLine":11,"endColumn":30},{"ruleId":"323","severity":1,"message":"376","line":11,"column":32,"nodeType":"325","messageId":"326","endLine":11,"endColumn":42},{"ruleId":"323","severity":1,"message":"377","line":11,"column":44,"nodeType":"325","messageId":"326","endLine":11,"endColumn":52},{"ruleId":"323","severity":1,"message":"378","line":11,"column":54,"nodeType":"325","messageId":"326","endLine":11,"endColumn":60},{"ruleId":"323","severity":1,"message":"339","line":25,"column":2,"nodeType":"325","messageId":"326","endLine":25,"endColumn":6},{"ruleId":"323","severity":1,"message":"341","line":27,"column":2,"nodeType":"325","messageId":"326","endLine":27,"endColumn":10},{"ruleId":"323","severity":1,"message":"444","line":30,"column":8,"nodeType":"325","messageId":"326","endLine":30,"endColumn":20},{"ruleId":"323","severity":1,"message":"445","line":31,"column":8,"nodeType":"325","messageId":"326","endLine":31,"endColumn":16},{"ruleId":"323","severity":1,"message":"380","line":35,"column":10,"nodeType":"325","messageId":"326","endLine":35,"endColumn":15},{"ruleId":"323","severity":1,"message":"394","line":43,"column":3,"nodeType":"325","messageId":"326","endLine":43,"endColumn":18},{"ruleId":"323","severity":1,"message":"432","line":44,"column":3,"nodeType":"325","messageId":"326","endLine":44,"endColumn":15},{"ruleId":"323","severity":1,"message":"348","line":47,"column":3,"nodeType":"325","messageId":"326","endLine":47,"endColumn":16},{"ruleId":"323","severity":1,"message":"419","line":48,"column":3,"nodeType":"325","messageId":"326","endLine":48,"endColumn":15},{"ruleId":"323","severity":1,"message":"349","line":50,"column":3,"nodeType":"325","messageId":"326","endLine":50,"endColumn":18},{"ruleId":"323","severity":1,"message":"428","line":58,"column":9,"nodeType":"325","messageId":"326","endLine":58,"endColumn":16},{"ruleId":"323","severity":1,"message":"446","line":58,"column":18,"nodeType":"325","messageId":"326","endLine":58,"endColumn":25},{"ruleId":"323","severity":1,"message":"447","line":141,"column":8,"nodeType":"325","messageId":"326","endLine":141,"endColumn":21},{"ruleId":"350","severity":1,"message":"435","line":146,"column":3,"nodeType":"352","endLine":146,"endColumn":5,"suggestions":"448"},{"ruleId":"323","severity":1,"message":"449","line":151,"column":8,"nodeType":"325","messageId":"326","endLine":151,"endColumn":16},{"ruleId":"350","severity":1,"message":"429","line":151,"column":49,"nodeType":"352","endLine":151,"endColumn":68,"suggestions":"450"},{"ruleId":"451","severity":1,"message":"452","line":57,"column":2,"nodeType":"453","messageId":"454","endLine":57,"endColumn":14},{"ruleId":"455","severity":1,"message":"456","line":97,"column":15,"nodeType":"457","messageId":"369","endLine":97,"endColumn":17},{"ruleId":"323","severity":1,"message":"431","line":8,"column":55,"nodeType":"325","messageId":"326","endLine":8,"endColumn":64},{"ruleId":"323","severity":1,"message":"374","line":11,"column":10,"nodeType":"325","messageId":"326","endLine":11,"endColumn":19},{"ruleId":"323","severity":1,"message":"375","line":11,"column":21,"nodeType":"325","messageId":"326","endLine":11,"endColumn":30},{"ruleId":"323","severity":1,"message":"376","line":11,"column":32,"nodeType":"325","messageId":"326","endLine":11,"endColumn":42},{"ruleId":"323","severity":1,"message":"377","line":11,"column":44,"nodeType":"325","messageId":"326","endLine":11,"endColumn":52},{"ruleId":"323","severity":1,"message":"378","line":11,"column":54,"nodeType":"325","messageId":"326","endLine":11,"endColumn":60},{"ruleId":"323","severity":1,"message":"337","line":13,"column":10,"nodeType":"325","messageId":"326","endLine":13,"endColumn":25},{"ruleId":"323","severity":1,"message":"458","line":13,"column":53,"nodeType":"325","messageId":"326","endLine":13,"endColumn":64},{"ruleId":"323","severity":1,"message":"339","line":13,"column":66,"nodeType":"325","messageId":"326","endLine":13,"endColumn":70},{"ruleId":"323","severity":1,"message":"340","line":13,"column":72,"nodeType":"325","messageId":"326","endLine":13,"endColumn":79},{"ruleId":"323","severity":1,"message":"341","line":13,"column":81,"nodeType":"325","messageId":"326","endLine":13,"endColumn":89},{"ruleId":"323","severity":1,"message":"459","line":16,"column":8,"nodeType":"325","messageId":"326","endLine":16,"endColumn":18},{"ruleId":"323","severity":1,"message":"460","line":17,"column":8,"nodeType":"325","messageId":"326","endLine":17,"endColumn":18},{"ruleId":"323","severity":1,"message":"380","line":20,"column":10,"nodeType":"325","messageId":"326","endLine":20,"endColumn":15},{"ruleId":"323","severity":1,"message":"461","line":22,"column":46,"nodeType":"325","messageId":"326","endLine":22,"endColumn":55},{"ruleId":"323","severity":1,"message":"432","line":28,"column":3,"nodeType":"325","messageId":"326","endLine":28,"endColumn":15},{"ruleId":"323","severity":1,"message":"348","line":32,"column":3,"nodeType":"325","messageId":"326","endLine":32,"endColumn":16},{"ruleId":"323","severity":1,"message":"347","line":35,"column":3,"nodeType":"325","messageId":"326","endLine":35,"endColumn":18},{"ruleId":"323","severity":1,"message":"428","line":47,"column":9,"nodeType":"325","messageId":"326","endLine":47,"endColumn":16},{"ruleId":"350","severity":1,"message":"462","line":52,"column":82,"nodeType":"352","endLine":52,"endColumn":99,"suggestions":"463"},{"ruleId":"323","severity":1,"message":"464","line":54,"column":8,"nodeType":"325","messageId":"326","endLine":54,"endColumn":16},{"ruleId":"398","severity":1,"message":"399","line":83,"column":28,"nodeType":"400","messageId":"401","endLine":83,"endColumn":30},{"ruleId":"323","severity":1,"message":"465","line":126,"column":8,"nodeType":"325","messageId":"326","endLine":126,"endColumn":25},{"ruleId":"466","severity":1,"message":"467","line":218,"column":15,"nodeType":"325","messageId":"468","endLine":218,"endColumn":22},{"ruleId":"323","severity":1,"message":"469","line":245,"column":13,"nodeType":"325","messageId":"326","endLine":245,"endColumn":21},{"ruleId":"323","severity":1,"message":"470","line":317,"column":8,"nodeType":"325","messageId":"326","endLine":317,"endColumn":17},{"ruleId":"350","severity":1,"message":"435","line":383,"column":3,"nodeType":"352","endLine":383,"endColumn":5,"suggestions":"471"},{"ruleId":"350","severity":1,"message":"472","line":386,"column":44,"nodeType":"352","endLine":389,"endColumn":3,"suggestions":"473"},{"ruleId":"350","severity":1,"message":"408","line":387,"column":3,"nodeType":"409","endLine":387,"endColumn":38},{"ruleId":"350","severity":1,"message":"408","line":388,"column":3,"nodeType":"409","endLine":388,"endColumn":35},{"ruleId":"350","severity":1,"message":"474","line":405,"column":5,"nodeType":"352","endLine":405,"endColumn":7,"suggestions":"475"},{"ruleId":"350","severity":1,"message":"476","line":407,"column":47,"nodeType":"352","endLine":407,"endColumn":83,"suggestions":"477"},{"ruleId":"350","severity":1,"message":"478","line":409,"column":26,"nodeType":"352","endLine":409,"endColumn":38,"suggestions":"479"},{"ruleId":"323","severity":1,"message":"480","line":413,"column":8,"nodeType":"325","messageId":"326","endLine":413,"endColumn":22},{"ruleId":"323","severity":1,"message":"431","line":8,"column":55,"nodeType":"325","messageId":"326","endLine":8,"endColumn":64},{"ruleId":"323","severity":1,"message":"374","line":11,"column":10,"nodeType":"325","messageId":"326","endLine":11,"endColumn":19},{"ruleId":"323","severity":1,"message":"375","line":11,"column":21,"nodeType":"325","messageId":"326","endLine":11,"endColumn":30},{"ruleId":"323","severity":1,"message":"376","line":11,"column":32,"nodeType":"325","messageId":"326","endLine":11,"endColumn":42},{"ruleId":"323","severity":1,"message":"378","line":11,"column":54,"nodeType":"325","messageId":"326","endLine":11,"endColumn":60},{"ruleId":"323","severity":1,"message":"481","line":21,"column":2,"nodeType":"325","messageId":"326","endLine":21,"endColumn":6},{"ruleId":"323","severity":1,"message":"482","line":22,"column":2,"nodeType":"325","messageId":"326","endLine":22,"endColumn":5},{"ruleId":"323","severity":1,"message":"483","line":26,"column":8,"nodeType":"325","messageId":"326","endLine":26,"endColumn":18},{"ruleId":"323","severity":1,"message":"484","line":27,"column":8,"nodeType":"325","messageId":"326","endLine":27,"endColumn":13},{"ruleId":"323","severity":1,"message":"380","line":30,"column":10,"nodeType":"325","messageId":"326","endLine":30,"endColumn":15},{"ruleId":"323","severity":1,"message":"485","line":30,"column":30,"nodeType":"325","messageId":"326","endLine":30,"endColumn":43},{"ruleId":"323","severity":1,"message":"426","line":32,"column":7,"nodeType":"325","messageId":"326","endLine":32,"endColumn":19},{"ruleId":"323","severity":1,"message":"486","line":51,"column":9,"nodeType":"325","messageId":"326","endLine":51,"endColumn":16},{"ruleId":"350","severity":1,"message":"487","line":55,"column":55,"nodeType":"352","endLine":55,"endColumn":57,"suggestions":"488"},{"ruleId":"323","severity":1,"message":"489","line":108,"column":8,"nodeType":"325","messageId":"326","endLine":108,"endColumn":17},"no-native-reassign",["490"],"no-negated-in-lhs",["491"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'ClickAwayListener' is defined but never used.","'Typography' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'showMenu' is assigned a value but never used.","'setShowMenu' is assigned a value but never used.","'fold' is assigned a value but never used.","'handleClickAway' is assigned a value but never used.","'handleClickLogo' is assigned a value but never used.","'SwipeableDrawer' is defined but never used.","'Button' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'ArrowRightIcon' is defined but never used.","'ArrowDropDownIcon' is defined but never used.","'initNavTree' is defined but never used.","'layoutStateHash' is assigned a value but never used.","'foldStateHash' is assigned a value but never used.","'editorStateHash' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchStateFromCookies' and 'saveStateToCookies'. Either include them or remove the dependency array.","ArrayExpression",["492"],"React Hook useEffect has a missing dependency: 'saveStateToCookies'. Either include it or remove the dependency array.",["493"],"React Hook useEffect has missing dependencies: 'layoutState' and 'setFoldState'. Either include them or remove the dependency array.",["494"],"React Hook useMemo has an unnecessary dependency: 'curHash'. Either exclude it or remove the dependency array.",["495"],"React Hook useMemo has a missing dependency: 'windowHeight'. Either include it or remove the dependency array.",["496"],"React Hook useMemo has missing dependencies: 'foldOverrideCallback', 'layoutState.curFold', and 'userState.showEditor'. Either include them or remove the dependency array.",["497"],"'useState' is defined but never used.","'useRef' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["490"],["491"],"'FrogBase' is defined but never used.","'useLoader' is defined but never used.","'useUpdate' is defined but never used.","'useSpring' is defined but never used.","'useSprings' is defined but never used.","'animated' is defined but never used.","'config' is defined but never used.","'Pages' is defined but never used.","'Folds' is defined but never used.","'paperSize' is assigned a value but never used.","'newOverlayPos' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","'Canvas' is defined but never used.","'extend' is defined but never used.","'position' is assigned a value but never used.","'scale' is assigned a value but never used.","'foldLastUpdated' is assigned a value but never used.","'instructions' is assigned a value but never used.","'setInstructions' is assigned a value but never used.","'rotation' is assigned a value but never used.","array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'isSameLine' is assigned a value but never used.","'normLine' is assigned a value but never used.","'printVect' is assigned a value but never used.","'updateScreenPosition' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'foldState.usingDefaults'. Either include it or remove the dependency array.",["498"],"React Hook useMemo has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","React Hook useEffect has missing dependencies: 'foldState.active', 'foldState.maxSteps', 'performCommands', 'performReverseCommands', 'prevStep', and 'stepArray'. Either include them or remove the dependency array.",["499"],"React Hook useEffect has missing dependencies: 'initFold' and 'setFoldObj'. Either include them or remove the dependency array.",["500"],"React Hook useEffect has a missing dependency: 'setFoldState'. Either include it or remove the dependency array.",["501"],"React Hook useEffect has missing dependencies: 'camera', 'classes.vertLabel', 'ctrlOverlay', and 'getXYForPos'. Either include them or remove the dependency array.",["502"],"'page' is assigned a value but never used.","'setFoldState' is assigned a value but never used.","'userState' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'CardMedia' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'AnimatedCard' is assigned a value but never used.","'setLayoutState' is assigned a value but never used.","'curHash' is assigned a value but never used.","React Hook useMemo has an unnecessary dependency: 'window.innerWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.innerWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["503"],"'createRef' is defined but never used.","'windowHeight' is assigned a value but never used.","'cardRefs' is assigned a value but never used.","'setCardRefs' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'classes.fold_controls_button' and 'classes.fold_controls_button_label'. Either include them or remove the dependency array.",["504"],["505"],["490"],["491"],"'Select' is defined but never used.","'Card' is defined but never used.","'layoutState' is assigned a value but never used.","'logout' is assigned a value but never used.","'SkipPrevious' is defined but never used.","'SkipNext' is defined but never used.","'setHash' is assigned a value but never used.","'buttonClasses' is assigned a value but never used.",["506"],"'ctrlLeft' is assigned a value but never used.",["507"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'ButtonGroup' is defined but never used.","'ExpandMore' is defined but never used.","'ExpandLess' is defined but never used.","'printPath' is defined but never used.","React Hook useMemo has a missing dependency: 'initFold'. Either include it or remove the dependency array.",["508"],"'trackTop' is assigned a value but never used.","'handleExpandClick' is assigned a value but never used.","no-use-before-define","'stepIdx' was used before it was defined.","usedBeforeDefined","'children' is assigned a value but never used.","'jumpToEnd' is assigned a value but never used.",["509"],"React Hook useMemo has missing dependencies: 'foldState.usingDefaults' and 'initFold'. Either include them or remove the dependency array.",["510"],"React Hook useEffect has a missing dependency: 'looperWorkerId'. Either include it or remove the dependency array.",["511"],"React Hook useEffect has missing dependencies: 'maxLevel' and 'refreshRenderRows'. Either include them or remove the dependency array.",["512"],"React Hook useEffect has missing dependencies: 'changeStep', 'foldState.repeatRange', 'foldState.repeatRoot', 'foldState.stepIdx', and 'looperDirection'. Either include them or remove the dependency array.",["513"],"'ctrlCardLeftPx' is assigned a value but never used.","'Grid' is defined but never used.","'Fab' is defined but never used.","'FilterList' is defined but never used.","'Clear' is defined but never used.","'TagCategories' is defined but never used.","'posHash' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'cardKey'. Either include it or remove the dependency array.",["514"],"'imagePath' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"535","fix":"536"},{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"521","fix":"541"},{"desc":"539","fix":"542"},{"desc":"521","fix":"543"},{"desc":"544","fix":"545"},{"desc":"539","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},"Update the dependencies array to be: [fetchStateFromCookies, saveStateToCookies]",{"range":"557","text":"558"},"Update the dependencies array to be: [layoutState.hash, foldState.hash, editorState.hash, saveStateToCookies]",{"range":"559","text":"560"},"Update the dependencies array to be: [layoutState, layoutState.curFold, setFoldState]",{"range":"561","text":"562"},"Update the dependencies array to be: []",{"range":"563","text":"564"},"Update the dependencies array to be: [layoutState.page, windowHeight]",{"range":"565","text":"566"},"Update the dependencies array to be: [foldOverrideCallback, layoutState.curFold, layoutState.page, userState.showEditor, windowHeight]",{"range":"567","text":"568"},"Update the dependencies array to be: [foldState.usingDefaults]",{"range":"569","text":"570"},"Update the dependencies array to be: [foldState.active, foldState.maxSteps, foldState.stepIdx, performCommands, performReverseCommands, prevStep, stepArray]",{"range":"571","text":"572"},"Update the dependencies array to be: [foldKey, initFold, setFoldObj]",{"range":"573","text":"574"},"Update the dependencies array to be: [foldKey, setFoldState, stepArray.length]",{"range":"575","text":"576"},"Update the dependencies array to be: [camera, classes.vertLabel, ctrlOverlay, editorState.showLabels, getXYForPos]",{"range":"577","text":"578"},"Update the dependencies array to be: [activeIndex]",{"range":"579","text":"580"},"Update the dependencies array to be: [classes.fold_controls_button, classes.fold_controls_button_label]",{"range":"581","text":"582"},{"range":"583","text":"564"},{"range":"584","text":"582"},{"range":"585","text":"564"},"Update the dependencies array to be: [initFold]",{"range":"586","text":"587"},{"range":"588","text":"582"},"Update the dependencies array to be: [foldState.usingDefaults, initFold]",{"range":"589","text":"590"},"Update the dependencies array to be: [looperWorkerId]",{"range":"591","text":"592"},"Update the dependencies array to be: [foldLastUpdated, foldState.stepIdx, maxLevel, refreshRenderRows]",{"range":"593","text":"594"},"Update the dependencies array to be: [changeStep, foldState.repeatRange, foldState.repeatRoot, foldState.stepIdx, looperDirection, looperHash]",{"range":"595","text":"596"},"Update the dependencies array to be: [cardKey]",{"range":"597","text":"598"},[4405,4407],"[fetchStateFromCookies, saveStateToCookies]",[4458,4510],"[layoutState.hash, foldState.hash, editorState.hash, saveStateToCookies]",[4596,4617],"[layoutState, layoutState.curFold, setFoldState]",[4819,4828],"[]",[4866,4884],"[layoutState.page, windowHeight]",[4931,4963],"[foldOverrideCallback, layoutState.curFold, layoutState.page, userState.showEditor, windowHeight]",[30212,30306],"[foldState.usingDefaults]",[30342,30361],"[foldState.active, foldState.maxSteps, foldState.stepIdx, performCommands, performReverseCommands, prevStep, stepArray]",[30390,30399],"[foldKey, initFold, setFoldObj]",[30440,30467],"[foldKey, setFoldState, stepArray.length]",[30495,30519],"[camera, classes.vertLabel, ctrlOverlay, editorState.showLabels, getXYForPos]",[3291,3323],"[activeIndex]",[1652,1654],"[classes.fold_controls_button, classes.fold_controls_button_label]",[1828,1847],[3543,3545],[3640,3659],[1719,1736],"[initFold]",[11647,11649],[11698,11776],"[foldState.usingDefaults, initFold]",[12128,12130],"[looperWorkerId]",[12180,12216],"[foldLastUpdated, foldState.stepIdx, maxLevel, refreshRenderRows]",[12245,12257],"[changeStep, foldState.repeatRange, foldState.repeatRoot, foldState.stepIdx, looperDirection, looperHash]",[1662,1664],"[cardKey]"]
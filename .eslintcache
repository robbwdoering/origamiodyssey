[{"/home/bbor/dev/origamiodyssey/src/index.js":"1","/home/bbor/dev/origamiodyssey/src/layout/Header.js":"2","/home/bbor/dev/origamiodyssey/src/layout/Body.js":"3","/home/bbor/dev/origamiodyssey/src/layout/Footer.js":"4","/home/bbor/dev/origamiodyssey/src/layout/pages/Splash.js":"5","/home/bbor/dev/origamiodyssey/src/layout/pages/Lesson.js":"6","/home/bbor/dev/origamiodyssey/src/infra/constants.js":"7","/home/bbor/dev/origamiodyssey/src/anim/Scene.js":"8","/home/bbor/dev/origamiodyssey/src/infra/appReducer.js":"9","/home/bbor/dev/origamiodyssey/src/style/theme.js":"10","/home/bbor/dev/origamiodyssey/src/anim/Paper.js":"11","/home/bbor/dev/origamiodyssey/src/infra/actions.js":"12","/home/bbor/dev/origamiodyssey/src/layout/NavDrawer.js":"13","/home/bbor/dev/origamiodyssey/src/layout/pages/ModelSelect.js":"14","/home/bbor/dev/origamiodyssey/src/layout/pages/FoldControls.js":"15","/home/bbor/dev/origamiodyssey/src/layout/pages/User.js":"16","/home/bbor/dev/origamiodyssey/src/static/lettering.js":"17","/home/bbor/dev/origamiodyssey/src/layout/pages/FoldEditorCards.js":"18","/home/bbor/dev/origamiodyssey/src/infra/utils.js":"19","/home/bbor/dev/origamiodyssey/src/layout/pages/InstructionalHierarchy.js":"20","/home/bbor/dev/origamiodyssey/src/layout/pages/ModelCard.js":"21","/home/bbor/dev/origamiodyssey/src/layout/pages/Timer.js":"22"},{"size":2295,"mtime":1619380718747,"results":"23","hashOfConfig":"24"},{"size":2241,"mtime":1619965792041,"results":"25","hashOfConfig":"24"},{"size":6316,"mtime":1619965356867,"results":"26","hashOfConfig":"24"},{"size":442,"mtime":1616978827522,"results":"27","hashOfConfig":"24"},{"size":0,"mtime":1616978827522,"results":"28","hashOfConfig":"24"},{"size":131,"mtime":1613020940457,"results":"29","hashOfConfig":"24"},{"size":7826,"mtime":1619916712942,"results":"30","hashOfConfig":"24"},{"size":3675,"mtime":1619842262830,"results":"31","hashOfConfig":"24"},{"size":2468,"mtime":1619924399763,"results":"32","hashOfConfig":"24"},{"size":8047,"mtime":1619967007156,"results":"33","hashOfConfig":"24"},{"size":31590,"mtime":1619965359818,"results":"34","hashOfConfig":"24"},{"size":741,"mtime":1619909058520,"results":"35","hashOfConfig":"24"},{"size":5667,"mtime":1619381326537,"results":"36","hashOfConfig":"24"},{"size":6589,"mtime":1619964989210,"results":"37","hashOfConfig":"24"},{"size":2814,"mtime":1616978827522,"results":"38","hashOfConfig":"24"},{"size":12865,"mtime":1619966495653,"results":"39","hashOfConfig":"24"},{"size":14459,"mtime":1619825902551,"results":"40","hashOfConfig":"24"},{"size":9940,"mtime":1619882527979,"results":"41","hashOfConfig":"24"},{"size":5820,"mtime":1619921141227,"results":"42","hashOfConfig":"24"},{"size":16300,"mtime":1619966864614,"results":"43","hashOfConfig":"24"},{"size":6592,"mtime":1619965493036,"results":"44","hashOfConfig":"24"},{"size":9445,"mtime":1619923998429,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"eii7vj",{"filePath":"49","messages":"50","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"48"},"/home/bbor/dev/origamiodyssey/src/index.js",[],["102","103"],"/home/bbor/dev/origamiodyssey/src/layout/Header.js",["104","105","106","107","108","109","110","111","112","113","114"],"/home/bbor/dev/origamiodyssey/src/layout/Body.js",["115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],"/home/bbor/dev/origamiodyssey/src/layout/Footer.js",["134","135","136","137","138"],"/**\n * FILENAME: Scene.js \n *\n * DESCRIPTION: Renders the basic of the animation. \n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nexport const Footer = props => {\n\tconst { } = props;\n\n\treturn (\n\t\t<div className=\"footer\">\n\t\t</div>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {};\n};\n\nexport default connect(mapStateToProps, {})(Footer);\n","/home/bbor/dev/origamiodyssey/src/layout/pages/Splash.js",[],"/home/bbor/dev/origamiodyssey/src/layout/pages/Lesson.js",[],["139","140"],"/home/bbor/dev/origamiodyssey/src/infra/constants.js",["141","142","143","144","145","146","147","148","149"],"/**\n * FILENAME: Constants.js\n *\n * DESCRIPTION: Contains constants for use accross the app.\n */\n\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport SchoolIcon from '@material-ui/icons/School';\nimport ClassIcon from '@material-ui/icons/Class';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\n\n// The FOLD files\nimport BirdBase from './../folds/BirdBase.json';\nimport BoatBase from './../folds/BoatBase.json';\nimport FrogBase from './../folds/FrogBase.json';\nimport WaterBombBase from './../folds/WaterBombBase.json';\nimport SailBoat from './../folds/SailBoat.json';\nimport Heart from './../folds/Heart.json';\nimport Crane from './../folds/Crane.json';\nimport Butterfly from './../folds/Butterfly.json';\nimport Lily from './../folds/Lily.json';\n\n// Images\nimport lilyImage from './../static/lily_thumbnail.png';\nimport craneImage from './../static/crane_thumbnail.png';\nimport butterflyImage from './../static/butterfly_thumbnail.png';\nimport heartImage from './../static/heart_thumbnail.png';\nimport sailboatImage from './../static/sailboat_thumbnail.png';\nimport waterbomb_baseImage from './../static/waterbomb_base_thumbnail.png';\nimport boat_baseImage from './../static/boat_base_thumbnail.png';\nimport bird_baseImage from './../static/bird_base_thumbnail.png';\n\nexport const Pages = {\n\tSplash: 'Splash',\n\tModelSelect: 'ModelSelect',\n\tFold: 'Fold',\n\tUser: 'User',\n\n\t// Used but undefined\n\tLesson: 'Lesson',\n\tHistory: 'History',\n\tLearnDashboard: 'LearnDashboard',\n\tTeachDashboard: 'TeachDashboard'\n};\n\nexport const TagCategories = {\n\ttype: {\n\t\ttext: 'Type',\n\t\txs: 6,\n\t\tsm: 4,\n\t\tmd: 2\n\t},\n\tauthor: {\n\t\ttext: 'Author',\n\t\txs: 6,\n\t\tsm: 4,\n\t\tmd: 2\n\t},\n\tcounterpart: {\n\t\ttext: 'Object',\n\t\txs: 12,\n\t\tsm: 8,\n\t\tmd: 4\n\t},\n\tduration: {\n\t\ttext: 'Time',\n\t\txs: 12,\n\t\tsm: 8,\n\t\tmd: 4\n\t}\n};\n\nexport const Tags = {\n\tbase: {\n\t\ttext: 'Base',\n\t\tcategory: 'type'\n\t},\n\tmodel: {\n\t\ttext: 'Model',\n\t\tcategory: 'type'\n\t},\n\ttraditional: {\n\t\ttext: 'Traditional',\n\t\tcategory: 'author'\n\t},\n\tbird: {\n\t\ttext: 'Bird',\n\t\tcategory: 'counterpart'\n\t},\n\tinsect: {\n\t\ttext: 'Insect',\n\t\tcategory: 'counterpart'\n\t},\n\tanimal: {\n\t\ttext: 'Animal',\n\t\tcategory: 'counterpart'\n\t},\n\tboat: {\n\t\ttext: 'Boat',\n\t\tcategory: 'counterpart'\n\t},\n\tflower: {\n\t\ttext: 'Flower',\n\t\tcategory: 'counterpart'\n\t},\n\tfive_mins: {\n\t\ttext: '5 Mins',\n\t\tcategory: 'duration'\n\t},\n\tfifteen_mins: {\n\t\ttext: '15 Mins',\n\t\tcategory: 'duration'\n\t},\n\tthirty_mins: {\n\t\ttext: '30 Mins',\n\t\tcategory: 'duration'\n\t},\n\thour_plus: {\n\t\ttext: '1+ hours',\n\t\tcategory: 'duration'\n\t}\n};\n\nexport const Folds = {\n\tSailBoat: {\n\t\tname: 'Sail Boat',\n\t\tstaticImg: sailboatImage,\n\t\tdescription: 'An assymetrical sailboat with a built in kickstand - perfect for display.',\n\t\ttags: ['model', 'boat', 'five_mins'],\n\t\tauthor: 'Traditional',\n\t\tjson: SailBoat\n\t},\n\tHeart: {\n\t\tname: 'Heart',\n\t\tstaticImg: heartImage,\n\t\tdescription: \"A flat heart that's particularly easy to fold - a great place to start.\",\n\t\ttags: ['model', 'five_mins'],\n\t\tauthor: 'Traditional',\n\t\tjson: Heart\n\t},\n\tCrane: {\n\t\tname: 'Crane',\n\t\tstaticImg: craneImage,\n\t\tdescription: 'The quintessential origami model - fold 1000 of these!',\n\t\ttags: ['model', 'fifteen_mins', 'bird', 'animal'],\n\t\tauthor: 'Traditional',\n\t\tjson: Crane\n\t},\n\tButterfly: {\n\t\tname: 'Butterfly',\n\t\tstaticImg: butterflyImage,\n\t\tdescription: 'A 3D flapping butterfly built upon a boat base.',\n\t\ttags: ['model', 'five_mins', 'insect', 'animal'],\n\t\tauthor: 'Traditional',\n\t\tjson: Butterfly\n\t},\n\tLily: {\n\t\tname: 'Lily',\n\t\tstaticImg: lilyImage,\n\t\tdescription: 'A symmetrical flower perfect for a boquet, or mounted on a folded stem.',\n\t\ttags: ['model', 'fifteen_mins', 'flower'],\n\t\tauthor: 'Traditional',\n\t\tjson: Lily\n\t},\n\tBirdBase: {\n\t\tname: 'Bird Base',\n\t\tstaticImg: bird_baseImage,\n\t\tdescription: 'The first base many learn, this is perfect for winged creations such as birds and dragons.',\n\t\ttags: ['base'],\n\t\tauthor: 'Traditional',\n\t\tjson: BirdBase\n\t},\n\tWaterBombBase: {\n\t\tname: 'Waterbomb Base',\n\t\tstaticImg: waterbomb_baseImage,\n\t\tdescription: 'A very simple base with four flaps.',\n\t\ttags: ['base'],\n\t\tauthor: 'Traditional',\n\t\tjson: WaterBombBase\n\t},\n\tBoatBase: {\n\t\tname: 'Boat Base',\n\t\tstaticImg: boat_baseImage,\n\t\tdescription: 'A more specific base for blocky models, such as boats and frames.',\n\t\ttags: ['base'],\n\t\tauthor: 'Traditional',\n\t\tjson: BoatBase\n\t}\n};\n\nexport const initAppReducerState = {\n\tlayoutState: {\n\t\thash: 0,\n\t\tpage: Pages.ModelSelect,\n\t\tcurFold: null,\n\t\tuseImages: false,\n\t\tshowEditor: true,\n\t\texpandHierarchy: false,\n\t\tsearchStr: ''\n\t},\n\tfoldState: {\n\t\thash: 0,\n\t\tstepIdx: -1, // Depends on selected level\n\t\tactive: false,\n\t\toverrideWithEditor: false,\n\t\tusingDefaults: true,\n\t\trepeatRoot: -1,\n\t\trepeatRange: null,\n\t\tlastRecordedTimer: 0,\n\t\tlastRecordedLikert: 0\n\t},\n\teditorState: {\n\t\thash: 0,\n\t\tedgeHighlights: [],\n\t\tvertexHighlights: [],\n\t\tfaceHighlights: [],\n\t\tshowEdges: false,\n\t\tshowVertices: false,\n\t\tshowFaces: true,\n\t\tshowTriangulations: false,\n\t\tshowLables: false\n\t},\n\tuserState: {\n\t\thash: 0,\n\t\tshowEditor: false,\n\t\tusername: null,\n\t\tshowTimerAssess: false,\n\t\tshowLikertAssess: false,\n\t\tmodelList: [],\n\t\tfoldHistory: []\n\t},\n\tshowNavDrawer: false\n};\n\nexport const Actions = {\n\tSET_LAYOUT_STATE: 'SET_LAYOUT_STATE',\n\tSET_SHOW_NAV_DRAWER: 'SET_SHOW_NAV_DRAWER',\n\tSET_PAGE_CONFIG: 'SET_PAGE_CONFIG',\n\tSET_FOLD_STATE: 'SET_FOLD_STATE',\n\tSET_EDITOR_STATE: 'SET_EDITOR_STATE',\n\tSET_USER_STATE: 'SET_USER_STATE',\n\tADD_HISTORY_ENTRY: 'ADD_HISTORY_ENTRY'\n};\n\nexport const initNavTree = [\n\t{\n\t\ttext: 'Return to Fold',\n\t\tconditional: \"is_saved_fold\",\n\t\tclassName: \"primary-drawer-node\",\n\t\tkey: Pages.Fold \n\t},\n\t{\n\t\ttext: 'Model Select',\n\t\tkey: Pages.ModelSelect \n\t},\n\t{\n\t\ttext: 'User Page',\n\t\tconditional: \"is_logged_in\",\n\t\tkey: Pages.User \n\t},\n\t{\n\t\ttext: 'Login / Register',\n\t\tconditional: \"is_not_logged_in\",\n\t\tkey: 'login' \n\t},\n\t// {\n\t// \ttext: 'What is Origami?',\n\t// \tkey: 'context_root',\n\t// \tchildren: [\n\t// \t\t{\n\t// \t\t\ttext: 'History',\n\t// \t\t\tkey: 'history'\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\ttext: 'Origami Today',\n\t// \t\t\tkey: 'current_origami'\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\ttext: 'Practical Origami',\n\t// \t\t\tkey: 'practical'\n\t// \t\t}\n\t// \t]\n\t// },\n\t// {\n\t// \ttext: 'Learn Origami',\n\t// \tkey: 'learn_root',\n\t// \tchildren: [\n\t// \t\t{\n\t// \t\t\ticon: <DashboardIcon />,\n\t// \t\t\ttext: 'Dashboard',\n\t// \t\t\tkey: 'learn_dashboard'\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\ticon: <GroupAddIcon />,\n\t// \t\t\ttext: 'Join Class',\n\t// \t\t\tkey: 'join_class'\n\t// \t\t}\n\t// \t]\n\t// },\n\t// {\n\t// \ttext: 'Teach Origami',\n\t// \tkey: 'teach_root',\n\t// \tchildren: [\n\t// \t\t{\n\t// \t\t\ticon: <DashboardIcon />,\n\t// \t\t\ttext: 'Lesson Plans',\n\t// \t\t\tkey: 'lesson_plan_dashboard'\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\ticon: <SchoolIcon />,\n\t// \t\t\ttext: 'Read Research Paper',\n\t// \t\t\tkey: 'google_scholar'\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\ticon: <ClassIcon />,\n\t// \t\t\ttext: 'Origami in the Classroom',\n\t// \t\t\tkey: 'teaching_tips'\n\t// \t\t}\n\t// \t]\n\t// },\n\t{\n\t\ticon: <GitHubIcon />,\n\t\ttext: 'Source Code',\n\t\tkey: 'github'\n\t}\n];\n\nexport const initFoldState = {\n\t//place to store buffer geo vertex data\n\tpositions: [],\n\t//place to store buffer geo vertex colors\n\tcolors: [],\n\tindices: [],\n\tnodes: [],\n\tfaces: [],\n\tedges: [],\n\tcreases: [],\n\tvertices: [], //indexed vertices array\n\tfold: null,\n\tcreaseParams: null\n};\n\n/*\nexport const Lines = {\n    U: hingeLines,\n    M: mountainLines,\n    V: valleyLines,\n    C: cutLines,\n    F: facetLines,\n    B: borderLines\n};\n*/\n","/home/bbor/dev/origamiodyssey/src/anim/Scene.js",["150","151","152","153","154","155","156","157","158","159","160","161","162"],"/**\n * FILENAME: Scene.js \n *\n * DESCRIPTION: Renders the basic of the animation. \n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\n// Threejs - 3D Animation\nimport { Canvas, useFrame, useThree, useLoader, extend } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\n// React Spring - animation\nimport { useUpdate, useSpring, useSprings, animated, config }  from 'react-spring';\n// import { a, useTransition, Transition } from '@react-spring/three';\n\nimport { Paper } from \"./Paper\";\nimport { Pages, Folds } from \"./../infra/constants\";\nimport { setLayoutState, setFoldState } from \"./../infra/actions\";\n\n// Extend will make OrbitControls available as a JSX element called orbitControls for us to use.\nextend({ OrbitControls });\n\nconst CameraControls = () => {\n\t// Get a reference to the Three.js Camera, and the canvas html element.\n\t// We need these to setup the OrbitControls class.\n\t// https://threejs.org/docs/#examples/en/controls/OrbitControls\n\tconst {\n\t\tcamera,\n\t\tgl: { domElement }\n\t} = useThree();\n\n\tconst controls = useRef();\n\n\tuseFrame(({ gl }) => {\n\t\tgl.setClearColor(0xf1f4f4, 1);\n\t\treturn controls.current.update();\n\t});\n\n\treturn (\n\t\t<orbitControls\n\t\t\tref={controls}\n\t\t\targs={[camera, domElement]}\n\t\t\tenableZoom={true}\n\t\t\tenableRotate={true}\n\t\t\tenableDolly={false}\n\t\t\tmouseButtons={{\n\t\t\t\tRIGHT: THREE.MOUSE.ROTATE,\n\t\t\t\tLEFT: THREE.MOUSE.ROTATE,\n\t\t\t\tMIDDLE: THREE.MOUSE.PAN,\n\t\t\t}}\n\t\t\t// maxAzimuthAngle={Math.PI / 4}\n\t\t\t// maxPolarAngle={Math.PI * 3 / 4}\n\t\t\t// minAzimuthAngle={-Math.PI / 4}\n\t\t\t// minPolarAngle={-Math.PI * 3 / 4}\n\t\t/>\n\t);\n};\n\n/**\n * Main component.\n */\nexport const Scene = props => {\n\tconst { initFold, foldLastUpdated, paperSize, layoutState, layoutStateHash, foldState, foldStateHash, setFoldState, editorState, editorStateHash } = props;\n\tconst [overlays, setOverlays] = useState({});\n\tconst [overlayPos, setOverlayPos] = useState({});\n\n\tconst ctrlOverlay = inArr => {\n\t\tconst newOverlays = Object.assign({}, overlays);\n\t\tconst newOverlayPos = Object.assign({}, overlayPos);\n\n\t\tinArr.forEach(({ show, name, component, pos }) => {\n\t\t\tif (show) {\n\t\t\t\tnewOverlays[name] = component;\n\n\t\t\t\tif (pos) {\n\t\t\t\t\toverlayPos[name] = pos;\n\t\t\t\t}\n\t\t\t} else if (!show && newOverlays[name]) {\n\t\t\t\tdelete newOverlays[name];\n\t\t\t\tdelete overlayPos[name];\n\t\t\t}\n\t\t})\n\n\t\tsetOverlays(newOverlays);\n\t\tsetOverlayPos(overlayPos)\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Canvas camera={{fov: 100, position: [0, 1.8, 0]}} onCreated={state => state.gl.setClearColor(\"red\")} >\n\t\t\t\t<spotLight position={[5, 10, 0]} color='#f1f1ff' distance={100} penumbra={0.75} decay={2} />\n\t\t\t\t<CameraControls />\n\n\t\t\t\t<Paper\n\t\t\t\t\tposition={[0, 0, 0]}\n\t\t\t\t\tscale={10}\n\t\t\t\t\tinitFold={initFold}\n\t\t\t\t\tfoldLastUpdated={foldLastUpdated}\n\t\t\t\t\tfoldKey={layoutState.curFold}\n\t\t\t\t\tfoldState={foldState}\n\t\t\t\t\tfoldStateHash={foldStateHash}\n\t\t\t\t\teditorState={editorState}\n\t\t\t\t\teditorStateHash={editorStateHash}\n\t\t\t\t\tsetFoldState={setFoldState}\n\t\t\t\t\tinitStep={-1}\n\t\t\t\t\tctrlOverlay={ctrlOverlay}\n\t\t\t\t\toverlayPos={overlayPos}\n\t\t\t\t/>\n\t\t\t</Canvas>\n\t\t\t{Object.values(overlays)}\n\t\t</React.Fragment>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tlayoutState: state.appReducer.layoutState,\n\t\tlayoutStateHash: state.appReducer.layoutState.hash,\n\t\tfoldState: state.appReducer.foldState,\n\t\tfoldStateHash: state.appReducer.foldState.hash,\n\t\teditorState: state.appReducer.editorState,\n\t\teditorStateHash: state.appReducer.editorState.hash,\n\t};\n};\n\nexport default connect(mapStateToProps, { setLayoutState, setFoldState })(Scene);\n","/home/bbor/dev/origamiodyssey/src/infra/appReducer.js",["163"],"/**\n * FILENAME: appReducer.js\n *\n * DESCRIPTION: Handles state update for all layout actions.\n */\n\nimport supermemo2 from 'supermemo2';\nimport { initAppReducerState, Actions } from './constants';\n\nconst finalInitState = JSON.parse(JSON.stringify(initAppReducerState));\n\nexport const appReducer = (state = finalInitState, action) => {\n\tlet newState = Object.assign({}, state);\n\n\tswitch (action.type) {\n\t\tcase Actions.SET_SHOW_NAV_DRAWER:\n\t\t\t// If passed a val set to that, otherwise toggle\n\t\t\tnewState.showNavDrawer = action.payload !== undefined ? action.payload : !newState.showNavDrawer;\n\t\t\tbreak;\n\t\tcase Actions.SET_LAYOUT_STATE:\n\t\t\tconsole.log('[SET_LAYOUT_STATE]', action.payload);\n\t\t\tObject.assign(newState.layoutState, action.payload || initAppReducerState.layoutState);\n\t\t\tnewState.layoutState.hash++;\n\t\t\tbreak;\n\t\tcase Actions.SET_FOLD_STATE:\n\t\t\tconsole.log('[SET_FOLD_STATE]', action.payload);\n\t\t\tObject.assign(newState.foldState, action.payload || initAppReducerState.foldState);\n\t\t\tnewState.foldState.hash++;\n\t\t\tbreak;\n\t\tcase Actions.SET_EDITOR_STATE:\n\t\t\tconsole.log('[SET_EDITOR_STATE]', action.payload);\n\t\t\tObject.assign(newState.editorState, action.payload || initAppReducerState.editorState);\n\t\t\tnewState.editorState.hash++;\n\t\t\tbreak;\n\t\tcase Actions.SET_USER_STATE:\n\t\t\tconsole.log('[SET_USER_STATE]', action.payload);\n\t\t\tObject.assign(newState.userState, action.payload || initAppReducerState.userState);\n\t\t\tnewState.userState.hash++;\n\t\t\tbreak;\n\t\tcase Actions.ADD_HISTORY_ENTRY:\n\t\t\tif (!action.payload) {\n\t\t\t\treturn newState;\n\t\t\t}\n\t\t\tnewState.userState.foldHistory.push(action.payload)\n\n\t\t\t// If this model type is part of the memo algorithm, update that entry \n\t\t\tconst idx = newState.userState.modelList.findIndex(model => model.foldKey === action.payload.foldKey);\n\t\t\tif (idx !== -1) {\n\t\t\t\tconsole.log(\"Modifying entry for \", action.payload.foldKey);\n\n\t\t\t\t// Update the spaced learning params given this new information\n\t\t\t\tconst quality = action.payload.quality;\n\t\t\t\tconst lastSchedule = newState.userState.modelList[idx].schedule\n\t\t\t\tconst lastFactor = newState.userState.modelList[idx].factor\n\t\t\t\tnewState.userState.modelList[idx] = {\n\t\t\t\t\tfoldKey: action.payload.foldKey,\n\t\t\t\t\t...supermemo2(quality, lastSchedule, lastFactor)\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Else don't rememeber anything other than the foldHistory row\n\n\t\t\tnewState.userState.hash++;\n\t\t\tconsole.log('[ADD_HISTORY_ENTRY]', action.payload, newState.userState);\n\t\t\tbreak;\n\t}\n\n\treturn newState;\n};\n","/home/bbor/dev/origamiodyssey/src/style/theme.js",["164"],"/home/bbor/dev/origamiodyssey/src/anim/Paper.js",["165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188"],"/home/bbor/dev/origamiodyssey/src/infra/actions.js",[],"/home/bbor/dev/origamiodyssey/src/layout/NavDrawer.js",["189","190","191","192","193","194","195","196","197"],"/**\n * FILENAME: NavDrawer.js \n *\n * DESCRIPTION: A sidebar-based nav tree, custom built to take advantage of react-spring.\n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SwipeableDrawer, Button, List, Divider, ListItem, } from '@material-ui/core';\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nimport { Pages, initNavTree } from \"./../infra/constants\";\nimport { setShowNavDrawer, setLayoutState, setFoldState } from \"./../infra/actions\";\nimport useStyles from \"./../style/theme\";\n\nexport const NavDrawer = props => {\n\tconst { page, showNavDrawer, setShowNavDrawer, layoutState, setLayoutState, foldState, setFoldState, userState } = props;\n\n\tconst [navTreeData, setNavTree] = useState(initNavTree);\n\tconst styles = useStyles();\n\n\tconst { loginWithRedirect, isAuthenticated, isLoading } = useAuth0();\n\n\tconst findNode = (key, node = navTreeData, path = []) => {\n\t\t// Root case - recurse into array of subtrees\n\t\tif (Array.isArray(node)) {\n\t\t\treturn node.reduce((acc, childNode) => {\n\t\t\t\tif (!acc) {\n\t\t\t\t\tconst ret = findNode(key, childNode, path);\n\n\t\t\t\t\tif (ret && ret[1]) {\n\t\t\t\t\t\tacc = ret;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t}, null) || [null, null];\n\n\t\t// Success case - we found the node\n\t\t} else if (node.key === key) {\n\t\t\treturn [[node.key, ...path], node];\n\n\t\t// Child case - recurse into children\n\t\t} else if (node.children) {\n\t\t\treturn node.children.reduce((acc, childNode) => {\n\t\t\t\tif (!acc) {\n\t\t\t\t\tconst [foundPath, foundNode] = findNode(key, childNode, path);\n\n\t\t\t\t\tif (foundNode) {\n\t\t\t\t\t\tacc = [[key, ...foundPath], foundNode];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn acc;\n\t\t\t}, null) || [null, null];\n\t\t}\n\n\t\t// Failure case - return null\n\t\treturn [[], null];\n\t}\n\n\tconst setNode = (path, field, val, node = navTreeData) => {\n\t\tlet newNavTree = [...navTreeData];\n\n\t\t// Nested function that recurses through the tree to modify a node\n\t\tconst recursiveSet = (path, node = newNavTree) => {\n\t\t\tif (!path || path.length === 0) {\n\t\t\t\tnode[field] = val; \n\t\t\t} else if (Array.isArray(node)) {\n\t\t\t\tlet child = node.find(e => e.key === path[0]);\n\t\t\t\trecursiveSet(path.slice(1), child);\n\t\t\t} else if (node.children) {\n\t\t\t\tlet child = node.children.find(e => e.key === path[0]);\n\t\t\t\trecursiveSet(path.slice(1), child);\n\t\t\t}\n\t\t}\n\n\t\trecursiveSet(path);\n\t\tsetNavTree(newNavTree);\n\t}\n\n\tconst handleNavDrawerSelect = (event, key) => {\n\t\tif (!key) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the key is a page ID, just take us to that page\n\t\tif (Object.keys(Pages).includes(key)) {\n\t\t\tsetLayoutState({ page: key });\n\t\t\tsetShowNavDrawer(false);\n\t\t\treturn;\n\t\t} \n\n\t\t// If the node has children, show or hide them on parent click\n\t\tconst [path, node] = findNode(key);\n\t\tif (node.children) {\n\t\t\tsetNode(path, \"expanded\", !node.expanded);\n\t\t\treturn;\n\t\t}\n\n\t\t// Else handle key-specific behavior (i.e. everything else)\n\t\tswitch (key) {\n\t\t\tcase \"github\":\n\t\t\t\twindow.open('https://github.com/robbwdoering/origamiodyssey', '_blank');\n\t\t\t\tbreak;\n\t\t\tcase \"login\":\n\t\t\t\tloginWithRedirect();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"unhandled navDrawer option\", key);\n\t\t}\n\t\tsetShowNavDrawer(false);\n\t}\n\n\tconst conditionalEx = condName => {\n\t\tif (!condName) {\n\t\t\treturn true;\n\t\t}\n\n\t\tswitch(condName) {\n\t\t\tcase \"is_saved_fold\":\n\t\t\t\treturn layoutState.page !== Pages.Fold && foldState.stepIdx !== -1;\n\t\t\tcase \"is_logged_in\":\n\t\t\tconsole.log(\"[conditionalEx]\", isAuthenticated);\n\t\t\t\treturn isAuthenticated;\n\t\t\tcase \"is_not_logged_in\":\n\t\t\t\treturn !isAuthenticated;\n\t\t\tdefault:\n\t\t\t\tconsole.error(\"passed invalid conditional: \", condName);\n\t\t\t\treturn true;\n\t\t}\n\t}\n\n\tconst renderNavNode = (node, nestedLevel = 0) => {\n\t\tif (!node || node.hidden || !conditionalEx(node.conditional)) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Nested component that just renders one node, with no regard for hierarchy beyond tracking nestedLevel\n\t\tconst Node = ({ node, nestedLevel }) => {\n\t\t\tconst icon = node.icon || (node.children ? (node.expanded ? <ArrowDropDownIcon /> : <ArrowRightIcon />) : null );\n\n\t\t\treturn (\n\t\t\t\t<ListItem \n\t\t\t\t\tclassName={`nested-level-${nestedLevel} ${node.className || \"\"}`}\n\t\t\t\t\tkey={node.key}\n\t\t\t\t\tbutton\n\t\t\t\t\tonClick={e => handleNavDrawerSelect(e, node.key)}\n\t\t\t\t>\n\t\t\t\t\t{icon && <ListItemIcon> {icon} </ListItemIcon>}\n\t\t\t\t\t<ListItemText> {node.text} </ListItemText>\n\t\t\t\t</ListItem>\n\t\t\t);\n\t\t};\n\n\t\tlet ret = [<Node key={\"node_\"+node.key} node={node} nestedLevel={nestedLevel} />];\n\n\t\tif (node.children && node.expanded) {\n\t\t\tnode.children.forEach(child => {\n\t\t\t\tret = ret.concat(renderNavNode(child, nestedLevel + 1));\n\t\t\t});\n\t\t};\n\n\t\treturn ret;\n\t};\n\n\treturn (\n\t\t<SwipeableDrawer\n\t\t\tanchor='left'\n\t\t\tkey=\"swipable-drawer\"\n\t\t\tclasses={{\n\t\t\t\troot: styles.navDrawerRoot,\n\t\t\t\tpaper: styles.navDrawerPaper\n\t\t\t}}\n\t\t\topen={showNavDrawer}\n\t\t\tonOpen={() => setShowNavDrawer(true)}\n\t\t\tonClose={() => setShowNavDrawer(false)}\n\t\t>\n\t\t\t<List key=\"main-list\">\n\t\t\t\t{navTreeData.reduce((acc, node) => {\n\t\t\t\t\tacc = acc.concat(renderNavNode(node));\n\t\t\t\t\treturn acc;\n\t\t\t\t}, [])}\n\t\t\t</List>\n\t\t</SwipeableDrawer>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tlayoutState: state.appReducer.layoutState,\n\t\tlayoutStateHash: state.appReducer.layoutState.hash,\n\t\tfoldState: state.appReducer.foldState,\n\t\tshowNavDrawer: state.appReducer.showNavDrawer,\n\t\tuserState: state.appReducer.userState\n\t};\n};\n\nexport default connect(mapStateToProps, { setShowNavDrawer, setLayoutState, setFoldState })(NavDrawer);","/home/bbor/dev/origamiodyssey/src/layout/pages/ModelSelect.js",["198","199","200","201","202","203","204","205","206","207","208","209","210","211","212"],"/home/bbor/dev/origamiodyssey/src/layout/pages/FoldControls.js",["213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231"],"/**\n * FILENAME: FoldControls.js \n *\n * DESCRIPTION: These are piecemeal controls for the fold state. \n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useUpdate, useSpring, useSprings, animated, config }  from 'react-spring';\n\nimport { SwipeableDrawer, Button,  ButtonGroup, List, Divider, ListItem, Card } from '@material-ui/core';\nimport SkipPrevious from \"@material-ui/icons/SkipPrevious\";\nimport SkipNext from \"@material-ui/icons/SkipNext\";\n\nimport useStyles from \"./../../style/theme\";\nimport { Folds } from \"./../../infra/constants\";\nimport { setFoldState } from \"./../../infra/actions\";\n// const AnimatedCard = animated(Card);\n\nexport const FoldControls = props => {\n\tconst { windowHeight, foldState, foldStateHash, setFoldState } = props;\n\n\t// ----------\n\t// STATE INIT \n\t// ----------\n\tconst classes = useStyles();\n\tconst [cardRefs, setCardRefs] = useState([]);\n\tconst [curHash, setHash] = useState(0);\n\n\t// ----------------\n\t// MEMBER FUNCTIONS \n\t// ----------------\n\n\t// Changes the current instructional sequential step, prompting animation.\n\tconst changeStep = (delta) => {\n\t\tlet newStepIndex = Math.min(Math.max(foldState.stepIdx + delta, -1), foldState.maxSteps);\n\t\tsetFoldState({\n\t\t\tstepIdx: newStepIndex\n\t\t});\n\t};\n\n\tconst calcControlsPosition = () => {\n\t\treturn (window.innerWidth - 128) / 2;\n\t}\n\n\tconst triggerRerender = () => {\n\t\tsetHash(cur => cur + 1);\n\t};\n\n\t// ---------\n\t// LIFECYCLE\n\t// ---------\n\n\tconst buttonClasses = useMemo(() => ({\n\t\troot: classes.fold_controls_button,\n\t\tlabel: classes.fold_controls_button_label\n\t}), []);\n\n\t// Rerender whenever the page resizes\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"resize\", triggerRerender);\n\t}, []);\n\n\tconst ctrlLeft = useMemo(calcControlsPosition, [window.innerWidth]);\n\n    return (\n    \t<React.Fragment>\n\t\t\t<Card className={classes.fold_controls} style={{left: ctrlLeft}} >\n\t\t\t\t<ButtonGroup className={classes.fold_controls_button_container} color=\"primary\" variant=\"text\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclasses={buttonClasses}\n\t\t\t\t\t\tonClick={() => changeStep(-1)}\n\t\t\t\t\t\tdisabled={foldState.stepIdx < 0}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SkipPrevious className={classes.fold_controls_button_icon} />\n\t\t\t\t\t\tPrev\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclasses={buttonClasses}\n\t\t\t\t\t\tonClick={() => changeStep(1)}\n\t\t\t\t\t\tdisabled={foldState.stepIdx >= foldState.maxSteps - 1}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SkipNext className={classes.fold_controls_button_icon} />\n\t\t\t\t\t\tNext\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n    \t\t</Card>\n    \t</React.Fragment>\n    );\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tfoldState: state.appReducer.foldState,\n\t\tfoldStateHash: state.appReducer.foldState.hash\n\t};\n};\n\nexport default connect(mapStateToProps, { setFoldState })(FoldControls);\n",["232","233"],"/home/bbor/dev/origamiodyssey/src/layout/pages/User.js",["234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249"],"/home/bbor/dev/origamiodyssey/src/static/lettering.js",[],"/home/bbor/dev/origamiodyssey/src/layout/pages/FoldEditorCards.js",["250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271"],"/**\n * FILENAME: FoldEditorCards.js\n *\n * DESCRIPTION: These cards are shown on either side of the model, and allow realtime editing of .fold files.\n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useUpdate, useSpring, useSprings, animated, config } from 'react-spring';\nimport { JsonEditor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport Downloader from 'js-file-downloader';\n\nimport {\n\tButton,\n\tTypography,\n\tButtonGroup,\n\tChip,\n\tInput,\n\tSelect,\n\tMenuItem,\n\tGrid,\n\tList,\n\tDivider,\n\tListItem,\n\tCard\n} from '@material-ui/core';\nimport SkipPrevious from '@material-ui/icons/SkipPrevious';\nimport SkipNext from '@material-ui/icons/SkipNext';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ToggleButton } from '@material-ui/lab';\n\nimport useStyles from './../../style/theme';\nimport { Folds } from './../../infra/constants';\nimport { setFoldState, setEditorState } from './../../infra/actions';\n// const AnimatedCard = animated(Card);\n\nexport const FoldEditorCards = props => {\n\tconst {\n\t\tcurFold,\n\t\tinitFold,\n\t\tfoldLastUpdated,\n\t\twindowHeight,\n\t\tfoldOverrideCallback,\n\t\tfoldState,\n\t\tfoldStateHash,\n\t\tsetFoldState,\n\t\teditorState,\n\t\teditorStateHash,\n\t\tsetEditorState\n\t} = props;\n\n\t// ----------\n\t// STATE INIT\n\t// ----------\n\tconst classes = useStyles();\n\tconst [curHash, setHash] = useState(0);\n\tconst [expandControls, setExpandControls] = useState(false);\n\tconst localFold = useRef();\n\n\t// ----------------\n\t// MEMBER FUNCTIONS\n\t// ----------------\n\tconst calcControlsPosition = () => {\n\t\treturn (window.innerWidth - 128) / 2;\n\t};\n\n\tconst CardLabel = ({ text }) => (\n\t\t<React.Fragment>\n\t\t\t<Typography className={classes.modelCard_label} variant=\"body2\" color=\"textSecondary\" component=\"h4\">\n\t\t\t\t{text}\n\t\t\t</Typography>\n\t\t\t<Divider />\n\t\t</React.Fragment>\n\t);\n\n\tconst ControlRow = ({ name, text, width, children }) => (\n\t\t<Grid item xs={width || 12} className={classes.editor_row}>\n\t\t\t{/* Title */}\n\t\t\t<CardLabel text={name} />\n\t\t\t{text !== undefined && (\n\t\t\t\t<Typography className={classes.editor_bodyText} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\t\t\t\t\t<strong>{text}</strong>\n\t\t\t\t</Typography>\n\t\t\t)}\n\n\t\t\t{children}\n\t\t</Grid>\n\t);\n\n\tconst resetLocalFold = () => {\n\t\t// console.log('[resetLocalFold]', initFold);\n\t\tlocalFold.current = JSON.parse(JSON.stringify(initFold));\n\t};\n\n\tconst handleFoldChange = e => {\n\t\tObject.assign(localFold.current, e);\n\t};\n\n\tconst handleSaveClick = () => {\n\t\tif (!localFold.current || !curFold) {\n\t\t\tconsole.error(\"Couldn't save file; no current value.\");\n\t\t\treturn;\n\t\t}\n\n\t\tfoldOverrideCallback(localFold.current);\n\t};\n\n\tconst handleExportClick = async () => {\n\t\tif (!localFold.current || !curFold) {\n\t\t\tconsole.error(\"Couldn't export file; no current value.\");\n\t\t\treturn;\n\t\t}\n\n\t\tlet fileDownloadUrl = `data:application/json,${encodeURIComponent(JSON.stringify(localFold.current, null, 2))}`;\n\t\t// fileDownloadUrl = URL.createObjectURL(fileDownloadUrl)\n\n\t\tnew Downloader({\n\t\t\turl: fileDownloadUrl,\n\t\t\tfilename: `${curFold}.json`\n\t\t}).then(() => {\n\t\t\tconsole.log('finished download.');\n\t\t});\n\t};\n\n\tconst handleEditorFormChange = (field, value) => {\n\t\tsetEditorState({ [field]: value });\n\t};\n\n\tconst handleSelectionChange = event => {\n\t\t// console.log('GOT EVENT! ', event.target);\n\t\tconst field = event.target.name;\n\t\tconst value = event.target.value;\n\n\t\tsetEditorState({ [field]: value });\n\t};\n\n\t// ---------\n\t// LIFECYCLE\n\t// ---------\n\tconst buttonClasses = useMemo(\n\t\t() => ({\n\t\t\troot: classes.fold_controls_button,\n\t\t\tlabel: classes.fold_controls_button_label\n\t\t}),\n\t\t[]\n\t);\n\n\tuseEffect(resetLocalFold, [initFold]);\n\n\tconst ctrlLeft = useMemo(calcControlsPosition, [window.innerWidth]);\n\n\t// If we don't have any fold file loaded yet, don't show these\n\tif (!initFold) {\n\t\treturn <div />;\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{/* Details on the fold state */}\n\t\t\t<Card className={classes.editorState}>\n\t\t\t\t<Typography className={classes.editor_cardTitle} variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n\t\t\t\t\tFold State\n\t\t\t\t</Typography>\n\t\t\t\t<Grid container>\n\t\t\t\t\t<ControlRow name=\"Step Index\" text={`${foldState.stepIdx + 2}/${foldState.maxSteps + 1}`} width={6} />\n\t\t\t\t</Grid>\n\t\t\t</Card>\n\n\t\t\t{/* Details on the current instruction */}\n\t\t\t<Card className={classes.editorDetails} style={{height: expandControls ? \"60%\" : \"60px\"}}>\n\t\t\t\t<Typography className={classes.editor_cardTitle} variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n\t\t\t\t\tEditor Controls\n\t\t\t\t</Typography>\n\t\t\t\t<Button className={classes.editor_details_expand} onClick={() => setExpandControls(cur => !cur)}>\n\t\t\t\t\t{expandControls ? <ExpandMore /> : <ExpandLess />}\n\t\t\t\t</Button>\n\t\t\t\t{expandControls && (\n\t\t\t\t<Grid container>\n\t\t\t\t\t<ControlRow name=\"Highlighted Edges\">\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tname=\"edgeHighlights\"\n\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\tvalue={editorState.edgeHighlights}\n\t\t\t\t\t\t\tonChange={handleSelectionChange}\n\t\t\t\t\t\t\tinput={<Input id=\"select-multiple-chip\" />}\n\t\t\t\t\t\t\trenderValue={selected => (\n\t\t\t\t\t\t\t\t<div className={classes.chips}>\n\t\t\t\t\t\t\t\t\t{selected.map(idx => (\n\t\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\t\t\tlabel={initFold.edges_vertices[idx].toString()}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tclassName={classes.editor_select}\n\t\t\t\t\t\t\t// MenuProps={MenuProps}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{initFold.edges_vertices.map((edge, index) => {\n\t\t\t\t\t\t\t\tconst name = edge.toString();\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<MenuItem key={name} value={index}>\n\t\t\t\t\t\t\t\t\t\t{index}: {name}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"vertexHighlights\">\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tname=\"vertexHighlights\"\n\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\tvalue={editorState.vertexHighlights}\n\t\t\t\t\t\t\tonChange={handleSelectionChange}\n\t\t\t\t\t\t\tinput={<Input id=\"select-multiple-chip\" />}\n\t\t\t\t\t\t\trenderValue={selected => (\n\t\t\t\t\t\t\t\t<div className={classes.chips}>\n\t\t\t\t\t\t\t\t\t{selected.map(idx => (\n\t\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\t\t\tlabel={`${idx}: ${initFold.vertices_coords[idx].toString()}`}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tclassName={classes.editor_select}\n\t\t\t\t\t\t\t// MenuProps={MenuProps}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{initFold.vertices_coords.map((coords, index) => {\n\t\t\t\t\t\t\t\tconst name = coords.toString();\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<MenuItem key={name} value={index}>\n\t\t\t\t\t\t\t\t\t\t{index}: {name}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"faceHighlights\">\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tname=\"faceHighlights\"\n\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\tvalue={editorState.faceHighlights}\n\t\t\t\t\t\t\tonChange={handleSelectionChange}\n\t\t\t\t\t\t\tinput={<Input id=\"select-multiple-chip\" />}\n\t\t\t\t\t\t\trenderValue={selected => (\n\t\t\t\t\t\t\t\t<div className={classes.chips}>\n\t\t\t\t\t\t\t\t\t{selected.map(idx => (\n\t\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\t\t\tlabel={`${idx}: ${initFold.faces_vertices[idx].toString()}`}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tclassName={classes.editor_select}\n\t\t\t\t\t\t\t// MenuProps={MenuProps}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{initFold.faces_vertices.map((face, index) => {\n\t\t\t\t\t\t\t\tconst name = face.toString();\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<MenuItem key={name} value={index}>\n\t\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"Show Edges\" width={4}>\n\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\tselected={editorState.showEdges}\n\t\t\t\t\t\t\tonChange={() => handleEditorFormChange('showEdges', !editorState.showEdges)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"Show Vertices\" width={4}>\n\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\tselected={editorState.showVertices}\n\t\t\t\t\t\t\tonChange={() => handleEditorFormChange('showVertices', !editorState.showVertices)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"Show Faces\" width={4}>\n\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\tselected={editorState.showFaces}\n\t\t\t\t\t\t\tonChange={() => handleEditorFormChange('showFaces', !editorState.showFaces)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"Show Tri\" width={4}>\n\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\tselected={editorState.showTriangulations}\n\t\t\t\t\t\t\tonChange={() =>\n\t\t\t\t\t\t\t\thandleEditorFormChange('showTriangulations', !editorState.showTriangulations)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"Show Labels\" width={4}>\n\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\tselected={editorState.showLabels}\n\t\t\t\t\t\t\tonChange={() =>\n\t\t\t\t\t\t\t\thandleEditorFormChange('showLabels', !editorState.showLabels)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t</Grid>\n\t\t\t\t)}\n\t\t\t</Card>\n\n\t\t\t{/* Entry box for direct JSON manipulation */}\n\t\t\t<Card className={classes.editorEntry}>\n\t\t\t\t<Typography className={classes.editor_cardTitle} variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n\t\t\t\t\t<code>.fold</code> file\n\t\t\t\t</Typography>\n\t\t\t\t<ButtonGroup className={classes.editor_floatAction} color=\"primary\" variant=\"text\" size=\"large\">\n\t\t\t\t\t<Button onClick={handleSaveClick}> Local Save </Button>\n\t\t\t\t\t<Button onClick={handleExportClick}> Export To Disk </Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t\t<JsonEditor\n\t\t\t\t\tvalue={{\n\t\t\t\t\t\tfaces_vertices: initFold.faces_vertices,\n\t\t\t\t\t\tvertices_coords: initFold.vertices_coords,\n\t\t\t\t\t\tedges_vertices: initFold.edges_vertices,\n\t\t\t\t\t\tinstructions: initFold.instructions\n\t\t\t\t\t}}\n\t\t\t\t\tonChange={handleFoldChange}\n\t\t\t\t\thtmlElementProps={{ class: classes.editor_jsonTextArea }}\n\t\t\t\t\tallowedModes={['tree', 'form']}\n\t\t\t\t\tnavigationBar={false}\n\t\t\t\t\thistory={true}\n\t\t\t\t/>\n\t\t\t</Card>\n\t\t</React.Fragment>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tfoldState: state.appReducer.foldState,\n\t\tfoldStateHash: state.appReducer.foldState.hash,\n\t\teditorState: state.appReducer.editorState,\n\t\teditorStateHash: state.appReducer.editorState.hash\n\t};\n};\n\nexport default connect(mapStateToProps, { setFoldState, setEditorState })(FoldEditorCards);\n","/home/bbor/dev/origamiodyssey/src/infra/utils.js",["272","273"],"/**\n * FILENAME: Constants.js\n *\n * DESCRIPTION: Contains constants for use accross the app.\n */\n\n/*\n * This walks the tree recursively, collecting an array of steps at this \"level\".\n */\nexport const collectStepsForLevel = (fold, level, isDefault) => {\n\tconsole.log(\"[collectStepsForLevel]\", fold, level, isDefault);\n\tif (!fold || !fold.instructions) {\n\t\treturn [];\n\t}\n\n\treturn calcStepsForLevel(fold.instructions, level, isDefault);\n};\n\n/**\n * Recursive function to build the \"step array\" for a tree.\n * The basic concept here is that the user will choose a depth, then this will build an array\n * of sequential steps \"at\" that depth.\n * @returns: a 2D array of step objects\n */\nexport const calcStepsForLevel = (inst, curLevel, isDefault, path = '0') => {\n\tif (!inst.children && !inst.length) {\n\t\t// Error case\n\t\treturn null;\n\t}\n\n\tconst isDefaultNode = isDefault && inst.default;\n\n\t// Leaf node / base case - return this as one step\n\tif (Array.isArray(inst.children[0])) {\n\t\treturn [[path, ...inst.children]];\n\n\t\t// Ancestor nodes - return a list of steps\n\t} else {\n\t\tif (isDefaultNode) {\n\t\t\t// Recursive case: This is target, so return all leaves below this as one step\n\t\t\tlet allLeafDescendants = concatDescendants(inst, curLevel);\n\t\t\t// If we just found one leaf node, treat this as a normal step w/ a 2D arr\n\t\t\tif (allLeafDescendants.length === 1) {\n\t\t\t\tallLeafDescendants = allLeafDescendants[0];\n\t\t\t}\n\t\t\treturn [[path, ...allLeafDescendants]];\n\t\t} else {\n\t\t\t// Recursive case: still above target level, so keep drilling down\n\t\t\t// COLLECT steps returned from children into one array of steps\n\t\t\treturn inst.children.reduce((acc, childInst, childIdx) => {\n\t\t\t\tlet ret = calcStepsForLevel(childInst, curLevel + 1, isDefault, path + ',' + childIdx);\n\t\t\t\treturn ret ? acc.concat(ret) : acc;\n\t\t\t}, []);\n\t\t}\n\t}\n\n\treturn null;\n};\n\n/**\n * @returns: a 2D array of every leaf node found below this node\n */\nexport const concatDescendants = (inst, curLevel) => {\n\tif (Array.isArray(inst.children[0])) {\n\t\treturn [[...inst.children]];\n\t} else {\n\t\t// turn many 1d arrs into one - concat\n\t\treturn inst.children.reduce((acc, childInst) => {\n\t\t\tlet ret = concatDescendants(childInst, curLevel + 1);\n\t\t\treturn ret ? acc.concat(ret) : acc;\n\t\t}, []);\n\t}\n};\n\n/**\n * Recursive function to calculate the depth of the instruction tree\n */\nexport const calcMaxLevel = inst => {\n\tif (!inst) {\n\t\treturn 0;\n\t} else if (inst.children && Array.isArray(inst.children[0])) {\n\t\t// Base case: leaf node\n\t\treturn 1;\n\t} else if (inst.children) {\n\t\t// Recursive case: Return 1 plus the height of the tallest subtree\n\t\treturn 1 + Math.max(...inst.children.map(childInst => calcMaxLevel(childInst)));\n\t} else {\n\t\treturn 0;\n\t}\n};\n\nexport const findInUseFamilyNode = (stepArr, path) => {\n\treturn stepArr.reduce((acc, step, index) => {\n\t\t// True if inUse step is an ancestor or descendant of this step\n\t\tif (path.startsWith(step[0]) || step[0].startsWith(path)) {\n\t\t\t// First index holds the first discovered descendant\n\t\t\tif (acc[0] == -1) {\n\t\t\t\tacc[0] = index;\n\t\t\t}\n\n\t\t\t// Second index holds the last discovered descendant\n\t\t\tacc[1] = index;\n\t\t}\n\t\treturn acc;\n\t}, [-1, -1]);\n};\n\nexport const getHierNode = (instructions, path) => {\n\tif ((!path || !path.length) && instructions && instructions.desc) {\n\t\t// Base case: If we were passed an empty path, then this is the target node\n\t\treturn instructions;\n\t} else if (path && path.length && instructions.children) {\n\t\t// Recurse Case: Else keep drilling down\n\t\treturn getHierNode(instructions.children[parseInt(path[0])], path.slice(1));\n\t} else {\n\t\t// Error case: Return an error\n\t\treturn {};\n\t}\n};\n\n/**\n * Returns true if the origCmds array includes a non-flex command on an edge including this vert.\n * @param origCmds the array of the original commands to check against (i.e. the commands in the actual json file)\n * @param vertIdx the index of the vertex in question\n */\nexport const cmdsInvolveVert = (origCmds, vertIdx) => {\n\t// console.log(\"[cmdsInvolveVert]\", origCmds)\n\treturn (\n\t\torigCmds &&\n\t\torigCmds.find(cmd => (cmd.length !== 4 || !cmd[3].flex) && (cmd[0] === vertIdx || cmd[1] === vertIdx))\n\t);\n};\n\n/**\n * Returns true if the origCmds array includes a non-flex command on an edge including this vert.\n * @param origCmds the array of the original commands to check against (i.e. the commands in the actual json file)\n * @param vertIdx the index of the vertex in question\n */\nexport const cmdsInvolveEdge = (origCmds, edge) => {\n\t// console.log(\"[cmdsInvolveEdge]\", origCmds)\n\tif (stepIs3D(origCmds)) {\n\t\treturn origCmds.find(subCmds => cmdsInvolveEdge(subCmds, edge));\n\t}\n\n\treturn (\n\t\torigCmds &&\n\t\torigCmds.find(cmd => (cmd.length !== 4 || !cmd[3].flex) && (edge.includes(cmd[0]) && edge.includes(cmd[1])))\n\t);\n};\n\nexport const printPath = path => path.reduce((acc, idx, i) => (i ? ',' : '') + idx, '');\n\nexport const stepIs3D = step => step.length && step[0].length && Array.isArray(step[0][0]);\n\nexport const stepIs2D = step => step.length && Array.isArray(step[0]);\n\nexport const stepIs1D = step => step.length && !Array.isArray(step[0]);\n\nexport const stepHasArgs = step => step.length > 3 && step[3];\n\n/**\n * A comparison function for use in sorting lists of cmds (i.e. a step). \n * Right now just puts flex items first - this is because they don't initiate movement,\n * but need to be processed in full before any movement begins.\n */\nexport const cmdOrderingComparator = (lhs, rhs) => {\n\tconst lhsFlex = stepHasArgs(lhs) && lhs[3].flex;\n\tconst rhsFlex = stepHasArgs(lhs) && lhs[3].flex;\n\treturn (lhsFlex && !rhsFlex) ? 1 : (rhsFlex ? -1 : 0);\n};\n\nexport const timerPosixToString = (timerPosix) => {\n\tconst date = new Date(timerPosix);\n\tconst minStr = `${date.getMinutes()}`.padStart(2, '0');\n\tconst secStr = `${date.getSeconds()}`.padStart(2, '0');\n\treturn `${minStr}:${secStr}`;\n}","/home/bbor/dev/origamiodyssey/src/layout/pages/InstructionalHierarchy.js",["274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308"],"/home/bbor/dev/origamiodyssey/src/layout/pages/ModelCard.js",["309","310","311","312","313","314","315","316","317","318","319","320","321","322","323"],"/home/bbor/dev/origamiodyssey/src/layout/pages/Timer.js",["324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354"],"/**\n * FILENAME: Timer.js\n *\n * DESCRIPTION: This page allows the user to browse through cards, read details on models, and select one to fold.\n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useUpdate, useSpring, useSprings, animated, config } from 'react-spring';\n\nimport {\n\tButtonGroup,\n\tDivider,\n\tTypography,\n\tCardMedia,\n\tCardActionArea,\n\tCardActions,\n\tCardContent,\n\tButton,\n\tGrid,\n\tFab,\n\tCard,\n\tChip,\n\tSnackbar,\n\tPaper,\n\tTooltip\n} from '@material-ui/core';\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport FilterList from '@material-ui/icons/FilterList';\nimport Clear from '@material-ui/icons/Clear';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport Pause from '@material-ui/icons/Pause';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport Done from '@material-ui/icons/Done';\n\nimport useStyles from './../../style/theme';\nimport { Folds, Pages, Tags, TagCategories, LikertTitles } from './../../infra/constants';\nimport { setLayoutState, setFoldState, addHistoryEntry } from './../../infra/actions';\nimport { timerPosixToString } from './../../infra/utils';\n\n/**\n * A timer that will re-rerender every second minimum.\n */\nexport const Timer = props => {\n\tconst {\n\t\tfoldEntry,\n\t\tname,\n\t\tplaceholderRef,\n\t\tcardKey,\n\t\tindex,\n\t\tisActive,\n\t\tisHidden,\n\t\thandleCardClick,\n\t\tlayoutState,\n\t\tsetLayoutState,\n\t\tfoldState,\n\t\tsetFoldState,\n\t\tuserState,\n\t\taddHistoryEntry\n\t} = props;\n\tconst [curHash, setHash] = useState(0);\n\tconst [isPlaying, setIsPlaying] = useState(false);\n\tconst [startPosix, setStartPosix] = useState(-1);\n\tconst [workerId, setWorkerId] = useState(-1);\n\tconst [hasInitialized, setHasInitialized] = useState(false);\n\tconst [hasFinished, setHasFinished] = useState(false);\n\tconst [showSnackbar, setShowSnackbar] = useState(false);\n\tconst [showLikertAssess, setShowLikertAssess] = useState(false);\n\tconst [lastLikert, setLastLikert] = useState(-1);\n\tconst classes = useStyles();\n\tconst style = useRef({});\n\n\tuseEffect(() => console.log('[Timer]', cardKey), []);\n\n\t/**\n\t * Pass the click event on to the parent function to open a fold page.\n\t */\n\tconst handleFoldClick = e => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\n\t\topenFold(cardKey);\n\t};\n\n\t/**\n\t * Open the fold page with the supplied model name, closing this page.\n\t */\n\tconst openFold = foldKey => {\n\t\tsetLayoutState({\n\t\t\tpage: Pages.Fold,\n\t\t\tcurFold: foldKey\n\t\t});\n\t};\n\n\tconst triggerRerender = () => {\n\t\tsetHash(cur => cur + 1);\n\t};\n\n\tconst toggleTimer = () => {\n\t\tif (isPlaying && workerId !== -1) {\n\t\t\tsetFoldState({\n\t\t\t\tlastRecordedTimer: foldState.lastRecordedTimer + (Date.now() - startPosix)\n\t\t\t});\n\n\t\t\tclearInterval(workerId);\n\t\t\tsetWorkerId(-1);\n\t\t\tsetStartPosix(-1);\n\t\t} else if (!isPlaying && workerId === -1){\n\t\t\tsetWorkerId(setInterval(triggerRerender, 1000))\n\t\t\tsetStartPosix(Date.now());\n\t\t}\n\n\t\tsetIsPlaying(cur => !cur);\n\t};\n\n\t/**\n\t * Reset the state that backs the value of the timer. Does not affect the running state;\n\t * a running timer that is reset will immediately start counting from 0. \n\t */\n\tconst resetTimer = () => {\n\t\t// Erase any record of the previous run - it is not saved anywhere\n\t\tsetFoldState({ lastRecordedTimer: 0 });\n\n\t\t// Start running immediately if it was already running\n\t\tsetStartPosix(isPlaying ? Date.now()  : -1);\n\n\t\t// Don't update the worker - if it's running, let it continue running\n\t};\n\n\tconst resetAllState = () => {\n\t\tsetIsPlaying(false);\n\t\tsetHasInitialized(false);\n\t\tsetHasFinished(false);\n\t\tsetStartPosix(-1);\n\n\t\tsetFoldState({lastRecordedTimer: 0});\n\t};\n\n\tconst handleRecordQuality = () => {\n\t\tsetShowLikertAssess(true);\n\t};\n\n\tconst handleModelSelect = () => {\n\t\tcloseSnackbar();\n\t\tsetLayoutState({\n\t\t\tpage: Pages.ModelSelect,\n\t\t\tcurFold: null\n\t\t});\n\n\t\t// Reset fold state\n\t\tsetFoldState(null);\n\t};\n\n\tconst handleFoldAnother = () => {\n\t\tcloseSnackbar();\n\t\tresetAllState();\n\n\t\t// Reset fold state\n\t\tsetFoldState({\n\t\t\tstepIdx: -1\t,\n\t\t\trepeatRoot: -1,\n\t\t\trepeatRange: null\n\t\t});\n\t}\n\n\tconst handleSubmitLikert = () => {\n\t\tsetShowLikertAssess(false);\n\t};\n\n\tconst genLikertScale = () => {\n\t\tlet ret = [];\n\t\tfor (let i = 0; i < 5; i++) {\n\t\t\tconst isActive = i <= lastLikert;\n\t\t\tret.push(\n\t\t\t\t<Tooltip\n\t\t\t\t\ttitle={LikertTitles[i]}\n\t\t\t\t\tplacement=\"bottom-start\"\n\t\t\t\t\tclasses={{ popper: classes.hier_node_tooltip }}\n\t\t\t\t\tkey={`likert-tt-${i}`}\n\t\t\t\t>\n\t\t\t\t\t<div key={i} className={classes.likert_icon_container} onClick={() => setLastLikert(cur => cur === i ? -1 : i)}>\n\t\t\t\t\t\t{isActive ? <Star className={classes.likert_icon}/> : <StarBorder className={classes.likert_icon}/>}\n\t\t\t\t\t</div>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<ButtonGroup variant=\"text\">\n\t\t\t\t{ret}\n\t\t\t\t<Button onClick={handleSubmitLikert} disabled={lastLikert === -1}>\n\t\t\t\t\tSubmit\t\n\t\t\t\t</Button>\n\t\t\t</ButtonGroup>\n\t\t);\n\t};\n\n\tconst closeSnackbar = () => {\n\t\tconsole.log(\"[closeSnackbar]\", hasFinished, showSnackbar, lastLikert, layoutState.curFold);\n\t\tif (!showSnackbar) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetShowSnackbar(false);\n\n\t\t// If details weren't already sent, send them now\n\t\tif (!hasFinished) {\n\t\t\tsetHasFinished(true);\t\n\n\t\t\tlet newEntry = {\n\t\t\t\tfoldKey: layoutState.curFold,\n\t\t\t\ttime: Date.now(),\n\t\t\t\tquality: lastLikert !== -1 ? lastLikert : 3,\n\t\t\t\ttimer: foldState.lastRecordedTimer\n\t\t\t};\n\n\t\t\taddHistoryEntry(newEntry);\n\n\t\t\tsetFoldState({ lastRecordedTimer: 0 });\n\t\t\tsetLastLikert(-1);\n\t\t}\n\t};\n\n\t// LIFECYCLE\n\n\t// Dynamically calculate the target size of the card\n\tstyle.current = {\n\t\theight: isActive ? '400px' : '180px',\n\t\twidth: isActive ? '400px' : '200px',\n\t\tdisplay: isHidden ? 'none' : undefined\n\t};\n\n\tif (placeholderRef && placeholderRef.current) {\n\t\tstyle.current.top = placeholderRef.current.offsetTop;\n\t\tstyle.current.left = placeholderRef.current.offsetLeft;\n\t}\n\n\t// Every time a new model is selected, the timer starts from scratch\n\tuseEffect(resetAllState, [layoutState.curFold]);\n\n\tuseEffect(() => {\n\t\tconsole.log(\"[Timer useEffect] \", foldState.stepIdx, foldState.maxSteps)\n\t\t// If this is a change to the last step, \n\t\tif (foldState.stepIdx >= foldState.maxSteps - 1) {\n\t\t\tif (isPlaying) {\n\t\t\t\ttoggleTimer();\n\t\t\t}\n\n\t\t\tsetShowSnackbar(true);\n\n\t\t// Start the timer the first time the user changes steps\n\t\t// TODO - probably good feature, but system needs redesign\n\t\t// } else if (!hasInitialized && !isPlaying) {\n\t\t// \tsetHasInitialized(true);\n\t\t// \tsetIsPlaying(true);\n\t\t// \tsetStartPosix(Date.now());\n\t\t}\n\n\t\t// Close the snackbar on unmount if it's open, which involves saving\n\t\treturn closeSnackbar;\n\t}, [foldState.stepIdx]);\n\n\tlet timerPosix = foldState.lastRecordedTimer;\n\tif (isPlaying) {\n\t\ttimerPosix += Date.now() - startPosix;\n\t}\n\n\tconsole.log(\"[Timer]\", timerPosix, foldState.lastRecordedTimer, isPlaying);\n\n\t// This is the actual card: an `absolute` element so it can grow or shrink in place without affecting others' positioning\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className={classes.fold_timer_container}>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={`${classes.fold_timer} ${!isPlaying ? classes.fold_timer__paused : ''}`}\n\t\t\t\t\t\tcolor={isPlaying ? undefined : \"primary\"}\n\t\t\t\t\t\t// variant=\"text\"\n\t\t\t\t\t\t// size=\"large\"\n\t\t\t\t\t\tonClick={toggleTimer}\n\t\t\t\t\t>\n\t\t\t\t\t\t{!isPlaying && <PlayArrow/>}\n\t\t\t\t\t\t{timerPosixToString(timerPosix)}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button className={classes.fold_timer_control} onClick={resetTimer} disabled={!isPlaying && !foldState.lastRecordedTimer}>\n\t\t\t\t\t\t<Clear />\t\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</div>\n\t\t\t<Snackbar className={classes.fold_timer_snackbar} open={showSnackbar} anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}>\n\t\t\t\t<Paper elevation={5}>\n\t\t\t\t{showLikertAssess ? (\n\t\t\t\t\t<Grid className={classes.fold_timer_grid} container>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Typography variant=\"h4\" component=\"h4\">\n\t\t\t\t\t\t\t\tPlease rate the quality of this result...\t\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t{genLikertScale()}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t) : (\n\t\t\t\t\t<Grid className={classes.fold_timer_grid} container>\n\t\t\t\t\t\t<Grid item xs={10}>\n\t\t\t\t\t\t\t<Typography  variant=\"h4\" component=\"h4\">\n\t\t\t\t\t\t\t\tModel complete\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Button classes={{root: classes.fold_timer_snackbar_close}} onClick={closeSnackbar}>\n\t\t\t\t\t\t\t\t<Clear />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{userState.showLikertAssess && (\n\t\t\t\t\t\t\t<Grid item xs={12} md={4}>\n\t\t\t\t\t\t\t\t<Button onClick={handleRecordQuality} disabled={lastLikert !== -1}>\n\t\t\t\t\t\t\t\t\t{lastLikert !== -1 && (\n\t\t\t\t\t\t\t\t\t\t<Done className={classes.fold_timer_done_icon} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tRecord Quality\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Grid item xs={12} md={4}>\n\t\t\t\t\t\t\t<Button onClick={handleFoldAnother}>\n\t\t\t\t\t\t\t\tFold Another\t\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} md={4}>\n\t\t\t\t\t\t\t<Button onClick={handleModelSelect}>\n\t\t\t\t\t\t\t\tFind Another Model\t\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\t\t\t\t</Paper>\n\t\t\t</Snackbar>\n\t\t\t</React.Fragment>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tlayoutState: state.appReducer.layoutState,\n\t\tlayoutStateHash: state.appReducer.layoutState.hash,\n\t\tfoldState: state.appReducer.foldState,\n\t\tfoldStateHash: state.appReducer.foldState.hash,\n\t\tuserState: state.appReducer.userState,\n\t\tuserStateHash: state.appReducer.userState.hash\n\t};\n};\n\nexport default connect(mapStateToProps, { setLayoutState, setFoldState, addHistoryEntry })(Timer);\n",{"ruleId":"355","replacedBy":"356"},{"ruleId":"357","replacedBy":"358"},{"ruleId":"359","severity":1,"message":"360","line":8,"column":35,"nodeType":"361","messageId":"362","endLine":8,"endColumn":42},{"ruleId":"359","severity":1,"message":"363","line":8,"column":44,"nodeType":"361","messageId":"362","endLine":8,"endColumn":53},{"ruleId":"359","severity":1,"message":"364","line":13,"column":2,"nodeType":"361","messageId":"362","endLine":13,"endColumn":19},{"ruleId":"359","severity":1,"message":"365","line":16,"column":2,"nodeType":"361","messageId":"362","endLine":16,"endColumn":12},{"ruleId":"359","severity":1,"message":"366","line":17,"column":2,"nodeType":"361","messageId":"362","endLine":17,"endColumn":6},{"ruleId":"359","severity":1,"message":"367","line":18,"column":2,"nodeType":"361","messageId":"362","endLine":18,"endColumn":10},{"ruleId":"359","severity":1,"message":"368","line":32,"column":9,"nodeType":"361","messageId":"362","endLine":32,"endColumn":17},{"ruleId":"359","severity":1,"message":"369","line":32,"column":19,"nodeType":"361","messageId":"362","endLine":32,"endColumn":30},{"ruleId":"359","severity":1,"message":"370","line":35,"column":8,"nodeType":"361","messageId":"362","endLine":35,"endColumn":12},{"ruleId":"359","severity":1,"message":"371","line":41,"column":8,"nodeType":"361","messageId":"362","endLine":41,"endColumn":23},{"ruleId":"359","severity":1,"message":"372","line":45,"column":8,"nodeType":"361","messageId":"362","endLine":45,"endColumn":23},{"ruleId":"359","severity":1,"message":"373","line":11,"column":10,"nodeType":"361","messageId":"362","endLine":11,"endColumn":25},{"ruleId":"359","severity":1,"message":"374","line":11,"column":27,"nodeType":"361","messageId":"362","endLine":11,"endColumn":33},{"ruleId":"359","severity":1,"message":"375","line":11,"column":35,"nodeType":"361","messageId":"362","endLine":11,"endColumn":39},{"ruleId":"359","severity":1,"message":"376","line":11,"column":41,"nodeType":"361","messageId":"362","endLine":11,"endColumn":48},{"ruleId":"359","severity":1,"message":"377","line":11,"column":50,"nodeType":"361","messageId":"362","endLine":11,"endColumn":58},{"ruleId":"359","severity":1,"message":"378","line":12,"column":8,"nodeType":"361","messageId":"362","endLine":12,"endColumn":20},{"ruleId":"359","severity":1,"message":"379","line":13,"column":8,"nodeType":"361","messageId":"362","endLine":13,"endColumn":20},{"ruleId":"359","severity":1,"message":"380","line":14,"column":8,"nodeType":"361","messageId":"362","endLine":14,"endColumn":22},{"ruleId":"359","severity":1,"message":"381","line":15,"column":8,"nodeType":"361","messageId":"362","endLine":15,"endColumn":25},{"ruleId":"359","severity":1,"message":"382","line":18,"column":24,"nodeType":"361","messageId":"362","endLine":18,"endColumn":35},{"ruleId":"359","severity":1,"message":"383","line":31,"column":3,"nodeType":"361","messageId":"362","endLine":31,"endColumn":18},{"ruleId":"359","severity":1,"message":"384","line":34,"column":3,"nodeType":"361","messageId":"362","endLine":34,"endColumn":16},{"ruleId":"359","severity":1,"message":"385","line":37,"column":3,"nodeType":"361","messageId":"362","endLine":37,"endColumn":18},{"ruleId":"386","severity":1,"message":"387","line":164,"column":5,"nodeType":"388","endLine":164,"endColumn":7,"suggestions":"389"},{"ruleId":"386","severity":1,"message":"390","line":168,"column":5,"nodeType":"388","endLine":168,"endColumn":57,"suggestions":"391"},{"ruleId":"386","severity":1,"message":"392","line":171,"column":24,"nodeType":"388","endLine":171,"endColumn":45,"suggestions":"393"},{"ruleId":"386","severity":1,"message":"394","line":177,"column":5,"nodeType":"388","endLine":177,"endColumn":14,"suggestions":"395"},{"ruleId":"386","severity":1,"message":"396","line":179,"column":35,"nodeType":"388","endLine":179,"endColumn":53,"suggestions":"397"},{"ruleId":"386","severity":1,"message":"398","line":180,"column":45,"nodeType":"388","endLine":180,"endColumn":77,"suggestions":"399"},{"ruleId":"359","severity":1,"message":"400","line":8,"column":17,"nodeType":"361","messageId":"362","endLine":8,"endColumn":25},{"ruleId":"359","severity":1,"message":"401","line":8,"column":27,"nodeType":"361","messageId":"362","endLine":8,"endColumn":33},{"ruleId":"359","severity":1,"message":"360","line":8,"column":35,"nodeType":"361","messageId":"362","endLine":8,"endColumn":42},{"ruleId":"359","severity":1,"message":"363","line":8,"column":44,"nodeType":"361","messageId":"362","endLine":8,"endColumn":53},{"ruleId":"402","severity":1,"message":"403","line":12,"column":8,"nodeType":"404","messageId":"405","endLine":12,"endColumn":11},{"ruleId":"355","replacedBy":"406"},{"ruleId":"357","replacedBy":"407"},{"ruleId":"359","severity":1,"message":"400","line":7,"column":17,"nodeType":"361","messageId":"362","endLine":7,"endColumn":25},{"ruleId":"359","severity":1,"message":"401","line":7,"column":27,"nodeType":"361","messageId":"362","endLine":7,"endColumn":33},{"ruleId":"359","severity":1,"message":"360","line":7,"column":35,"nodeType":"361","messageId":"362","endLine":7,"endColumn":42},{"ruleId":"359","severity":1,"message":"363","line":7,"column":44,"nodeType":"361","messageId":"362","endLine":7,"endColumn":53},{"ruleId":"359","severity":1,"message":"408","line":9,"column":8,"nodeType":"361","messageId":"362","endLine":9,"endColumn":18},{"ruleId":"359","severity":1,"message":"409","line":10,"column":8,"nodeType":"361","messageId":"362","endLine":10,"endColumn":17},{"ruleId":"359","severity":1,"message":"410","line":11,"column":8,"nodeType":"361","messageId":"362","endLine":11,"endColumn":21},{"ruleId":"359","severity":1,"message":"411","line":12,"column":8,"nodeType":"361","messageId":"362","endLine":12,"endColumn":20},{"ruleId":"359","severity":1,"message":"412","line":17,"column":8,"nodeType":"361","messageId":"362","endLine":17,"endColumn":16},{"ruleId":"359","severity":1,"message":"360","line":8,"column":35,"nodeType":"361","messageId":"362","endLine":8,"endColumn":42},{"ruleId":"359","severity":1,"message":"363","line":8,"column":44,"nodeType":"361","messageId":"362","endLine":8,"endColumn":53},{"ruleId":"359","severity":1,"message":"413","line":12,"column":38,"nodeType":"361","messageId":"362","endLine":12,"endColumn":47},{"ruleId":"359","severity":1,"message":"414","line":17,"column":10,"nodeType":"361","messageId":"362","endLine":17,"endColumn":19},{"ruleId":"359","severity":1,"message":"415","line":17,"column":21,"nodeType":"361","messageId":"362","endLine":17,"endColumn":30},{"ruleId":"359","severity":1,"message":"416","line":17,"column":32,"nodeType":"361","messageId":"362","endLine":17,"endColumn":42},{"ruleId":"359","severity":1,"message":"417","line":17,"column":44,"nodeType":"361","messageId":"362","endLine":17,"endColumn":52},{"ruleId":"359","severity":1,"message":"418","line":17,"column":54,"nodeType":"361","messageId":"362","endLine":17,"endColumn":60},{"ruleId":"359","severity":1,"message":"419","line":21,"column":10,"nodeType":"361","messageId":"362","endLine":21,"endColumn":15},{"ruleId":"359","severity":1,"message":"420","line":21,"column":17,"nodeType":"361","messageId":"362","endLine":21,"endColumn":22},{"ruleId":"359","severity":1,"message":"421","line":67,"column":37,"nodeType":"361","messageId":"362","endLine":67,"endColumn":46},{"ruleId":"359","severity":1,"message":"383","line":67,"column":61,"nodeType":"361","messageId":"362","endLine":67,"endColumn":76},{"ruleId":"359","severity":1,"message":"422","line":73,"column":9,"nodeType":"361","messageId":"362","endLine":73,"endColumn":22},{"ruleId":"423","severity":1,"message":"424","line":15,"column":2,"nodeType":"425","messageId":"426","endLine":65,"endColumn":3},{"ruleId":"427","severity":1,"message":"428","line":100,"column":3,"nodeType":"429","messageId":"405","endLine":100,"endColumn":8},{"ruleId":"359","severity":1,"message":"430","line":11,"column":10,"nodeType":"361","messageId":"362","endLine":11,"endColumn":16},{"ruleId":"359","severity":1,"message":"413","line":11,"column":38,"nodeType":"361","messageId":"362","endLine":11,"endColumn":47},{"ruleId":"359","severity":1,"message":"431","line":11,"column":49,"nodeType":"361","messageId":"362","endLine":11,"endColumn":55},{"ruleId":"359","severity":1,"message":"415","line":16,"column":13,"nodeType":"361","messageId":"362","endLine":16,"endColumn":22},{"ruleId":"359","severity":1,"message":"432","line":36,"column":3,"nodeType":"361","messageId":"362","endLine":36,"endColumn":11},{"ruleId":"359","severity":1,"message":"433","line":37,"column":3,"nodeType":"361","messageId":"362","endLine":37,"endColumn":8},{"ruleId":"359","severity":1,"message":"434","line":42,"column":3,"nodeType":"361","messageId":"362","endLine":42,"endColumn":18},{"ruleId":"359","severity":1,"message":"384","line":45,"column":3,"nodeType":"361","messageId":"362","endLine":45,"endColumn":16},{"ruleId":"359","severity":1,"message":"385","line":48,"column":3,"nodeType":"361","messageId":"362","endLine":48,"endColumn":18},{"ruleId":"359","severity":1,"message":"435","line":54,"column":9,"nodeType":"361","messageId":"362","endLine":54,"endColumn":21},{"ruleId":"359","severity":1,"message":"436","line":54,"column":23,"nodeType":"361","messageId":"362","endLine":54,"endColumn":38},{"ruleId":"359","severity":1,"message":"437","line":57,"column":8,"nodeType":"361","messageId":"362","endLine":57,"endColumn":16},{"ruleId":"438","severity":1,"message":"439","line":339,"column":59,"nodeType":"440","messageId":"441","endLine":339,"endColumn":61},{"ruleId":"359","severity":1,"message":"442","line":496,"column":8,"nodeType":"361","messageId":"362","endLine":496,"endColumn":18},{"ruleId":"359","severity":1,"message":"443","line":538,"column":9,"nodeType":"361","messageId":"362","endLine":538,"endColumn":17},{"ruleId":"359","severity":1,"message":"444","line":792,"column":8,"nodeType":"361","messageId":"362","endLine":792,"endColumn":17},{"ruleId":"359","severity":1,"message":"445","line":826,"column":8,"nodeType":"361","messageId":"362","endLine":826,"endColumn":28},{"ruleId":"386","severity":1,"message":"446","line":939,"column":44,"nodeType":"388","endLine":942,"endColumn":3,"suggestions":"447"},{"ruleId":"386","severity":1,"message":"448","line":940,"column":3,"nodeType":"449","endLine":940,"endColumn":46},{"ruleId":"386","severity":1,"message":"448","line":941,"column":3,"nodeType":"449","endLine":941,"endColumn":43},{"ruleId":"386","severity":1,"message":"450","line":944,"column":33,"nodeType":"388","endLine":944,"endColumn":52,"suggestions":"451"},{"ruleId":"386","severity":1,"message":"452","line":945,"column":27,"nodeType":"388","endLine":945,"endColumn":36,"suggestions":"453"},{"ruleId":"386","severity":1,"message":"454","line":946,"column":39,"nodeType":"388","endLine":946,"endColumn":66,"suggestions":"455"},{"ruleId":"386","severity":1,"message":"456","line":947,"column":26,"nodeType":"388","endLine":947,"endColumn":50,"suggestions":"457"},{"ruleId":"359","severity":1,"message":"401","line":8,"column":27,"nodeType":"361","messageId":"362","endLine":8,"endColumn":33},{"ruleId":"359","severity":1,"message":"360","line":8,"column":35,"nodeType":"361","messageId":"362","endLine":8,"endColumn":42},{"ruleId":"359","severity":1,"message":"363","line":8,"column":44,"nodeType":"361","messageId":"362","endLine":8,"endColumn":53},{"ruleId":"359","severity":1,"message":"374","line":11,"column":27,"nodeType":"361","messageId":"362","endLine":11,"endColumn":33},{"ruleId":"359","severity":1,"message":"376","line":11,"column":41,"nodeType":"361","messageId":"362","endLine":11,"endColumn":48},{"ruleId":"359","severity":1,"message":"458","line":23,"column":10,"nodeType":"361","messageId":"362","endLine":23,"endColumn":14},{"ruleId":"359","severity":1,"message":"459","line":23,"column":89,"nodeType":"361","messageId":"362","endLine":23,"endColumn":101},{"ruleId":"359","severity":1,"message":"460","line":23,"column":103,"nodeType":"361","messageId":"362","endLine":23,"endColumn":112},{"ruleId":"359","severity":1,"message":"461","line":28,"column":46,"nodeType":"361","messageId":"362","endLine":28,"endColumn":55},{"ruleId":"359","severity":1,"message":"363","line":8,"column":44,"nodeType":"361","messageId":"362","endLine":8,"endColumn":53},{"ruleId":"359","severity":1,"message":"414","line":11,"column":10,"nodeType":"361","messageId":"362","endLine":11,"endColumn":19},{"ruleId":"359","severity":1,"message":"415","line":11,"column":21,"nodeType":"361","messageId":"362","endLine":11,"endColumn":30},{"ruleId":"359","severity":1,"message":"416","line":11,"column":32,"nodeType":"361","messageId":"362","endLine":11,"endColumn":42},{"ruleId":"359","severity":1,"message":"418","line":11,"column":54,"nodeType":"361","messageId":"362","endLine":11,"endColumn":60},{"ruleId":"359","severity":1,"message":"462","line":16,"column":2,"nodeType":"361","messageId":"362","endLine":16,"endColumn":11},{"ruleId":"359","severity":1,"message":"463","line":17,"column":2,"nodeType":"361","messageId":"362","endLine":17,"endColumn":16},{"ruleId":"359","severity":1,"message":"464","line":18,"column":2,"nodeType":"361","messageId":"362","endLine":18,"endColumn":13},{"ruleId":"359","severity":1,"message":"465","line":19,"column":2,"nodeType":"361","messageId":"362","endLine":19,"endColumn":13},{"ruleId":"359","severity":1,"message":"374","line":20,"column":2,"nodeType":"361","messageId":"362","endLine":20,"endColumn":8},{"ruleId":"359","severity":1,"message":"419","line":30,"column":17,"nodeType":"361","messageId":"362","endLine":30,"endColumn":22},{"ruleId":"359","severity":1,"message":"466","line":33,"column":7,"nodeType":"361","messageId":"362","endLine":33,"endColumn":19},{"ruleId":"359","severity":1,"message":"467","line":36,"column":23,"nodeType":"361","messageId":"362","endLine":36,"endColumn":37},{"ruleId":"359","severity":1,"message":"468","line":48,"column":9,"nodeType":"361","messageId":"362","endLine":48,"endColumn":16},{"ruleId":"386","severity":1,"message":"469","line":133,"column":59,"nodeType":"388","endLine":133,"endColumn":91,"suggestions":"470"},{"ruleId":"359","severity":1,"message":"401","line":8,"column":27,"nodeType":"361","messageId":"362","endLine":8,"endColumn":33},{"ruleId":"359","severity":1,"message":"471","line":8,"column":55,"nodeType":"361","messageId":"362","endLine":8,"endColumn":64},{"ruleId":"359","severity":1,"message":"414","line":11,"column":10,"nodeType":"361","messageId":"362","endLine":11,"endColumn":19},{"ruleId":"359","severity":1,"message":"415","line":11,"column":21,"nodeType":"361","messageId":"362","endLine":11,"endColumn":30},{"ruleId":"359","severity":1,"message":"416","line":11,"column":32,"nodeType":"361","messageId":"362","endLine":11,"endColumn":42},{"ruleId":"359","severity":1,"message":"417","line":11,"column":44,"nodeType":"361","messageId":"362","endLine":11,"endColumn":52},{"ruleId":"359","severity":1,"message":"418","line":11,"column":54,"nodeType":"361","messageId":"362","endLine":11,"endColumn":60},{"ruleId":"359","severity":1,"message":"373","line":13,"column":10,"nodeType":"361","messageId":"362","endLine":13,"endColumn":25},{"ruleId":"359","severity":1,"message":"375","line":13,"column":49,"nodeType":"361","messageId":"362","endLine":13,"endColumn":53},{"ruleId":"359","severity":1,"message":"376","line":13,"column":55,"nodeType":"361","messageId":"362","endLine":13,"endColumn":62},{"ruleId":"359","severity":1,"message":"377","line":13,"column":64,"nodeType":"361","messageId":"362","endLine":13,"endColumn":72},{"ruleId":"359","severity":1,"message":"420","line":18,"column":10,"nodeType":"361","messageId":"362","endLine":18,"endColumn":15},{"ruleId":"359","severity":1,"message":"472","line":23,"column":10,"nodeType":"361","messageId":"362","endLine":23,"endColumn":22},{"ruleId":"359","severity":1,"message":"384","line":23,"column":35,"nodeType":"361","messageId":"362","endLine":23,"endColumn":48},{"ruleId":"359","severity":1,"message":"473","line":29,"column":9,"nodeType":"361","messageId":"362","endLine":29,"endColumn":17},{"ruleId":"359","severity":1,"message":"474","line":29,"column":19,"nodeType":"361","messageId":"362","endLine":29,"endColumn":30},{"ruleId":"359","severity":1,"message":"468","line":30,"column":9,"nodeType":"361","messageId":"362","endLine":30,"endColumn":16},{"ruleId":"386","severity":1,"message":"475","line":59,"column":6,"nodeType":"388","endLine":59,"endColumn":8,"suggestions":"476"},{"ruleId":"386","severity":1,"message":"469","line":66,"column":49,"nodeType":"388","endLine":66,"endColumn":68,"suggestions":"477"},{"ruleId":"355","replacedBy":"478"},{"ruleId":"357","replacedBy":"479"},{"ruleId":"359","severity":1,"message":"401","line":8,"column":27,"nodeType":"361","messageId":"362","endLine":8,"endColumn":33},{"ruleId":"359","severity":1,"message":"360","line":8,"column":35,"nodeType":"361","messageId":"362","endLine":8,"endColumn":42},{"ruleId":"359","severity":1,"message":"363","line":8,"column":44,"nodeType":"361","messageId":"362","endLine":8,"endColumn":53},{"ruleId":"359","severity":1,"message":"471","line":8,"column":55,"nodeType":"361","messageId":"362","endLine":8,"endColumn":64},{"ruleId":"359","severity":1,"message":"414","line":11,"column":10,"nodeType":"361","messageId":"362","endLine":11,"endColumn":19},{"ruleId":"359","severity":1,"message":"415","line":11,"column":21,"nodeType":"361","messageId":"362","endLine":11,"endColumn":30},{"ruleId":"359","severity":1,"message":"416","line":11,"column":32,"nodeType":"361","messageId":"362","endLine":11,"endColumn":42},{"ruleId":"359","severity":1,"message":"417","line":11,"column":44,"nodeType":"361","messageId":"362","endLine":11,"endColumn":52},{"ruleId":"359","severity":1,"message":"418","line":11,"column":54,"nodeType":"361","messageId":"362","endLine":11,"endColumn":60},{"ruleId":"359","severity":1,"message":"373","line":14,"column":2,"nodeType":"361","messageId":"362","endLine":14,"endColumn":17},{"ruleId":"359","severity":1,"message":"480","line":18,"column":2,"nodeType":"361","messageId":"362","endLine":18,"endColumn":8},{"ruleId":"359","severity":1,"message":"375","line":21,"column":2,"nodeType":"361","messageId":"362","endLine":21,"endColumn":6},{"ruleId":"359","severity":1,"message":"377","line":29,"column":2,"nodeType":"361","messageId":"362","endLine":29,"endColumn":10},{"ruleId":"359","severity":1,"message":"481","line":30,"column":2,"nodeType":"361","messageId":"362","endLine":30,"endColumn":6},{"ruleId":"359","severity":1,"message":"482","line":51,"column":35,"nodeType":"361","messageId":"362","endLine":51,"endColumn":46},{"ruleId":"359","severity":1,"message":"483","line":53,"column":46,"nodeType":"361","messageId":"362","endLine":53,"endColumn":52},{"ruleId":"359","severity":1,"message":"471","line":8,"column":55,"nodeType":"361","messageId":"362","endLine":8,"endColumn":64},{"ruleId":"359","severity":1,"message":"414","line":11,"column":10,"nodeType":"361","messageId":"362","endLine":11,"endColumn":19},{"ruleId":"359","severity":1,"message":"415","line":11,"column":21,"nodeType":"361","messageId":"362","endLine":11,"endColumn":30},{"ruleId":"359","severity":1,"message":"416","line":11,"column":32,"nodeType":"361","messageId":"362","endLine":11,"endColumn":42},{"ruleId":"359","severity":1,"message":"417","line":11,"column":44,"nodeType":"361","messageId":"362","endLine":11,"endColumn":52},{"ruleId":"359","severity":1,"message":"418","line":11,"column":54,"nodeType":"361","messageId":"362","endLine":11,"endColumn":60},{"ruleId":"359","severity":1,"message":"375","line":25,"column":2,"nodeType":"361","messageId":"362","endLine":25,"endColumn":6},{"ruleId":"359","severity":1,"message":"377","line":27,"column":2,"nodeType":"361","messageId":"362","endLine":27,"endColumn":10},{"ruleId":"359","severity":1,"message":"484","line":30,"column":8,"nodeType":"361","messageId":"362","endLine":30,"endColumn":20},{"ruleId":"359","severity":1,"message":"485","line":31,"column":8,"nodeType":"361","messageId":"362","endLine":31,"endColumn":16},{"ruleId":"359","severity":1,"message":"420","line":37,"column":10,"nodeType":"361","messageId":"362","endLine":37,"endColumn":15},{"ruleId":"359","severity":1,"message":"434","line":45,"column":3,"nodeType":"361","messageId":"362","endLine":45,"endColumn":18},{"ruleId":"359","severity":1,"message":"472","line":46,"column":3,"nodeType":"361","messageId":"362","endLine":46,"endColumn":15},{"ruleId":"359","severity":1,"message":"384","line":49,"column":3,"nodeType":"361","messageId":"362","endLine":49,"endColumn":16},{"ruleId":"359","severity":1,"message":"459","line":50,"column":3,"nodeType":"361","messageId":"362","endLine":50,"endColumn":15},{"ruleId":"359","severity":1,"message":"385","line":52,"column":3,"nodeType":"361","messageId":"362","endLine":52,"endColumn":18},{"ruleId":"359","severity":1,"message":"468","line":60,"column":9,"nodeType":"361","messageId":"362","endLine":60,"endColumn":16},{"ruleId":"359","severity":1,"message":"486","line":60,"column":18,"nodeType":"361","messageId":"362","endLine":60,"endColumn":25},{"ruleId":"359","severity":1,"message":"487","line":144,"column":8,"nodeType":"361","messageId":"362","endLine":144,"endColumn":21},{"ruleId":"386","severity":1,"message":"475","line":149,"column":3,"nodeType":"388","endLine":149,"endColumn":5,"suggestions":"488"},{"ruleId":"359","severity":1,"message":"489","line":154,"column":8,"nodeType":"361","messageId":"362","endLine":154,"endColumn":16},{"ruleId":"386","severity":1,"message":"469","line":154,"column":49,"nodeType":"388","endLine":154,"endColumn":68,"suggestions":"490"},{"ruleId":"491","severity":1,"message":"492","line":57,"column":2,"nodeType":"493","messageId":"494","endLine":57,"endColumn":14},{"ruleId":"495","severity":1,"message":"496","line":97,"column":15,"nodeType":"497","messageId":"405","endLine":97,"endColumn":17},{"ruleId":"359","severity":1,"message":"471","line":8,"column":55,"nodeType":"361","messageId":"362","endLine":8,"endColumn":64},{"ruleId":"359","severity":1,"message":"414","line":11,"column":10,"nodeType":"361","messageId":"362","endLine":11,"endColumn":19},{"ruleId":"359","severity":1,"message":"415","line":11,"column":21,"nodeType":"361","messageId":"362","endLine":11,"endColumn":30},{"ruleId":"359","severity":1,"message":"416","line":11,"column":32,"nodeType":"361","messageId":"362","endLine":11,"endColumn":42},{"ruleId":"359","severity":1,"message":"417","line":11,"column":44,"nodeType":"361","messageId":"362","endLine":11,"endColumn":52},{"ruleId":"359","severity":1,"message":"418","line":11,"column":54,"nodeType":"361","messageId":"362","endLine":11,"endColumn":60},{"ruleId":"359","severity":1,"message":"373","line":14,"column":10,"nodeType":"361","messageId":"362","endLine":14,"endColumn":25},{"ruleId":"359","severity":1,"message":"498","line":14,"column":53,"nodeType":"361","messageId":"362","endLine":14,"endColumn":64},{"ruleId":"359","severity":1,"message":"375","line":14,"column":66,"nodeType":"361","messageId":"362","endLine":14,"endColumn":70},{"ruleId":"359","severity":1,"message":"376","line":14,"column":72,"nodeType":"361","messageId":"362","endLine":14,"endColumn":79},{"ruleId":"359","severity":1,"message":"377","line":14,"column":81,"nodeType":"361","messageId":"362","endLine":14,"endColumn":89},{"ruleId":"359","severity":1,"message":"499","line":17,"column":8,"nodeType":"361","messageId":"362","endLine":17,"endColumn":18},{"ruleId":"359","severity":1,"message":"500","line":18,"column":8,"nodeType":"361","messageId":"362","endLine":18,"endColumn":18},{"ruleId":"359","severity":1,"message":"420","line":21,"column":10,"nodeType":"361","messageId":"362","endLine":21,"endColumn":15},{"ruleId":"359","severity":1,"message":"501","line":24,"column":46,"nodeType":"361","messageId":"362","endLine":24,"endColumn":55},{"ruleId":"359","severity":1,"message":"472","line":30,"column":3,"nodeType":"361","messageId":"362","endLine":30,"endColumn":15},{"ruleId":"359","severity":1,"message":"384","line":34,"column":3,"nodeType":"361","messageId":"362","endLine":34,"endColumn":16},{"ruleId":"359","severity":1,"message":"383","line":37,"column":3,"nodeType":"361","messageId":"362","endLine":37,"endColumn":18},{"ruleId":"359","severity":1,"message":"502","line":40,"column":3,"nodeType":"361","messageId":"362","endLine":40,"endColumn":15},{"ruleId":"359","severity":1,"message":"468","line":51,"column":9,"nodeType":"361","messageId":"362","endLine":51,"endColumn":16},{"ruleId":"386","severity":1,"message":"503","line":57,"column":82,"nodeType":"388","endLine":57,"endColumn":99,"suggestions":"504"},{"ruleId":"359","severity":1,"message":"505","line":59,"column":8,"nodeType":"361","messageId":"362","endLine":59,"endColumn":16},{"ruleId":"438","severity":1,"message":"439","line":88,"column":28,"nodeType":"440","messageId":"441","endLine":88,"endColumn":30},{"ruleId":"359","severity":1,"message":"506","line":130,"column":8,"nodeType":"361","messageId":"362","endLine":130,"endColumn":25},{"ruleId":"507","severity":1,"message":"508","line":222,"column":15,"nodeType":"361","messageId":"509","endLine":222,"endColumn":22},{"ruleId":"359","severity":1,"message":"510","line":249,"column":13,"nodeType":"361","messageId":"362","endLine":249,"endColumn":21},{"ruleId":"359","severity":1,"message":"511","line":321,"column":8,"nodeType":"361","messageId":"362","endLine":321,"endColumn":17},{"ruleId":"386","severity":1,"message":"475","line":389,"column":3,"nodeType":"388","endLine":389,"endColumn":5,"suggestions":"512"},{"ruleId":"386","severity":1,"message":"513","line":392,"column":44,"nodeType":"388","endLine":395,"endColumn":3,"suggestions":"514"},{"ruleId":"386","severity":1,"message":"448","line":393,"column":3,"nodeType":"449","endLine":393,"endColumn":38},{"ruleId":"386","severity":1,"message":"448","line":394,"column":3,"nodeType":"449","endLine":394,"endColumn":35},{"ruleId":"386","severity":1,"message":"515","line":411,"column":5,"nodeType":"388","endLine":411,"endColumn":7,"suggestions":"516"},{"ruleId":"386","severity":1,"message":"517","line":416,"column":47,"nodeType":"388","endLine":416,"endColumn":83,"suggestions":"518"},{"ruleId":"386","severity":1,"message":"519","line":418,"column":26,"nodeType":"388","endLine":418,"endColumn":38,"suggestions":"520"},{"ruleId":"359","severity":1,"message":"521","line":422,"column":8,"nodeType":"361","messageId":"362","endLine":422,"endColumn":22},{"ruleId":"359","severity":1,"message":"471","line":8,"column":55,"nodeType":"361","messageId":"362","endLine":8,"endColumn":64},{"ruleId":"359","severity":1,"message":"414","line":11,"column":10,"nodeType":"361","messageId":"362","endLine":11,"endColumn":19},{"ruleId":"359","severity":1,"message":"415","line":11,"column":21,"nodeType":"361","messageId":"362","endLine":11,"endColumn":30},{"ruleId":"359","severity":1,"message":"416","line":11,"column":32,"nodeType":"361","messageId":"362","endLine":11,"endColumn":42},{"ruleId":"359","severity":1,"message":"418","line":11,"column":54,"nodeType":"361","messageId":"362","endLine":11,"endColumn":60},{"ruleId":"359","severity":1,"message":"522","line":21,"column":2,"nodeType":"361","messageId":"362","endLine":21,"endColumn":6},{"ruleId":"359","severity":1,"message":"523","line":22,"column":2,"nodeType":"361","messageId":"362","endLine":22,"endColumn":5},{"ruleId":"359","severity":1,"message":"524","line":26,"column":8,"nodeType":"361","messageId":"362","endLine":26,"endColumn":18},{"ruleId":"359","severity":1,"message":"525","line":27,"column":8,"nodeType":"361","messageId":"362","endLine":27,"endColumn":13},{"ruleId":"359","severity":1,"message":"420","line":30,"column":10,"nodeType":"361","messageId":"362","endLine":30,"endColumn":15},{"ruleId":"359","severity":1,"message":"526","line":30,"column":30,"nodeType":"361","messageId":"362","endLine":30,"endColumn":43},{"ruleId":"359","severity":1,"message":"466","line":32,"column":7,"nodeType":"361","messageId":"362","endLine":32,"endColumn":19},{"ruleId":"359","severity":1,"message":"527","line":51,"column":9,"nodeType":"361","messageId":"362","endLine":51,"endColumn":16},{"ruleId":"386","severity":1,"message":"528","line":55,"column":55,"nodeType":"388","endLine":55,"endColumn":57,"suggestions":"529"},{"ruleId":"359","severity":1,"message":"530","line":112,"column":8,"nodeType":"361","messageId":"362","endLine":112,"endColumn":17},{"ruleId":"359","severity":1,"message":"360","line":8,"column":35,"nodeType":"361","messageId":"362","endLine":8,"endColumn":42},{"ruleId":"359","severity":1,"message":"471","line":8,"column":55,"nodeType":"361","messageId":"362","endLine":8,"endColumn":64},{"ruleId":"359","severity":1,"message":"414","line":11,"column":10,"nodeType":"361","messageId":"362","endLine":11,"endColumn":19},{"ruleId":"359","severity":1,"message":"415","line":11,"column":21,"nodeType":"361","messageId":"362","endLine":11,"endColumn":30},{"ruleId":"359","severity":1,"message":"416","line":11,"column":32,"nodeType":"361","messageId":"362","endLine":11,"endColumn":42},{"ruleId":"359","severity":1,"message":"417","line":11,"column":44,"nodeType":"361","messageId":"362","endLine":11,"endColumn":52},{"ruleId":"359","severity":1,"message":"418","line":11,"column":54,"nodeType":"361","messageId":"362","endLine":11,"endColumn":60},{"ruleId":"359","severity":1,"message":"376","line":15,"column":2,"nodeType":"361","messageId":"362","endLine":15,"endColumn":9},{"ruleId":"359","severity":1,"message":"462","line":17,"column":2,"nodeType":"361","messageId":"362","endLine":17,"endColumn":11},{"ruleId":"359","severity":1,"message":"463","line":18,"column":2,"nodeType":"361","messageId":"362","endLine":18,"endColumn":16},{"ruleId":"359","severity":1,"message":"464","line":19,"column":2,"nodeType":"361","messageId":"362","endLine":19,"endColumn":13},{"ruleId":"359","severity":1,"message":"465","line":20,"column":2,"nodeType":"361","messageId":"362","endLine":20,"endColumn":13},{"ruleId":"359","severity":1,"message":"523","line":23,"column":2,"nodeType":"361","messageId":"362","endLine":23,"endColumn":5},{"ruleId":"359","severity":1,"message":"481","line":24,"column":2,"nodeType":"361","messageId":"362","endLine":24,"endColumn":6},{"ruleId":"359","severity":1,"message":"531","line":25,"column":2,"nodeType":"361","messageId":"362","endLine":25,"endColumn":6},{"ruleId":"359","severity":1,"message":"532","line":30,"column":8,"nodeType":"361","messageId":"362","endLine":30,"endColumn":16},{"ruleId":"359","severity":1,"message":"524","line":31,"column":8,"nodeType":"361","messageId":"362","endLine":31,"endColumn":18},{"ruleId":"359","severity":1,"message":"533","line":34,"column":8,"nodeType":"361","messageId":"362","endLine":34,"endColumn":13},{"ruleId":"359","severity":1,"message":"420","line":40,"column":10,"nodeType":"361","messageId":"362","endLine":40,"endColumn":15},{"ruleId":"359","severity":1,"message":"534","line":40,"column":24,"nodeType":"361","messageId":"362","endLine":40,"endColumn":28},{"ruleId":"359","severity":1,"message":"526","line":40,"column":30,"nodeType":"361","messageId":"362","endLine":40,"endColumn":43},{"ruleId":"359","severity":1,"message":"535","line":49,"column":3,"nodeType":"361","messageId":"362","endLine":49,"endColumn":12},{"ruleId":"359","severity":1,"message":"536","line":50,"column":3,"nodeType":"361","messageId":"362","endLine":50,"endColumn":7},{"ruleId":"359","severity":1,"message":"537","line":53,"column":3,"nodeType":"361","messageId":"362","endLine":53,"endColumn":8},{"ruleId":"359","severity":1,"message":"538","line":56,"column":3,"nodeType":"361","messageId":"362","endLine":56,"endColumn":18},{"ruleId":"359","severity":1,"message":"468","line":64,"column":9,"nodeType":"361","messageId":"362","endLine":64,"endColumn":16},{"ruleId":"359","severity":1,"message":"539","line":68,"column":9,"nodeType":"361","messageId":"362","endLine":68,"endColumn":23},{"ruleId":"386","severity":1,"message":"528","line":76,"column":51,"nodeType":"388","endLine":76,"endColumn":53,"suggestions":"540"},{"ruleId":"359","severity":1,"message":"541","line":81,"column":8,"nodeType":"361","messageId":"362","endLine":81,"endColumn":23},{"ruleId":"386","severity":1,"message":"454","line":242,"column":27,"nodeType":"388","endLine":242,"endColumn":48,"suggestions":"542"},{"ruleId":"386","severity":1,"message":"543","line":264,"column":5,"nodeType":"388","endLine":264,"endColumn":24,"suggestions":"544"},"no-native-reassign",["545"],"no-negated-in-lhs",["546"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'ClickAwayListener' is defined but never used.","'Typography' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'showMenu' is assigned a value but never used.","'setShowMenu' is assigned a value but never used.","'fold' is assigned a value but never used.","'handleClickAway' is assigned a value but never used.","'handleClickLogo' is assigned a value but never used.","'SwipeableDrawer' is defined but never used.","'Button' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'ArrowRightIcon' is defined but never used.","'ArrowDropDownIcon' is defined but never used.","'initNavTree' is defined but never used.","'layoutStateHash' is assigned a value but never used.","'foldStateHash' is assigned a value but never used.","'editorStateHash' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchStateFromCookies' and 'saveStateToCookies'. Either include them or remove the dependency array.","ArrayExpression",["547"],"React Hook useEffect has a missing dependency: 'saveStateToCookies'. Either include it or remove the dependency array.",["548"],"React Hook useEffect has missing dependencies: 'layoutState' and 'setFoldState'. Either include them or remove the dependency array.",["549"],"React Hook useMemo has an unnecessary dependency: 'curHash'. Either exclude it or remove the dependency array.",["550"],"React Hook useMemo has a missing dependency: 'windowHeight'. Either include it or remove the dependency array.",["551"],"React Hook useMemo has missing dependencies: 'foldOverrideCallback', 'layoutState.curFold', and 'userState.showEditor'. Either include them or remove the dependency array.",["552"],"'useState' is defined but never used.","'useRef' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["545"],["546"],"'SchoolIcon' is defined but never used.","'ClassIcon' is defined but never used.","'DashboardIcon' is defined but never used.","'GroupAddIcon' is defined but never used.","'FrogBase' is defined but never used.","'useLoader' is defined but never used.","'useUpdate' is defined but never used.","'useSpring' is defined but never used.","'useSprings' is defined but never used.","'animated' is defined but never used.","'config' is defined but never used.","'Pages' is defined but never used.","'Folds' is defined but never used.","'paperSize' is assigned a value but never used.","'newOverlayPos' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","'Canvas' is defined but never used.","'extend' is defined but never used.","'position' is assigned a value but never used.","'scale' is assigned a value but never used.","'foldLastUpdated' is assigned a value but never used.","'instructions' is assigned a value but never used.","'setInstructions' is assigned a value but never used.","'rotation' is assigned a value but never used.","array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'isSameLine' is assigned a value but never used.","'normLine' is assigned a value but never used.","'printVect' is assigned a value but never used.","'updateScreenPosition' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'foldState.usingDefaults'. Either include it or remove the dependency array.",["553"],"React Hook useMemo has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","React Hook useEffect has missing dependencies: 'foldState.active', 'foldState.maxSteps', 'performCommands', 'performReverseCommands', 'prevStep', and 'stepArray'. Either include them or remove the dependency array.",["554"],"React Hook useEffect has missing dependencies: 'initFold' and 'setFoldObj'. Either include them or remove the dependency array.",["555"],"React Hook useEffect has a missing dependency: 'setFoldState'. Either include it or remove the dependency array.",["556"],"React Hook useEffect has missing dependencies: 'camera', 'classes.vertLabel', 'ctrlOverlay', and 'getXYForPos'. Either include them or remove the dependency array.",["557"],"'page' is assigned a value but never used.","'setFoldState' is assigned a value but never used.","'userState' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'CardMedia' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'AnimatedCard' is assigned a value but never used.","'setLayoutState' is assigned a value but never used.","'curHash' is assigned a value but never used.","React Hook useMemo has an unnecessary dependency: 'window.innerWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.innerWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["558"],"'createRef' is defined but never used.","'windowHeight' is assigned a value but never used.","'cardRefs' is assigned a value but never used.","'setCardRefs' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'classes.fold_controls_button' and 'classes.fold_controls_button_label'. Either include them or remove the dependency array.",["559"],["560"],["545"],["546"],"'Select' is defined but never used.","'Card' is defined but never used.","'layoutState' is assigned a value but never used.","'logout' is assigned a value but never used.","'SkipPrevious' is defined but never used.","'SkipNext' is defined but never used.","'setHash' is assigned a value but never used.","'buttonClasses' is assigned a value but never used.",["561"],"'ctrlLeft' is assigned a value but never used.",["562"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'ButtonGroup' is defined but never used.","'ExpandMore' is defined but never used.","'ExpandLess' is defined but never used.","'printPath' is defined but never used.","'setUserState' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'initFold'. Either include it or remove the dependency array.",["563"],"'trackTop' is assigned a value but never used.","'handleExpandClick' is assigned a value but never used.","no-use-before-define","'stepIdx' was used before it was defined.","usedBeforeDefined","'children' is assigned a value but never used.","'jumpToEnd' is assigned a value but never used.",["564"],"React Hook useMemo has missing dependencies: 'foldState.usingDefaults' and 'initFold'. Either include them or remove the dependency array.",["565"],"React Hook useEffect has a missing dependency: 'looperWorkerId'. Either include it or remove the dependency array.",["566"],"React Hook useEffect has missing dependencies: 'maxLevel' and 'refreshRenderRows'. Either include them or remove the dependency array.",["567"],"React Hook useEffect has missing dependencies: 'changeStep', 'foldState.repeatRange', 'foldState.repeatRoot', 'foldState.stepIdx', and 'looperDirection'. Either include them or remove the dependency array.",["568"],"'ctrlCardLeftPx' is assigned a value but never used.","'Grid' is defined but never used.","'Fab' is defined but never used.","'FilterList' is defined but never used.","'Clear' is defined but never used.","'TagCategories' is defined but never used.","'posHash' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'cardKey'. Either include it or remove the dependency array.",["569"],"'imagePath' is assigned a value but never used.","'Chip' is defined but never used.","'MuiAlert' is defined but never used.","'Pause' is defined but never used.","'Tags' is defined but never used.","'foldEntry' is assigned a value but never used.","'name' is assigned a value but never used.","'index' is assigned a value but never used.","'handleCardClick' is assigned a value but never used.","'hasInitialized' is assigned a value but never used.",["570"],"'handleFoldClick' is assigned a value but never used.",["571"],"React Hook useEffect has missing dependencies: 'closeSnackbar', 'foldState.maxSteps', 'isPlaying', and 'toggleTimer'. Either include them or remove the dependency array.",["572"],"no-global-assign","no-unsafe-negation",{"desc":"573","fix":"574"},{"desc":"575","fix":"576"},{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},{"desc":"581","fix":"582"},{"desc":"583","fix":"584"},{"desc":"585","fix":"586"},{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"597","fix":"598"},{"desc":"579","fix":"599"},{"desc":"597","fix":"600"},{"desc":"579","fix":"601"},{"desc":"602","fix":"603"},{"desc":"597","fix":"604"},{"desc":"605","fix":"606"},{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},{"desc":"613","fix":"614"},{"desc":"613","fix":"615"},{"desc":"616","fix":"617"},{"desc":"618","fix":"619"},"Update the dependencies array to be: [fetchStateFromCookies, saveStateToCookies]",{"range":"620","text":"621"},"Update the dependencies array to be: [layoutState.hash, foldState.hash, editorState.hash, saveStateToCookies]",{"range":"622","text":"623"},"Update the dependencies array to be: [layoutState, layoutState.curFold, setFoldState]",{"range":"624","text":"625"},"Update the dependencies array to be: []",{"range":"626","text":"627"},"Update the dependencies array to be: [layoutState.page, windowHeight]",{"range":"628","text":"629"},"Update the dependencies array to be: [foldOverrideCallback, layoutState.curFold, layoutState.page, userState.showEditor, windowHeight]",{"range":"630","text":"631"},"Update the dependencies array to be: [foldState.usingDefaults]",{"range":"632","text":"633"},"Update the dependencies array to be: [foldState.active, foldState.maxSteps, foldState.stepIdx, performCommands, performReverseCommands, prevStep, stepArray]",{"range":"634","text":"635"},"Update the dependencies array to be: [foldKey, initFold, setFoldObj]",{"range":"636","text":"637"},"Update the dependencies array to be: [foldKey, setFoldState, stepArray.length]",{"range":"638","text":"639"},"Update the dependencies array to be: [camera, classes.vertLabel, ctrlOverlay, editorState.showLabels, getXYForPos]",{"range":"640","text":"641"},"Update the dependencies array to be: [activeIndex]",{"range":"642","text":"643"},"Update the dependencies array to be: [classes.fold_controls_button, classes.fold_controls_button_label]",{"range":"644","text":"645"},{"range":"646","text":"627"},{"range":"647","text":"645"},{"range":"648","text":"627"},"Update the dependencies array to be: [initFold]",{"range":"649","text":"650"},{"range":"651","text":"645"},"Update the dependencies array to be: [foldState.usingDefaults, initFold]",{"range":"652","text":"653"},"Update the dependencies array to be: [looperWorkerId]",{"range":"654","text":"655"},"Update the dependencies array to be: [foldLastUpdated, foldState.stepIdx, maxLevel, refreshRenderRows]",{"range":"656","text":"657"},"Update the dependencies array to be: [changeStep, foldState.repeatRange, foldState.repeatRoot, foldState.stepIdx, looperDirection, looperHash]",{"range":"658","text":"659"},"Update the dependencies array to be: [cardKey]",{"range":"660","text":"661"},{"range":"662","text":"661"},"Update the dependencies array to be: [layoutState.curFold, setFoldState]",{"range":"663","text":"664"},"Update the dependencies array to be: [closeSnackbar, foldState.maxSteps, foldState.stepIdx, isPlaying, toggleTimer]",{"range":"665","text":"666"},[4515,4517],"[fetchStateFromCookies, saveStateToCookies]",[4568,4620],"[layoutState.hash, foldState.hash, editorState.hash, saveStateToCookies]",[4706,4727],"[layoutState, layoutState.curFold, setFoldState]",[4929,4938],"[]",[4976,4994],"[layoutState.page, windowHeight]",[5041,5073],"[foldOverrideCallback, layoutState.curFold, layoutState.page, userState.showEditor, windowHeight]",[30212,30306],"[foldState.usingDefaults]",[30342,30361],"[foldState.active, foldState.maxSteps, foldState.stepIdx, performCommands, performReverseCommands, prevStep, stepArray]",[30390,30399],"[foldKey, initFold, setFoldObj]",[30440,30467],"[foldKey, setFoldState, stepArray.length]",[30495,30519],"[camera, classes.vertLabel, ctrlOverlay, editorState.showLabels, getXYForPos]",[3565,3597],"[activeIndex]",[1652,1654],"[classes.fold_controls_button, classes.fold_controls_button_label]",[1828,1847],[3717,3719],[3814,3833],[1914,1931],"[initFold]",[11776,11778],[11827,11905],"[foldState.usingDefaults, initFold]",[12257,12259],"[looperWorkerId]",[12428,12464],"[foldLastUpdated, foldState.stepIdx, maxLevel, refreshRenderRows]",[12493,12505],"[changeStep, foldState.repeatRange, foldState.repeatRoot, foldState.stepIdx, looperDirection, looperHash]",[1662,1664],"[cardKey]",[2144,2146],[5934,5955],"[layoutState.curFold, setFoldState]",[6585,6604],"[closeSnackbar, foldState.maxSteps, foldState.stepIdx, isPlaying, toggleTimer]"]
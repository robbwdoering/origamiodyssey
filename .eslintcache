[{"/home/bbor/dev/origamiodyssey/src/index.js":"1","/home/bbor/dev/origamiodyssey/src/layout/Header.js":"2","/home/bbor/dev/origamiodyssey/src/layout/Body.js":"3","/home/bbor/dev/origamiodyssey/src/layout/Footer.js":"4","/home/bbor/dev/origamiodyssey/src/layout/pages/Splash.js":"5","/home/bbor/dev/origamiodyssey/src/layout/pages/Lesson.js":"6","/home/bbor/dev/origamiodyssey/src/infra/constants.js":"7","/home/bbor/dev/origamiodyssey/src/anim/Scene.js":"8","/home/bbor/dev/origamiodyssey/src/infra/appReducer.js":"9","/home/bbor/dev/origamiodyssey/src/style/theme.js":"10","/home/bbor/dev/origamiodyssey/src/anim/Paper.js":"11","/home/bbor/dev/origamiodyssey/src/infra/actions.js":"12","/home/bbor/dev/origamiodyssey/src/layout/NavDrawer.js":"13","/home/bbor/dev/origamiodyssey/src/layout/pages/ModelSelect.js":"14","/home/bbor/dev/origamiodyssey/src/layout/pages/FoldControls.js":"15","/home/bbor/dev/origamiodyssey/src/layout/pages/User.js":"16","/home/bbor/dev/origamiodyssey/src/static/lettering.js":"17","/home/bbor/dev/origamiodyssey/src/layout/pages/FoldEditorCards.js":"18"},{"size":1910,"mtime":1615737829551,"results":"19","hashOfConfig":"20"},{"size":2597,"mtime":1615744000165,"results":"21","hashOfConfig":"20"},{"size":4713,"mtime":1615768496669,"results":"22","hashOfConfig":"20"},{"size":442,"mtime":1613020514188,"results":"23","hashOfConfig":"20"},{"size":0,"mtime":1613010789852,"results":"24","hashOfConfig":"20"},{"size":131,"mtime":1613020940457,"results":"25","hashOfConfig":"20"},{"size":3410,"mtime":1615766628972,"results":"26","hashOfConfig":"20"},{"size":2686,"mtime":1615751463402,"results":"27","hashOfConfig":"20"},{"size":1041,"mtime":1615744504489,"results":"28","hashOfConfig":"20"},{"size":4305,"mtime":1615766925302,"results":"29","hashOfConfig":"20"},{"size":7650,"mtime":1615753119712,"results":"30","hashOfConfig":"20"},{"size":470,"mtime":1615744080485,"results":"31","hashOfConfig":"20"},{"size":4689,"mtime":1614982480281,"results":"32","hashOfConfig":"20"},{"size":6290,"mtime":1615146436450,"results":"33","hashOfConfig":"20"},{"size":2824,"mtime":1615753205105,"results":"34","hashOfConfig":"20"},{"size":1514,"mtime":1615046315306,"results":"35","hashOfConfig":"20"},{"size":14422,"mtime":1615155376973,"results":"36","hashOfConfig":"20"},{"size":5255,"mtime":1615766719538,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"eii7vj",{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/bbor/dev/origamiodyssey/src/index.js",[],["85","86"],"/home/bbor/dev/origamiodyssey/src/layout/Header.js",["87","88","89","90","91","92","93","94"],"/**\n * FILENAME: Header.js\n *\n * DESCRIPTION: Renders the basic of the animation.\n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n\tAppBar,\n\tClickAwayListener,\n\tToolbar,\n\tIconButton,\n\tTypography,\n\tMenu,\n\tMenuItem,\n\tInputBase\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\n// import OriDomi from \"oridomi\";\nimport { setShowNavDrawer, setFoldState, setLayoutState } from './../infra/actions';\nimport useStyles from './../style/theme.js';\nimport Lettering from './../static/lettering.js';\n\nexport const Header = props => {\n\tconst { setShowNavDrawer, setFoldState, setLayoutState } = props;\n\n\tconst [showMenu, setShowMenu] = useState(false);\n\n\tconst styles = useStyles();\n\tconst fold = useRef(null);\n\n\tconst toggleMenu = e => {\n\t\tconsole.log('toggleMenu');\n\t\tsetShowNavDrawer();\n\t};\n\n\tconst handleClickAway = e => {\n\t\tsetShowNavDrawer(false);\n\t};\n\n\tconst handleClickLogo = e => {\n\t\tsetFoldState(null);\n\t\tsetLayoutState(null);\n\t};\n\n\tconsole.log(styles);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<AppBar className={styles.appBarContainer}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tclassName=\"menu-button\"\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\tonClick={toggleMenu}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName={styles.appLogo}\n\t\t\t\t\t\theight=\"28px\"\n\t\t\t\t\t\tsrc={window.location.origin + '/logo512x256.png'}\n\t\t\t\t\t\tonClick={handleClickLogo}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className={styles.appLettering}>\n\t\t\t\t\t\t<Lettering />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.searchContainer}>\n\t\t\t\t\t\t<div className={styles.searchIcon}>\n\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<InputBase\n\t\t\t\t\t\t\tplaceholder=\"Search Modelsâ€¦\"\n\t\t\t\t\t\t\tclasses={{ root: styles.inputRoot, input: styles.inputInput }}\n\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'search' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<Menu\n\t\t\t\televation={0}\n\t\t\t\tgetContentAnchorEl={null}\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: 'bottom',\n\t\t\t\t\thorizontal: 'center'\n\t\t\t\t}}\n\t\t\t\ttransformOrigin={{\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'center'\n\t\t\t\t}}\n\t\t\t\tanchorEl={showMenu}\n\t\t\t\topen={Boolean(showMenu)}\n\t\t\t\tkeepMounted\n\t\t\t\tonClose={toggleMenu}\n\t\t\t>\n\t\t\t\t<MenuItem> A Menu without options </MenuItem>\n\t\t\t\t<MenuItem> is no menu at all </MenuItem>\n\t\t\t</Menu>\n\t\t</React.Fragment>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {};\n};\n\nexport default connect(mapStateToProps, { setShowNavDrawer, setFoldState, setLayoutState })(Header);\n","/home/bbor/dev/origamiodyssey/src/layout/Body.js",["95","96","97","98","99","100","101","102","103","104","105","106","107","108","109"],"/home/bbor/dev/origamiodyssey/src/layout/Footer.js",["110","111","112","113","114"],"/**\n * FILENAME: Scene.js \n *\n * DESCRIPTION: Renders the basic of the animation. \n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nexport const Footer = props => {\n\tconst { } = props;\n\n\treturn (\n\t\t<div className=\"footer\">\n\t\t</div>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {};\n};\n\nexport default connect(mapStateToProps, {})(Footer);\n","/home/bbor/dev/origamiodyssey/src/layout/pages/Splash.js",[],"/home/bbor/dev/origamiodyssey/src/layout/pages/Lesson.js",[],["115","116"],"/home/bbor/dev/origamiodyssey/src/infra/constants.js",["117","118","119","120"],"/home/bbor/dev/origamiodyssey/src/anim/Scene.js",["121","122","123","124","125","126","127","128","129","130","131","132"],"/**\n * FILENAME: Scene.js \n *\n * DESCRIPTION: Renders the basic of the animation. \n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\n// Threejs - 3D Animation\nimport { Canvas, useFrame, useThree, useLoader, extend } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\n// React Spring - animation\nimport { useUpdate, useSpring, useSprings, animated, config }  from 'react-spring';\n// import { a, useTransition, Transition } from '@react-spring/three';\n\nimport { Paper } from \"./Paper\";\nimport { Folds } from \"./../infra/constants\";\nimport { setLayoutState, setFoldState } from \"./../infra/actions\";\n\n// Extend will make OrbitControls available as a JSX element called orbitControls for us to use.\nextend({ OrbitControls });\n\nconst CameraControls = () => {\n\t// Get a reference to the Three.js Camera, and the canvas html element.\n\t// We need these to setup the OrbitControls class.\n\t// https://threejs.org/docs/#examples/en/controls/OrbitControls\n\tconst {\n\t\tcamera,\n\t\tgl: { domElement }\n\t} = useThree();\n\n\tconst controls = useRef();\n\n\tuseFrame(({ gl }) => {\n\t\tgl.setClearColor(0xf1f4f4, 1);\n\t\treturn controls.current.update();\n\t});\n\n\treturn (\n\t\t<orbitControls\n\t\t\tref={controls}\n\t\t\targs={[camera, domElement]}\n\t\t\tenableZoom={false}\n\t\t\tenableRotate={true}\n\t\t\tenableDolly={false}\n\t\t\tmouseButtons={{\n\t\t\t\tRIGHT: THREE.MOUSE.ROTATE\n\t\t\t}}\n\t\t\tmaxAzimuthAngle={Math.PI / 4}\n\t\t\tmaxPolarAngle={Math.PI * 3 / 4}\n\t\t\tminAzimuthAngle={-Math.PI / 4}\n\t\t\tminPolarAngle={-Math.PI * 3 / 4}\n\t\t/>\n\t);\n};\n\n/**\n * Main component.\n */\nexport const Scene = props => {\n\tconst { initFold, paperSize, layoutState, layoutStateHash, foldState, foldStateHash, setFoldState } = props;\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Canvas camera={{fov: 100, position: [0, 1.2, 0]}} onCreated={state => state.gl.setClearColor(\"red\")} >\n\t\t\t\t<spotLight position={[5, 10, 0]} color='#f1f1ff' distance={100} penumbra={0.75} decay={2} />\n\t\t\t\t<CameraControls />\n\n\t\t\t\t<Paper\n\t\t\t\t\tposition={[0, 0, 0]}\n\t\t\t\t\tscale={10}\n\t\t\t\t\tinitFold={initFold}\n\t\t\t\t\tfoldKey={layoutState.curFold}\n\t\t\t\t\tfoldState={foldState}\n\t\t\t\t\tfoldStateHash={foldStateHash}\n\t\t\t\t\tsetFoldState={setFoldState}\n\t\t\t\t\tinitStep={-1}\n\t\t\t\t/>\n\t\t\t</Canvas>\n\t\t</React.Fragment>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tlayoutState: state.appReducer.layoutState,\n\t\tlayoutStateHash: state.appReducer.layoutState.hash,\n\t\tfoldState: state.appReducer.foldState,\n\t\tfoldStateHash: state.appReducer.foldState.hash,\n\t};\n};\n\nexport default connect(mapStateToProps, { setLayoutState, setFoldState })(Scene);\n","/home/bbor/dev/origamiodyssey/src/infra/appReducer.js",["133"],"/**\n * FILENAME: appReducer.js \n *\n * DESCRIPTION: Handles state update for all layout actions.\n */\n\nimport { initAppReducerState, Actions } from \"./constants\";\n\nconst finalInitState = JSON.parse(JSON.stringify(initAppReducerState));\n\nexport const appReducer = (state = finalInitState, action) => {\n\tlet newState = Object.assign({}, state);\n\n\tswitch (action.type) {\n\t\tcase Actions.SET_SHOW_NAV_DRAWER:\n\t\t\t// If passed a val set to that, otherwise toggle\n\t\t\tnewState.showNavDrawer = (action.payload !== undefined) ? action.payload : !newState.showNavDrawer;\n\t\t\tbreak;\n\t\tcase Actions.SET_LAYOUT_STATE:\n\t\t\tconsole.log(\"[SET_LAYOUT_STATE]\", action.payload, initAppReducerState);\n\t\t\tObject.assign(newState.layoutState, action.payload || initAppReducerState.layoutState);\n\t\t\tnewState.layoutState.hash++;\n\t\t\tbreak;\n\t\tcase Actions.SET_FOLD_STATE:\n\t\t\tconsole.log(\"[SET_FOLD_STATE]\", action.payload);\n\t\t\tObject.assign(newState.foldState, action.payload || initAppReducerState.foldState);\n\t\t\tnewState.foldState.hash++;\n\t\t\tbreak;\n\t}\n\n\treturn newState;\n}","/home/bbor/dev/origamiodyssey/src/style/theme.js",["134"],"/home/bbor/dev/origamiodyssey/src/anim/Paper.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155"],"/**\n * FILENAME: Paper.js \n *\n * DESCRIPTION: Simulates a piece of paper. \n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\n\n// Threejs - 3D Animation\nimport { Canvas, useFrame, useThree, useLoader, extend } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport { Line } from '@react-three/drei';\n\n// React Spring - animation\nimport { a, useSpring } from '@react-spring/three';\n// import { a, useTransition, Transition } from '@react-spring/three';\n\nexport const Paper = props => {\n\tconst { position, scale, initStep, initFold, foldKey, foldState, foldStateHash, setFoldState } = props;\n\n\t// ----------\n\t// STATE INIT \n\t// ----------\n\tconst [instructions, setInstructions] = useState(null);\n\tconst [prevStep, setPrevStep] = useState(initStep);\n\n\tconst rotation = useRef([0, 0, 0]);\n\tconst vertices = useRef([]) \n\tconst lines = useRef([]);\n\tconst edgeRotations = useRef([]);\n\tconst fold = useRef(null);\n\n\t// ----------------\n\t// MEMBER FUNCTIONS \n\t// ----------------\n\n\tconst setFoldObj = newFold => {\n\t\tlet foldObj = JSON.parse(JSON.stringify(newFold))\n\t\t// Calculate the boundaries of the 2D shape\n\t\tconst maxes = ([0, 2]).map(i => foldObj.vertices_coords.reduce(\n\t\t\t(max, coords) => Math.abs(coords[i]) > max ? Math.abs(coords[i]) : max,\n\t\t\t0\t\n\t\t));\n\n\t\t// Re-scale the model to a unit square (1 unit x 1 unit)\n\t\tfoldObj.vertices_coords = foldObj.vertices_coords.map(coords =>\n\t\t\tnew THREE.Vector3(coords[0] / maxes[0], 0, coords[2] / maxes[1])\n\t\t);\n\n\t\tfoldObj.edges_foldAngle = foldObj.edges_vertices.map(() => 180);\n\n\t\tconsole.log(\"[setFoldObj]\", { maxes, foldObj });\n\t\tfold.current = foldObj;\n\t};\n\n\t/*\n\t * This walks the tree recursively, collecting an array of steps at this \"level\".\n\t */\n\tconst collectStepsForLevel = () => {\n\t\tconst calcStepsForLevel = (inst, targetLevel, curLevel) => {\n\t\t\tif (!inst.children && !inst.length) {\n\t\t\t\t// Error case\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsole.log(\"[calcStepsForLevel]\", inst, targetLevel, curLevel);\n\n\t\t\t// Leaf nodes\n\t\t\tif (Array.isArray(inst)) {\n\t\t\t\treturn curLevel >= targetLevel ? [ inst ] : [];\n\n\t\t\t// Ancestor nodes \n\t\t\t} else {\n\t\t\t\tif (curLevel === targetLevel) {\n\t\t\t\t\t// Recursive case: This is target, so COMBINE children to one array\n\t\t\t\t\treturn inst.children.reduce((acc, childInst) => {\n\t\t\t\t\t\tlet ret = calcStepsForLevel(childInst, targetLevel, curLevel + 1);\n\t\t\t\t\t\tif (ret) {\n\t\t\t\t\t\t\tacc.push(ret);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}, []);\n\t\t\t\t} else if (curLevel > targetLevel) {\n\t\t\t\t\t// Recursive case: past target level, so COLLECT children into one array\n\t\t\t\t\treturn inst.children.reduce((acc, childInst) => {\n\t\t\t\t\t\tlet ret = calcStepsForLevel(childInst, targetLevel, curLevel + 1);\n\t\t\t\t\t\tif (ret) {\n\t\t\t\t\t\t\treturn acc.concat(ret);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}, []);\n\t\t\t\t} else if (curLevel < targetLevel) {\n\t\t\t\t\t// Recursive case: still above target level, so keep drilling down\n\t\t\t\t\t// If we're right before the target, return all children\n\t\t\t\t\tif (curLevel === targetLevel - 1) {\n\t\t\t\t\t\treturn inst.children.map(childInst => calcStepsForLevel(childInst, targetLevel, curLevel + 1));\n\t\t\t\t\t// Else COLLECT children into one array\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn inst.children.reduce((acc, childInst) => {\n\t\t\t\t\t\t\tlet ret = calcStepsForLevel(childInst, targetLevel, curLevel + 1);\n\t\t\t\t\t\t\tif (ret) {\n\t\t\t\t\t\t\t\treturn acc.push(ret);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t}, []);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif (!fold.current || !fold.current.instructions) {\n\t\t\tconsole.log(\"returning empty\", fold.current)\n\t\t\treturn [];\n\t\t}\n\n\t\tconsole.log(\"[collectStepsForLevel]\", fold.instructions, foldState.selectedLevel)\n\n\t\treturn calcStepsForLevel(fold.current.instructions, foldState.selectedLevel, 0);\n\t};\n\n\t// Nested recursive function to calculate the depth of the instruction tree\n\tconst calcMaxLevel = inst => {\n\t\tif (!inst.length) {\n\t\t\t// Error case\n\t\t\treturn 0;\n\t\t} else if (Array.isArray(inst[0])) {\n\t\t\t// Recursive case: Return 1 plus the height of the tallest subtree\n\t\t\treturn 1 + Math.max(...inst.map(childInst => calcMaxLevel(childInst)));\n\t\t} else {\n\t\t\t// Base case: leaf node\n\t\t\treturn 1\n\t\t}\n\t};\n\n\n\t/*\n\t * Reads the hierarchical instructions, collecting some descriptive values and initializing state.\n\t * This task is greatly simplified by mandating that any one node of the instructional tree\n\t * contain EITHER two integer values, or 1+ subnodes. Any node with subnodes may not have integer values.\n\t */\n\tconst readInstructionsIntoState = inst => {\n\t\treturn {\n\t\t\tmaxLevel: calcMaxLevel(inst),\n\t\t\tselectedLevel: 0,\n\t\t\tstepIndex: -1,\n\t\t\tmaxSteps: stepArray.length\n\t\t};\n\t}\n\n\t/*\n\t * Initializes the fold state if possible, which involves reading the instructional hierarchy shape.\n\t */\n\tconst initFoldState = () => {\n        console.log(\"[initFoldState]\", initFold);\n        if (!initFold) {\n        \treturn;\n        }\n\n\t\tsetFoldObj(initFold);\n\n        if (fold.current.instructions) {\n        \tsetFoldState(readInstructionsIntoState(fold.current.instructions));\n        }\n\t};\n\n\tconst createMaterial = () => {\n        return  new THREE.MeshNormalMaterial({\n            flatShading: true,\n\t        roughness: 0.5,\n\t        attach: \"material\",\n\t        color: '#ef626c',\n            side: THREE.DoubleSide\n        });\n\t};\n\n\t/**\n\t * The ultimate goal of this function is to update vertex positions.\n\t * IDEA: Handle one folding edge at a time, then propagate out following neighbors\n\t */\n\tconst performInstructionStep = () => {\n\t\tlet curStep = foldState.stepIndex;\n\t\tif (curStep < -1 || curStep >= foldState.maxSteps) {\n\t\t\tcurStep = -1;\n\t\t}\n\n\t\tconsole.log(\"[performInstructionStep] \", curStep);\n\n\t\t// The Init step - all fold angles 0\n\t\t// if (step === -1) {\n\t\t// \tsetFoldObj(initFold);\n\t\t// }\n\n\t\tsetPrevStep(curStep);\t\n\t}\n\n\n\t/* \n\t * Applies steps to fold the paper iteratively. The crux of this component - see Paper Engine design document.\n\t * @param fold - the object to be modified \n\t * @param steps - array of instructions \n\t */\n\tconst applySteps = (fold, steps) => {\n\t\tif (!fold || !steps) {\n\t\t\treturn null;\n\t\t}\n\n\t\tsteps.forEach(step => {\n\t\t\t// Step is array, with format [edge, rotation, type (optional, default to RH)]\n\n\t\t\t// Get all faces for this edge\n\t\t\t// Rotate all other vertices part of adjacent faces around this edge \n\t\t\t// Add to array of edges to do in next call \n\t\t});\n\n\t\t// Do recursive call\n\t}\n\n\t// ---------\n\t// LIFECYCLE\n\t// ---------\n\tuseFrame(() => {\n\t\t// rotation.current = [0, rotation.current[1] + 1, 0];\n\t});\n\n\tconst material = useMemo(createMaterial, []);\n\tconst stepArray = useMemo(collectStepsForLevel, [!fold.current || !fold.current.instructions, foldKey, foldState.selectedLevel]);\n\tuseEffect(performInstructionStep, [foldState.stepIndex]);\n\tuseEffect(initFoldState, [foldKey, stepArray.length]);\n\n\tconsole.log(\"[Paper]\", { stepArray, fold: fold.current })\n\n\treturn (\n\t\t<group>\n\t\t    {fold.current && fold.current.edges_vertices.map(line => (\n\t\t\t    <Line\n\t\t\t    \tpoints={line.map(index => fold.current.vertices_coords[index])}\n\t\t\t\t\tcolor=\"black\"                   // Default\n\t\t\t\t\tlineWidth={1}                   // In pixels (default)\n\t\t\t\t\tdashed={false}                  // Default\n\t\t\t\t\tmaterial={material}\n\t\t\t    />\n\t\t    ))}\n\t    </group>\n    );\n}\n\n/*\nFOLDING ENGINE\n1. Description\n\tThe function of this \"engine\", which basically means a stateful algo here, is to manipulate three.js objects.\n\tThus, the output of all of this are the props used in the return statement of the <Paper/> component.\n\tThe initial input is the initFold object, which is a FOLD json object with special step components.\n\tAn index into the step array is maintained, and any transitions result in \n2. Function Structure\n\t1.1. stepTo\n\n*/","/home/bbor/dev/origamiodyssey/src/infra/actions.js",[],"/home/bbor/dev/origamiodyssey/src/layout/NavDrawer.js",["156","157","158","159","160","161","162"],"/**\n * FILENAME: NavDrawer.js \n *\n * DESCRIPTION: A sidebar-based nav tree, custom built to take advantage of react-spring.\n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SwipeableDrawer, Button, List, Divider, ListItem, } from '@material-ui/core';\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\n\nimport { Pages, initNavTree } from \"./../infra/constants\";\nimport { setShowNavDrawer, setLayoutState } from \"./../infra/actions\";\nimport useStyles from \"./../style/theme\";\n\nexport const NavDrawer = props => {\n\tconst { page, showNavDrawer, setShowNavDrawer, setLayoutState } = props;\n\n\tconst [navTreeData, setNavTree] = useState(initNavTree);\n\tconst styles = useStyles();\n\n\tconst findNode = (key, node = navTreeData, path = []) => {\n\t\t// Root case - recurse into array of subtrees\n\t\tif (Array.isArray(node)) {\n\t\t\treturn node.reduce((acc, childNode) => {\n\t\t\t\tif (!acc) {\n\t\t\t\t\tconst ret = findNode(key, childNode, path);\n\n\t\t\t\t\tif (ret && ret[1]) {\n\t\t\t\t\t\tacc = ret;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t}, null) || [null, null];\n\n\t\t// Success case - we found the node\n\t\t} else if (node.key === key) {\n\t\t\treturn [[node.key, ...path], node];\n\n\t\t// Child case - recurse into children\n\t\t} else if (node.children) {\n\t\t\treturn node.children.reduce((acc, childNode) => {\n\t\t\t\tif (!acc) {\n\t\t\t\t\tconst [foundPath, foundNode] = findNode(key, childNode, path);\n\n\t\t\t\t\tif (foundNode) {\n\t\t\t\t\t\tacc = [[key, ...foundPath], foundNode];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn acc;\n\t\t\t}, null) || [null, null];\n\t\t}\n\n\t\t// Failure case - return null\n\t\treturn [[], null];\n\t}\n\n\tconst setNode = (path, field, val, node = navTreeData) => {\n\t\tlet newNavTree = [...navTreeData];\n\n\t\t// Nested function that recurses through the tree to modify a node\n\t\tconst recursiveSet = (path, node = newNavTree) => {\n\t\t\tif (!path || path.length === 0) {\n\t\t\t\tnode[field] = val; \n\t\t\t} else if (Array.isArray(node)) {\n\t\t\t\tlet child = node.find(e => e.key === path[0]);\n\t\t\t\trecursiveSet(path.slice(1), child);\n\t\t\t} else if (node.children) {\n\t\t\t\tlet child = node.children.find(e => e.key === path[0]);\n\t\t\t\trecursiveSet(path.slice(1), child);\n\t\t\t}\n\t\t}\n\n\t\trecursiveSet(path);\n\t\tsetNavTree(newNavTree);\n\t}\n\n\tconst handleNavDrawerSelect = (event, key) => {\n\t\tif (!key) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the key is a page ID, just take us to that page\n\t\tif (Object.keys(Pages).includes(key)) {\n\t\t\tsetLayoutState({ curPage: key });\n\t\t\treturn;\n\t\t} \n\n\t\t// If the node has children, show or hide them on parent click\n\t\tconst [path, node] = findNode(key);\n\t\tif (node.children) {\n\t\t\tsetNode(path, \"expanded\", !node.expanded);\n\t\t\treturn;\n\t\t}\n\n\t\t// Else handle key-specific behavior (i.e. everything else)\n\t\tswitch (key) {\n\t\t\tcase \"github\":\n\t\t\t\twindow.open('https://github.com/robbwdoering/origamiodyssey', '_blank');\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"unhandled navDrawer option\", key);\n\t\t}\n\n\t}\n\n\tconst renderNavNode = (node, nestedLevel = 0) => {\n\t\tif (!node || node.hidden) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Nested component that just renders one node, with no regard for hierarchy beyond tracking nestedLevel\n\t\tconst Node = ({ node, nestedLevel }) => {\n\t\t\tconst icon = node.icon || (node.children ? (node.expanded ? <ArrowDropDownIcon /> : <ArrowRightIcon />) : null );\n\t\t\tconsole.log(\"Key: \", node.key)\n\n\t\t\treturn (\n\t\t\t\t<ListItem \n\t\t\t\t\tclassName={`nested-level-${nestedLevel}`}\n\t\t\t\t\tkey={node.key}\n\t\t\t\t\tbutton\n\t\t\t\t\tonClick={e => handleNavDrawerSelect(e, node.key)}\n\t\t\t\t>\n\t\t\t\t\t{icon && <ListItemIcon> {icon} </ListItemIcon>}\n\t\t\t\t\t<ListItemText> {node.text} </ListItemText>\n\t\t\t\t</ListItem>\n\t\t\t);\n\t\t};\n\n\t\tlet ret = [<Node key={\"node_\"+node.key} node={node} nestedLevel={nestedLevel} />];\n\n\t\tif (node.children && node.expanded) {\n\t\t\tnode.children.forEach(child => {\n\t\t\t\tret = ret.concat(renderNavNode(child, nestedLevel + 1));\n\t\t\t});\n\t\t};\n\n\t\treturn ret;\n\t};\n\n\treturn (\n\t\t<SwipeableDrawer\n\t\t\tanchor='left'\n\t\t\tkey=\"swipable-drawer\"\n\t\t\tclasses={{\n\t\t\t\troot: styles.navDrawerRoot,\n\t\t\t\tpaper: styles.navDrawerPaper\n\t\t\t}}\n\t\t\topen={showNavDrawer}\n\t\t\tonOpen={() => setShowNavDrawer(true)}\n\t\t\tonClose={() => setShowNavDrawer(false)}\n\t\t>\n\t\t\t<List key=\"main-list\">\n\t\t\t\t{navTreeData.reduce((acc, node) => {\n\t\t\t\t\tacc = acc.concat(renderNavNode(node));\n\t\t\t\t\treturn acc;\n\t\t\t\t}, [])}\n\t\t\t</List>\n\t\t</SwipeableDrawer>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tshowNavDrawer: state.appReducer.showNavDrawer \n\t};\n};\n\nexport default connect(mapStateToProps, {setShowNavDrawer})(NavDrawer);","/home/bbor/dev/origamiodyssey/src/layout/pages/ModelSelect.js",["163","164","165","166","167","168","169","170","171","172","173","174"],"/**\n * FILENAME: ModelSelect.js\n *\n * DESCRIPTION: This page allows the user to browser through cards, read details on models, and select one to fold.\n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useUpdate, useSpring, useSprings, animated, config } from 'react-spring';\n\nimport {\n\tDivider,\n\tTypography,\n\tCardMedia,\n\tCardActionArea,\n\tCardActions,\n\tCardContent,\n\tButton,\n\tCard,\n\tChip\n} from '@material-ui/core';\n\nimport useStyles from './../../style/theme';\nimport { Folds, Pages } from './../../infra/constants';\nimport { setLayoutState } from './../../infra/actions';\nconst AnimatedCard = animated(Card);\n\nexport const ModelSelect = props => {\n\tconst { layoutState, setLayoutState } = props;\n\tconst classes = useStyles();\n\n\t// ----------\n\t// STATE INIT\n\t// ----------\n\tconst [cardRefs, setCardRefs] = useState([]);\n\tconst [activeIndex, setActiveIndex] = useState(-1);\n\n\t// ----------------\n\t// MEMBER FUNCTIONS\n\t// ----------------\n\n\tconst selectCardList = () => {\n\t\treturn Object.keys(Folds).filter(() => true);\n\t};\n\n\tconst handleCardClick = (event, index) => {\n\t\tsetActiveIndex(activeIndex === index ? -1 : index);\n\t};\n\n\tconst openFold = foldKey => {\n\t\tsetLayoutState({\n\t\t\tpage: Pages.Fold,\n\t\t\tcurFold: foldKey\n\t\t})\n\t};\n\n\tconst ModelCard = props => {\n\t\tconst { foldEntry, name, cardKey, index, isActive } = props;\n\t\tconst [posHash, setPosHash] = useState(0);\n\t\tconst ref = useRef();\n\n\t\tconst handleFoldClick = e => {\n\t\t\te.preventDefault();\t\n\t\t\te.stopPropagation();\n\n\t\t\topenFold(cardKey);\n\t\t}\n\n\t\tconst CardLabel = ({ text }) => (\n\t\t\t<React.Fragment>\n\t\t\t\t<Typography className={classes.modelCard_label} variant=\"body2\" color=\"textSecondary\" component=\"h4\">\n\t\t\t\t\t{text}\n\t\t\t\t</Typography>\n\t\t\t\t<Divider />\n\t\t\t</React.Fragment>\n\t\t);\n\n\t\tconst style = useMemo(\n\t\t\t() => ({\n\t\t\t\theight: isActive ? '400px' : '180px',\n\t\t\t\twidth: isActive ? '400px' : '200px',\n\t\t\t\ttop: ref.current ? ref.current.offsetTop : 0,\n\t\t\t\tleft: ref.current ? ref.current.offsetLeft : 0\n\t\t\t}),\n\t\t\t[isActive, ref.current && ref.current.offsetTop, ref.current && ref.current.offsetLeft]\n\t\t);\n\n\t\tuseEffect(() => setPosHash(cur => cur + 1), [style]);\n\n\t\tconst imagePath = useMemo(\n\t\t\t() => (layoutState.useImages ? require(`./../../static/${name}.png`) : undefined),\n\t\t\t[name, layoutState.useImages]\n\t\t);\n\n\t\tconst title = useMemo(() => `Folded ${name}`)\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{/* This is the \"anchor\" that positions the card, takes advantage of CSS */}\n\t\t\t\t<div ref={ref} className={classes.modelCard_placeholder} />\n\n\t\t\t\t{/* This is the actual card: an `absolute` element so it can grow or shrink in place without affecting others' positioning */}\n\t\t\t\t<Card\n\t\t\t\t\tclassName={`${classes.modelCard} ${isActive ? classes.modelCard__active : ''}`}\n\t\t\t\t\tname={index}\n\t\t\t\t\tonClick={event => handleCardClick(event, index)}\n\t\t\t\t\tstyle={style}\n\t\t\t\t>\n\t\t\t\t\t<CardActionArea className={`${classes.modelCard_rail_container} ${isActive ? classes.modelCard_rail_container__active : \"\"}`}>\n\t\t\t\t\t\t<div className={classes.modelCard_rail}>\n\t\t\t\t\t\t\t{/* Picture / Preview Model */}\n\t\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\t\tcomponent=\"img\"\n\t\t\t\t\t\t\t\talt={\"Folded Model Picture\"}\n\t\t\t\t\t\t\t\ttitle=\"Folded Model Picture\"\n\t\t\t\t\t\t\t\theight=\"120\"\n\t\t\t\t\t\t\t\timage={imagePath}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t{/* Title */}\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tclassName={classes.modelCard_title}\n\t\t\t\t\t\t\t\t\tvariant=\"h5\"\n\t\t\t\t\t\t\t\t\tcomponent=\"h2\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t{/* Tags */}\n\t\t\t\t\t\t\t\t{props.isActive && (\n\t\t\t\t\t\t\t\t\t<div className={classes.tags} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\t\t\t\t\t\t\t\t\t\t{(foldEntry.tags && foldEntry.tags.length) ? \n\t\t\t\t\t\t\t\t\t\t\tfoldEntry.tags.map(({ name, category }, i) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={cardKey + \"_\" + name}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclickable\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={name}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={category ? classes[`tags__${category}`] : undefined}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t)) :\n\t\t\t\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{/* Details rail */}\n\t\t\t\t\t\t{isActive && (\n\t\t\t\t\t\t\t<div className={classes.modelCard_rail}>\n\t\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t\t{props.isActive && (\n\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t{/* Attribution */}\n\t\t\t\t\t\t\t\t\t\t\t<CardLabel text=\"Creator\" />\n\t\t\t\t\t\t\t\t\t\t\t<Typography className={classes.modelCard_bodyText} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\t\t\t\t\t\t\t\t\t\t\t\t{foldEntry.author}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t\t\t\t\t\t<CardLabel text=\"Description\" />\n\t\t\t\t\t\t\t\t\t\t\t<Typography className={classes.modelCard_bodyText} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\t\t\t\t\t\t\t\t\t\t\t\t{foldEntry.description}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</CardActionArea>\n\t\t\t\t\t{isActive && (\n\t\t\t\t\t\t<CardActions classes={classes.modelCard_footer}>\n\t\t\t\t\t\t\t<Button size=\"small\" color=\"primary\">\n\t\t\t\t\t\t\t\tShare\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button size=\"small\" color=\"primary\">\n\t\t\t\t\t\t\t\tLearn More\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<div className={classes.modelCard_foldButton}>\n\t\t\t\t\t\t\t\t<Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={handleFoldClick}>\n\t\t\t\t\t\t\t\t\tFold\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t)}\n\t\t\t\t</Card>\n\t\t\t</React.Fragment>\n\t\t);\n\t};\n\n\tconst updateCardRefs = () => {\n\t\t// Recreate the refs array, reusing elements. Note that this algo doesn't support reordering\n\t\tsetCardRefs(elRefs =>\n\t\t\tArray(cardList.length)\n\t\t\t\t.fill()\n\t\t\t\t.map((el, i) => cardRefs[i] || createRef())\n\t\t);\n\t};\n\n\t// ---------\n\t// LIFECYCLE\n\t// ---------\n\n\tconst cardList = useMemo(selectCardList, []);\n\n\tuseEffect(updateCardRefs, [cardList.length]);\n\n\treturn (\n\t\t<div className={classes.page_ModelSelect_container}>\n\t\t\t{cardList.map((cardKey, i) => (\n\t\t\t\t<ModelCard\n\t\t\t\t\tname={Folds[cardKey].name}\n\t\t\t\t\tkey={cardKey}\n\t\t\t\t\tcardKey={cardKey}\n\t\t\t\t\tfoldEntry={Folds[cardKey]}\n\t\t\t\t\tindex={i}\n\t\t\t\t\tisActive={activeIndex === i}\n\t\t\t\t\tshouldOpenFlipped={false}\n\t\t\t\t>\n\t\t\t\t\t<span> mainChild! </span>\n\t\t\t\t</ModelCard>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tlayoutState: state.appReducer.layoutState\n\t};\n};\n\nexport default connect(mapStateToProps, { setLayoutState })(ModelSelect);\n","/home/bbor/dev/origamiodyssey/src/layout/pages/FoldControls.js",["175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193"],"/**\n * FILENAME: FoldControls.js \n *\n * DESCRIPTION: These are piecemeal controls for the fold state. \n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useUpdate, useSpring, useSprings, animated, config }  from 'react-spring';\n\nimport { SwipeableDrawer, Button,  ButtonGroup, List, Divider, ListItem, Card } from '@material-ui/core';\nimport SkipPrevious from \"@material-ui/icons/SkipPrevious\";\nimport SkipNext from \"@material-ui/icons/SkipNext\";\n\nimport useStyles from \"./../../style/theme\";\nimport { Folds } from \"./../../infra/constants\";\nimport { setFoldState } from \"./../../infra/actions\";\n// const AnimatedCard = animated(Card);\n\nexport const FoldControls = props => {\n\tconst { windowHeight, foldState, foldStateHash, setFoldState } = props;\n\n\t// ----------\n\t// STATE INIT \n\t// ----------\n\tconst classes = useStyles();\n\tconst [cardRefs, setCardRefs] = useState([]);\n\tconst [curHash, setHash] = useState(0);\n\n\t// ----------------\n\t// MEMBER FUNCTIONS \n\t// ----------------\n\n\t// Changes the current instructional sequential step, prompting animation.\n\tconst changeStep = (delta) => {\n\t\tlet newStepIndex = Math.min(Math.max(foldState.stepIndex + delta, -1), foldState.maxSteps);\n\t\tsetFoldState({\n\t\t\tstepIndex: newStepIndex\n\t\t});\n\t};\n\n\tconst calcControlsPosition = () => {\n\t\treturn (window.innerWidth - 128) / 2;\n\t}\n\n\tconst triggerRerender = () => {\n\t\tsetHash(cur => cur + 1);\n\t};\n\n\t// ---------\n\t// LIFECYCLE\n\t// ---------\n\n\tconst buttonClasses = useMemo(() => ({\n\t\troot: classes.fold_controls_button,\n\t\tlabel: classes.fold_controls_button_label\n\t}), []);\n\n\t// Rerender whenever the page resizes\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"resize\", triggerRerender);\n\t}, []);\n\n\tconst ctrlLeft = useMemo(calcControlsPosition, [window.innerWidth]);\n\n    return (\n    \t<React.Fragment>\n\t\t\t<Card className={classes.fold_controls} style={{left: ctrlLeft}} >\n\t\t\t\t<ButtonGroup className={classes.fold_controls_button_container} color=\"primary\" variant=\"text\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclasses={buttonClasses}\n\t\t\t\t\t\tonClick={() => changeStep(-1)}\n\t\t\t\t\t\tdisabled={foldState.stepIndex < 0}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SkipPrevious className={classes.fold_controls_button_icon} />\n\t\t\t\t\t\tPrev\t\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclasses={buttonClasses}\n\t\t\t\t\t\tonClick={() => changeStep(1)}\n\t\t\t\t\t\tdisabled={foldState.stepIndex >= foldState.maxSteps - 1}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SkipNext className={classes.fold_controls_button_icon} />\n\t\t\t\t\t\tNext\t\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n    \t\t</Card>\n    \t</React.Fragment>\n    );\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tfoldState: state.appReducer.foldState,\n\t\tfoldStateHash: state.appReducer.foldState.hash\n\t};\n};\n\nexport default connect(mapStateToProps, { setFoldState })(FoldControls);\n","/home/bbor/dev/origamiodyssey/src/layout/pages/User.js",["194","195","196","197","198","199","200","201","202","203","204","205","206","207"],"/**\n * FILENAME: User.js \n *\n * DESCRIPTION: This page allows the user to browser through cards, read details on models, and select one to fold. \n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useUpdate, useSpring, useSprings, animated, config }  from 'react-spring';\n\nimport { SwipeableDrawer, Button, List, Divider, ListItem, Card } from '@material-ui/core';\n\nimport useStyles from \"./../../style/theme\";\nimport { Folds } from \"./../../infra/constants\";\n// const AnimatedCard = animated(Card);\n\nexport const User = () => {\n\tconst classes = useStyles();\n\n\t// ----------\n\t// STATE INIT \n\t// ----------\n\tconst [cardRefs, setCardRefs] = useState([]);\n\n\t// ----------------\n\t// MEMBER FUNCTIONS \n\t// ----------------\n\n\tconst selectCardList = () => {\n\t\treturn Folds.filter(() => true);\n\t};\n\n\n\tconst createCard = () => {\n\n\t}\n\n\n\tconst updateCardRefs = () => {\n\t\t// Recreate the refs array, reusing elements. Note that this algo doesn't support reordering\n\t\tsetCardRefs(elRefs => (\n\t\t\tArray(cardList.length).fill().map((el, i) => cardRefs[i] || createRef())\n\t\t));\n\t};\n\n\n\t// ---------\n\t// LIFECYCLE\n\t// ---------\n\n\tconst cardList = useMemo(selectCardList, []);\n\n\tuseEffect(updateCardRefs, [cardList.length]);\n\n    return (\n        <div className={classes.User.container}>\n        </div>\n    );\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t};\n};\n\nexport default connect(mapStateToProps, {})(User);\n","/home/bbor/dev/origamiodyssey/src/static/lettering.js",[],"/home/bbor/dev/origamiodyssey/src/layout/pages/FoldEditorCards.js",["208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227"],{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":8,"column":35,"nodeType":"234","messageId":"235","endLine":8,"endColumn":42},{"ruleId":"232","severity":1,"message":"236","line":8,"column":44,"nodeType":"234","messageId":"235","endLine":8,"endColumn":53},{"ruleId":"232","severity":1,"message":"237","line":13,"column":2,"nodeType":"234","messageId":"235","endLine":13,"endColumn":19},{"ruleId":"232","severity":1,"message":"238","line":16,"column":2,"nodeType":"234","messageId":"235","endLine":16,"endColumn":12},{"ruleId":"232","severity":1,"message":"239","line":32,"column":19,"nodeType":"234","messageId":"235","endLine":32,"endColumn":30},{"ruleId":"232","severity":1,"message":"240","line":35,"column":8,"nodeType":"234","messageId":"235","endLine":35,"endColumn":12},{"ruleId":"232","severity":1,"message":"241","line":42,"column":8,"nodeType":"234","messageId":"235","endLine":42,"endColumn":23},{"ruleId":"242","severity":1,"message":"243","line":66,"column":6,"nodeType":"244","endLine":71,"endColumn":8},{"ruleId":"232","severity":1,"message":"245","line":11,"column":10,"nodeType":"234","messageId":"235","endLine":11,"endColumn":25},{"ruleId":"232","severity":1,"message":"246","line":11,"column":27,"nodeType":"234","messageId":"235","endLine":11,"endColumn":33},{"ruleId":"232","severity":1,"message":"247","line":11,"column":35,"nodeType":"234","messageId":"235","endLine":11,"endColumn":39},{"ruleId":"232","severity":1,"message":"248","line":11,"column":41,"nodeType":"234","messageId":"235","endLine":11,"endColumn":48},{"ruleId":"232","severity":1,"message":"249","line":11,"column":50,"nodeType":"234","messageId":"235","endLine":11,"endColumn":58},{"ruleId":"232","severity":1,"message":"250","line":12,"column":8,"nodeType":"234","messageId":"235","endLine":12,"endColumn":20},{"ruleId":"232","severity":1,"message":"251","line":13,"column":8,"nodeType":"234","messageId":"235","endLine":13,"endColumn":20},{"ruleId":"232","severity":1,"message":"252","line":14,"column":8,"nodeType":"234","messageId":"235","endLine":14,"endColumn":22},{"ruleId":"232","severity":1,"message":"253","line":15,"column":8,"nodeType":"234","messageId":"235","endLine":15,"endColumn":25},{"ruleId":"232","severity":1,"message":"254","line":18,"column":24,"nodeType":"234","messageId":"235","endLine":18,"endColumn":35},{"ruleId":"232","severity":1,"message":"255","line":29,"column":50,"nodeType":"234","messageId":"235","endLine":29,"endColumn":63},{"ruleId":"232","severity":1,"message":"256","line":29,"column":65,"nodeType":"234","messageId":"235","endLine":29,"endColumn":80},{"ruleId":"257","severity":1,"message":"258","line":125,"column":5,"nodeType":"259","endLine":125,"endColumn":7,"suggestions":"260"},{"ruleId":"257","severity":1,"message":"261","line":134,"column":5,"nodeType":"259","endLine":134,"endColumn":14,"suggestions":"262"},{"ruleId":"257","severity":1,"message":"263","line":137,"column":45,"nodeType":"259","endLine":137,"endColumn":77,"suggestions":"264"},{"ruleId":"232","severity":1,"message":"265","line":8,"column":17,"nodeType":"234","messageId":"235","endLine":8,"endColumn":25},{"ruleId":"232","severity":1,"message":"266","line":8,"column":27,"nodeType":"234","messageId":"235","endLine":8,"endColumn":33},{"ruleId":"232","severity":1,"message":"233","line":8,"column":35,"nodeType":"234","messageId":"235","endLine":8,"endColumn":42},{"ruleId":"232","severity":1,"message":"236","line":8,"column":44,"nodeType":"234","messageId":"235","endLine":8,"endColumn":53},{"ruleId":"267","severity":1,"message":"268","line":12,"column":8,"nodeType":"269","messageId":"270","endLine":12,"endColumn":11},{"ruleId":"228","replacedBy":"271"},{"ruleId":"230","replacedBy":"272"},{"ruleId":"232","severity":1,"message":"265","line":7,"column":17,"nodeType":"234","messageId":"235","endLine":7,"endColumn":25},{"ruleId":"232","severity":1,"message":"266","line":7,"column":27,"nodeType":"234","messageId":"235","endLine":7,"endColumn":33},{"ruleId":"232","severity":1,"message":"233","line":7,"column":35,"nodeType":"234","messageId":"235","endLine":7,"endColumn":42},{"ruleId":"232","severity":1,"message":"236","line":7,"column":44,"nodeType":"234","messageId":"235","endLine":7,"endColumn":53},{"ruleId":"232","severity":1,"message":"265","line":8,"column":17,"nodeType":"234","messageId":"235","endLine":8,"endColumn":25},{"ruleId":"232","severity":1,"message":"233","line":8,"column":35,"nodeType":"234","messageId":"235","endLine":8,"endColumn":42},{"ruleId":"232","severity":1,"message":"236","line":8,"column":44,"nodeType":"234","messageId":"235","endLine":8,"endColumn":53},{"ruleId":"232","severity":1,"message":"273","line":12,"column":38,"nodeType":"234","messageId":"235","endLine":12,"endColumn":47},{"ruleId":"232","severity":1,"message":"274","line":17,"column":10,"nodeType":"234","messageId":"235","endLine":17,"endColumn":19},{"ruleId":"232","severity":1,"message":"275","line":17,"column":21,"nodeType":"234","messageId":"235","endLine":17,"endColumn":30},{"ruleId":"232","severity":1,"message":"276","line":17,"column":32,"nodeType":"234","messageId":"235","endLine":17,"endColumn":42},{"ruleId":"232","severity":1,"message":"277","line":17,"column":44,"nodeType":"234","messageId":"235","endLine":17,"endColumn":52},{"ruleId":"232","severity":1,"message":"278","line":17,"column":54,"nodeType":"234","messageId":"235","endLine":17,"endColumn":60},{"ruleId":"232","severity":1,"message":"279","line":21,"column":10,"nodeType":"234","messageId":"235","endLine":21,"endColumn":15},{"ruleId":"232","severity":1,"message":"280","line":65,"column":20,"nodeType":"234","messageId":"235","endLine":65,"endColumn":29},{"ruleId":"232","severity":1,"message":"256","line":65,"column":44,"nodeType":"234","messageId":"235","endLine":65,"endColumn":59},{"ruleId":"281","severity":1,"message":"282","line":14,"column":2,"nodeType":"283","messageId":"284","endLine":29,"endColumn":3},{"ruleId":"285","severity":1,"message":"286","line":87,"column":3,"nodeType":"287","messageId":"270","endLine":87,"endColumn":8},{"ruleId":"232","severity":1,"message":"288","line":11,"column":10,"nodeType":"234","messageId":"235","endLine":11,"endColumn":16},{"ruleId":"232","severity":1,"message":"289","line":11,"column":28,"nodeType":"234","messageId":"235","endLine":11,"endColumn":36},{"ruleId":"232","severity":1,"message":"273","line":11,"column":38,"nodeType":"234","messageId":"235","endLine":11,"endColumn":47},{"ruleId":"232","severity":1,"message":"290","line":11,"column":49,"nodeType":"234","messageId":"235","endLine":11,"endColumn":55},{"ruleId":"232","severity":1,"message":"291","line":16,"column":10,"nodeType":"234","messageId":"235","endLine":16,"endColumn":11},{"ruleId":"232","severity":1,"message":"275","line":16,"column":13,"nodeType":"234","messageId":"235","endLine":16,"endColumn":22},{"ruleId":"232","severity":1,"message":"292","line":20,"column":10,"nodeType":"234","messageId":"235","endLine":20,"endColumn":18},{"ruleId":"232","severity":1,"message":"293","line":20,"column":20,"nodeType":"234","messageId":"235","endLine":20,"endColumn":25},{"ruleId":"232","severity":1,"message":"255","line":20,"column":67,"nodeType":"234","messageId":"235","endLine":20,"endColumn":80},{"ruleId":"232","severity":1,"message":"294","line":25,"column":9,"nodeType":"234","messageId":"235","endLine":25,"endColumn":21},{"ruleId":"232","severity":1,"message":"295","line":25,"column":23,"nodeType":"234","messageId":"235","endLine":25,"endColumn":38},{"ruleId":"232","severity":1,"message":"296","line":26,"column":9,"nodeType":"234","messageId":"235","endLine":26,"endColumn":17},{"ruleId":"232","severity":1,"message":"297","line":28,"column":8,"nodeType":"234","messageId":"235","endLine":28,"endColumn":16},{"ruleId":"232","severity":1,"message":"298","line":29,"column":8,"nodeType":"234","messageId":"235","endLine":29,"endColumn":16},{"ruleId":"232","severity":1,"message":"299","line":30,"column":8,"nodeType":"234","messageId":"235","endLine":30,"endColumn":13},{"ruleId":"232","severity":1,"message":"300","line":31,"column":8,"nodeType":"234","messageId":"235","endLine":31,"endColumn":21},{"ruleId":"232","severity":1,"message":"301","line":203,"column":8,"nodeType":"234","messageId":"235","endLine":203,"endColumn":18},{"ruleId":"257","severity":1,"message":"302","line":227,"column":50,"nodeType":"259","endLine":227,"endColumn":129,"suggestions":"303"},{"ruleId":"257","severity":1,"message":"304","line":227,"column":51,"nodeType":"305","endLine":227,"endColumn":94},{"ruleId":"257","severity":1,"message":"306","line":228,"column":36,"nodeType":"259","endLine":228,"endColumn":57,"suggestions":"307"},{"ruleId":"257","severity":1,"message":"308","line":229,"column":27,"nodeType":"259","endLine":229,"endColumn":54,"suggestions":"309"},{"ruleId":"232","severity":1,"message":"266","line":8,"column":27,"nodeType":"234","messageId":"235","endLine":8,"endColumn":33},{"ruleId":"232","severity":1,"message":"233","line":8,"column":35,"nodeType":"234","messageId":"235","endLine":8,"endColumn":42},{"ruleId":"232","severity":1,"message":"236","line":8,"column":44,"nodeType":"234","messageId":"235","endLine":8,"endColumn":53},{"ruleId":"232","severity":1,"message":"246","line":11,"column":27,"nodeType":"234","messageId":"235","endLine":11,"endColumn":33},{"ruleId":"232","severity":1,"message":"248","line":11,"column":41,"nodeType":"234","messageId":"235","endLine":11,"endColumn":48},{"ruleId":"232","severity":1,"message":"310","line":18,"column":28,"nodeType":"234","messageId":"235","endLine":18,"endColumn":42},{"ruleId":"232","severity":1,"message":"311","line":22,"column":10,"nodeType":"234","messageId":"235","endLine":22,"endColumn":14},{"ruleId":"232","severity":1,"message":"274","line":11,"column":10,"nodeType":"234","messageId":"235","endLine":11,"endColumn":19},{"ruleId":"232","severity":1,"message":"275","line":11,"column":21,"nodeType":"234","messageId":"235","endLine":11,"endColumn":30},{"ruleId":"232","severity":1,"message":"276","line":11,"column":32,"nodeType":"234","messageId":"235","endLine":11,"endColumn":42},{"ruleId":"232","severity":1,"message":"278","line":11,"column":54,"nodeType":"234","messageId":"235","endLine":11,"endColumn":60},{"ruleId":"232","severity":1,"message":"312","line":28,"column":7,"nodeType":"234","messageId":"235","endLine":28,"endColumn":19},{"ruleId":"232","severity":1,"message":"313","line":61,"column":10,"nodeType":"234","messageId":"235","endLine":61,"endColumn":17},{"ruleId":"257","severity":1,"message":"304","line":87,"column":15,"nodeType":"305","endLine":87,"endColumn":51},{"ruleId":"257","severity":1,"message":"304","line":87,"column":53,"nodeType":"305","endLine":87,"endColumn":90},{"ruleId":"257","severity":1,"message":"314","line":94,"column":4,"nodeType":"259","endLine":94,"endColumn":33,"suggestions":"315"},{"ruleId":"232","severity":1,"message":"316","line":97,"column":9,"nodeType":"234","messageId":"235","endLine":97,"endColumn":14},{"ruleId":"257","severity":1,"message":"317","line":97,"column":17,"nodeType":"234","endLine":97,"endColumn":24},{"ruleId":"257","severity":1,"message":"318","line":209,"column":28,"nodeType":"259","endLine":209,"endColumn":45,"suggestions":"319"},{"ruleId":"232","severity":1,"message":"266","line":8,"column":27,"nodeType":"234","messageId":"235","endLine":8,"endColumn":33},{"ruleId":"232","severity":1,"message":"320","line":8,"column":55,"nodeType":"234","messageId":"235","endLine":8,"endColumn":64},{"ruleId":"232","severity":1,"message":"274","line":11,"column":10,"nodeType":"234","messageId":"235","endLine":11,"endColumn":19},{"ruleId":"232","severity":1,"message":"275","line":11,"column":21,"nodeType":"234","messageId":"235","endLine":11,"endColumn":30},{"ruleId":"232","severity":1,"message":"276","line":11,"column":32,"nodeType":"234","messageId":"235","endLine":11,"endColumn":42},{"ruleId":"232","severity":1,"message":"277","line":11,"column":44,"nodeType":"234","messageId":"235","endLine":11,"endColumn":52},{"ruleId":"232","severity":1,"message":"278","line":11,"column":54,"nodeType":"234","messageId":"235","endLine":11,"endColumn":60},{"ruleId":"232","severity":1,"message":"245","line":13,"column":10,"nodeType":"234","messageId":"235","endLine":13,"endColumn":25},{"ruleId":"232","severity":1,"message":"247","line":13,"column":49,"nodeType":"234","messageId":"235","endLine":13,"endColumn":53},{"ruleId":"232","severity":1,"message":"248","line":13,"column":55,"nodeType":"234","messageId":"235","endLine":13,"endColumn":62},{"ruleId":"232","severity":1,"message":"249","line":13,"column":64,"nodeType":"234","messageId":"235","endLine":13,"endColumn":72},{"ruleId":"232","severity":1,"message":"279","line":18,"column":10,"nodeType":"234","messageId":"235","endLine":18,"endColumn":15},{"ruleId":"232","severity":1,"message":"321","line":23,"column":10,"nodeType":"234","messageId":"235","endLine":23,"endColumn":22},{"ruleId":"232","severity":1,"message":"255","line":23,"column":35,"nodeType":"234","messageId":"235","endLine":23,"endColumn":48},{"ruleId":"232","severity":1,"message":"322","line":29,"column":9,"nodeType":"234","messageId":"235","endLine":29,"endColumn":17},{"ruleId":"232","severity":1,"message":"323","line":29,"column":19,"nodeType":"234","messageId":"235","endLine":29,"endColumn":30},{"ruleId":"232","severity":1,"message":"324","line":30,"column":9,"nodeType":"234","messageId":"235","endLine":30,"endColumn":16},{"ruleId":"257","severity":1,"message":"325","line":59,"column":6,"nodeType":"259","endLine":59,"endColumn":8,"suggestions":"326"},{"ruleId":"257","severity":1,"message":"327","line":66,"column":49,"nodeType":"259","endLine":66,"endColumn":68,"suggestions":"328"},{"ruleId":"232","severity":1,"message":"266","line":8,"column":27,"nodeType":"234","messageId":"235","endLine":8,"endColumn":33},{"ruleId":"232","severity":1,"message":"274","line":11,"column":10,"nodeType":"234","messageId":"235","endLine":11,"endColumn":19},{"ruleId":"232","severity":1,"message":"275","line":11,"column":21,"nodeType":"234","messageId":"235","endLine":11,"endColumn":30},{"ruleId":"232","severity":1,"message":"276","line":11,"column":32,"nodeType":"234","messageId":"235","endLine":11,"endColumn":42},{"ruleId":"232","severity":1,"message":"277","line":11,"column":44,"nodeType":"234","messageId":"235","endLine":11,"endColumn":52},{"ruleId":"232","severity":1,"message":"278","line":11,"column":54,"nodeType":"234","messageId":"235","endLine":11,"endColumn":60},{"ruleId":"232","severity":1,"message":"245","line":13,"column":10,"nodeType":"234","messageId":"235","endLine":13,"endColumn":25},{"ruleId":"232","severity":1,"message":"246","line":13,"column":27,"nodeType":"234","messageId":"235","endLine":13,"endColumn":33},{"ruleId":"232","severity":1,"message":"247","line":13,"column":35,"nodeType":"234","messageId":"235","endLine":13,"endColumn":39},{"ruleId":"232","severity":1,"message":"248","line":13,"column":41,"nodeType":"234","messageId":"235","endLine":13,"endColumn":48},{"ruleId":"232","severity":1,"message":"249","line":13,"column":50,"nodeType":"234","messageId":"235","endLine":13,"endColumn":58},{"ruleId":"232","severity":1,"message":"329","line":13,"column":60,"nodeType":"234","messageId":"235","endLine":13,"endColumn":64},{"ruleId":"232","severity":1,"message":"330","line":36,"column":8,"nodeType":"234","messageId":"235","endLine":36,"endColumn":18},{"ruleId":"257","severity":1,"message":"318","line":55,"column":28,"nodeType":"259","endLine":55,"endColumn":45,"suggestions":"331"},{"ruleId":"232","severity":1,"message":"320","line":8,"column":55,"nodeType":"234","messageId":"235","endLine":8,"endColumn":64},{"ruleId":"232","severity":1,"message":"274","line":11,"column":10,"nodeType":"234","messageId":"235","endLine":11,"endColumn":19},{"ruleId":"232","severity":1,"message":"275","line":11,"column":21,"nodeType":"234","messageId":"235","endLine":11,"endColumn":30},{"ruleId":"232","severity":1,"message":"276","line":11,"column":32,"nodeType":"234","messageId":"235","endLine":11,"endColumn":42},{"ruleId":"232","severity":1,"message":"277","line":11,"column":44,"nodeType":"234","messageId":"235","endLine":11,"endColumn":52},{"ruleId":"232","severity":1,"message":"278","line":11,"column":54,"nodeType":"234","messageId":"235","endLine":11,"endColumn":60},{"ruleId":"232","severity":1,"message":"247","line":16,"column":49,"nodeType":"234","messageId":"235","endLine":16,"endColumn":53},{"ruleId":"232","severity":1,"message":"249","line":16,"column":64,"nodeType":"234","messageId":"235","endLine":16,"endColumn":72},{"ruleId":"232","severity":1,"message":"332","line":17,"column":8,"nodeType":"234","messageId":"235","endLine":17,"endColumn":20},{"ruleId":"232","severity":1,"message":"333","line":18,"column":8,"nodeType":"234","messageId":"235","endLine":18,"endColumn":16},{"ruleId":"232","severity":1,"message":"279","line":21,"column":10,"nodeType":"234","messageId":"235","endLine":21,"endColumn":15},{"ruleId":"232","severity":1,"message":"321","line":26,"column":29,"nodeType":"234","messageId":"235","endLine":26,"endColumn":41},{"ruleId":"232","severity":1,"message":"255","line":26,"column":76,"nodeType":"234","messageId":"235","endLine":26,"endColumn":89},{"ruleId":"232","severity":1,"message":"334","line":26,"column":91,"nodeType":"234","messageId":"235","endLine":26,"endColumn":103},{"ruleId":"232","severity":1,"message":"324","line":32,"column":9,"nodeType":"234","messageId":"235","endLine":32,"endColumn":16},{"ruleId":"232","severity":1,"message":"335","line":32,"column":18,"nodeType":"234","messageId":"235","endLine":32,"endColumn":25},{"ruleId":"232","severity":1,"message":"336","line":104,"column":8,"nodeType":"234","messageId":"235","endLine":104,"endColumn":21},{"ruleId":"257","severity":1,"message":"325","line":107,"column":6,"nodeType":"259","endLine":107,"endColumn":8,"suggestions":"337"},{"ruleId":"232","severity":1,"message":"338","line":111,"column":8,"nodeType":"234","messageId":"235","endLine":111,"endColumn":16},{"ruleId":"257","severity":1,"message":"327","line":111,"column":49,"nodeType":"259","endLine":111,"endColumn":68,"suggestions":"339"},"no-native-reassign",["340"],"no-negated-in-lhs",["341"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'ClickAwayListener' is defined but never used.","'Typography' is defined but never used.","'setShowMenu' is assigned a value but never used.","'fold' is assigned a value but never used.","'handleClickAway' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SwipeableDrawer' is defined but never used.","'Button' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'ArrowRightIcon' is defined but never used.","'ArrowDropDownIcon' is defined but never used.","'initNavTree' is defined but never used.","'foldStateHash' is assigned a value but never used.","'layoutStateHash' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchStateFromCookies' and 'saveStateToCookies'. Either include them or remove the dependency array.","ArrayExpression",["342"],"React Hook useMemo has an unnecessary dependency: 'curHash'. Either exclude it or remove the dependency array.",["343"],"React Hook useMemo has missing dependencies: 'foldOverrideCallback', 'layoutState.curFold', and 'layoutState.showEditor'. Either include them or remove the dependency array.",["344"],"'useState' is defined but never used.","'useRef' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["340"],["341"],"'useLoader' is defined but never used.","'useUpdate' is defined but never used.","'useSpring' is defined but never used.","'useSprings' is defined but never used.","'animated' is defined but never used.","'config' is defined but never used.","'Folds' is defined but never used.","'paperSize' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","'Canvas' is defined but never used.","'useThree' is defined but never used.","'extend' is defined but never used.","'a' is defined but never used.","'position' is assigned a value but never used.","'scale' is assigned a value but never used.","'instructions' is assigned a value but never used.","'setInstructions' is assigned a value but never used.","'prevStep' is assigned a value but never used.","'rotation' is assigned a value but never used.","'vertices' is assigned a value but never used.","'lines' is assigned a value but never used.","'edgeRotations' is assigned a value but never used.","'applySteps' is assigned a value but never used.","React Hook useMemo has an unnecessary dependency: 'foldKey'. Either exclude it or remove the dependency array.",["345"],"React Hook useMemo has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","React Hook useEffect has a missing dependency: 'foldState.maxSteps'. Either include it or remove the dependency array.",["346"],"React Hook useEffect has missing dependencies: 'initFold', 'readInstructionsIntoState', and 'setFoldState'. Either include them or remove the dependency array.",["347"],"'setLayoutState' is defined but never used.","'page' is assigned a value but never used.","'AnimatedCard' is assigned a value but never used.","'posHash' is assigned a value but never used.","React Hook useMemo has an unnecessary dependency: 'layoutState.useImages'. Either exclude it or remove the dependency array. Outer scope values like 'layoutState.useImages' aren't valid dependencies because mutating them doesn't re-render the component.",["348"],"'title' is assigned a value but never used.","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has a missing dependency: 'cardRefs'. Either include it or remove the dependency array. You can also do a functional update 'setCardRefs(c => ...)' if you only need 'cardRefs' in the 'setCardRefs' call.",["349"],"'createRef' is defined but never used.","'windowHeight' is assigned a value but never used.","'cardRefs' is assigned a value but never used.","'setCardRefs' is assigned a value but never used.","'curHash' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'classes.fold_controls_button' and 'classes.fold_controls_button_label'. Either include them or remove the dependency array.",["350"],"React Hook useMemo has an unnecessary dependency: 'window.innerWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.innerWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["351"],"'Card' is defined but never used.","'createCard' is assigned a value but never used.",["352"],"'SkipPrevious' is defined but never used.","'SkipNext' is defined but never used.","'setFoldState' is assigned a value but never used.","'setHash' is assigned a value but never used.","'buttonClasses' is assigned a value but never used.",["353"],"'ctrlLeft' is assigned a value but never used.",["354"],"no-global-assign","no-unsafe-negation",{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"357","fix":"373"},{"desc":"369","fix":"374"},{"desc":"371","fix":"375"},{"desc":"357","fix":"376"},"Update the dependencies array to be: [fetchStateFromCookies, saveStateToCookies]",{"range":"377","text":"378"},"Update the dependencies array to be: []",{"range":"379","text":"380"},"Update the dependencies array to be: [foldOverrideCallback, layoutState.curFold, layoutState.page, layoutState.showEditor, windowHeight]",{"range":"381","text":"382"},"Update the dependencies array to be: [foldState.selectedLevel]",{"range":"383","text":"384"},"Update the dependencies array to be: [foldState.maxSteps, foldState.stepIndex]",{"range":"385","text":"386"},"Update the dependencies array to be: [foldKey, initFold, readInstructionsIntoState, setFoldState, stepArray.length]",{"range":"387","text":"388"},"Update the dependencies array to be: [name]",{"range":"389","text":"390"},"Update the dependencies array to be: [cardList.length, cardRefs]",{"range":"391","text":"392"},"Update the dependencies array to be: [classes.fold_controls_button, classes.fold_controls_button_label]",{"range":"393","text":"394"},{"range":"395","text":"380"},{"range":"396","text":"392"},{"range":"397","text":"394"},{"range":"398","text":"380"},[3406,3408],"[fetchStateFromCookies, saveStateToCookies]",[3717,3726],"[]",[3829,3861],"[foldOverrideCallback, layoutState.curFold, layoutState.page, layoutState.showEditor, windowHeight]",[6535,6614],"[foldState.selectedLevel]",[6652,6673],"[foldState.maxSteps, foldState.stepIndex]",[6702,6729],"[foldKey, initFold, readInstructionsIntoState, setFoldState, stepArray.length]",[2336,2365],"[name]",[5703,5720],"[cardList.length, cardRefs]",[1656,1658],"[classes.fold_controls_button, classes.fold_controls_button_label]",[1832,1851],[1285,1302],[3018,3020],[3112,3131]]
[{"/home/bbor/dev/origamiodyssey/src/index.js":"1","/home/bbor/dev/origamiodyssey/src/layout/Header.js":"2","/home/bbor/dev/origamiodyssey/src/layout/Body.js":"3","/home/bbor/dev/origamiodyssey/src/layout/Footer.js":"4","/home/bbor/dev/origamiodyssey/src/layout/pages/Splash.js":"5","/home/bbor/dev/origamiodyssey/src/layout/pages/Lesson.js":"6","/home/bbor/dev/origamiodyssey/src/infra/constants.js":"7","/home/bbor/dev/origamiodyssey/src/anim/Scene.js":"8","/home/bbor/dev/origamiodyssey/src/infra/appReducer.js":"9","/home/bbor/dev/origamiodyssey/src/style/theme.js":"10","/home/bbor/dev/origamiodyssey/src/anim/Paper.js":"11","/home/bbor/dev/origamiodyssey/src/infra/actions.js":"12","/home/bbor/dev/origamiodyssey/src/layout/NavDrawer.js":"13","/home/bbor/dev/origamiodyssey/src/layout/pages/ModelSelect.js":"14","/home/bbor/dev/origamiodyssey/src/layout/pages/FoldControls.js":"15","/home/bbor/dev/origamiodyssey/src/layout/pages/User.js":"16","/home/bbor/dev/origamiodyssey/src/static/lettering.js":"17","/home/bbor/dev/origamiodyssey/src/layout/pages/FoldEditorCards.js":"18"},{"size":1910,"mtime":1615737829551,"results":"19","hashOfConfig":"20"},{"size":2597,"mtime":1615744000165,"results":"21","hashOfConfig":"20"},{"size":5646,"mtime":1616460296460,"results":"22","hashOfConfig":"20"},{"size":442,"mtime":1613020514188,"results":"23","hashOfConfig":"20"},{"size":0,"mtime":1613010789852,"results":"24","hashOfConfig":"20"},{"size":131,"mtime":1613020940457,"results":"25","hashOfConfig":"20"},{"size":3589,"mtime":1616191806695,"results":"26","hashOfConfig":"20"},{"size":3309,"mtime":1616350047617,"results":"27","hashOfConfig":"20"},{"size":1261,"mtime":1615857067734,"results":"28","hashOfConfig":"20"},{"size":4432,"mtime":1615944392061,"results":"29","hashOfConfig":"20"},{"size":22946,"mtime":1616460836592,"results":"30","hashOfConfig":"20"},{"size":561,"mtime":1615941337229,"results":"31","hashOfConfig":"20"},{"size":4689,"mtime":1614982480281,"results":"32","hashOfConfig":"20"},{"size":7781,"mtime":1616458529307,"results":"33","hashOfConfig":"20"},{"size":2824,"mtime":1615753205105,"results":"34","hashOfConfig":"20"},{"size":1514,"mtime":1615046315306,"results":"35","hashOfConfig":"20"},{"size":14422,"mtime":1615155376973,"results":"36","hashOfConfig":"20"},{"size":9360,"mtime":1616362967374,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"eii7vj",{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"40"},"/home/bbor/dev/origamiodyssey/src/index.js",[],["87","88"],"/home/bbor/dev/origamiodyssey/src/layout/Header.js",["89","90","91","92","93","94","95","96"],"/**\n * FILENAME: Header.js\n *\n * DESCRIPTION: Renders the basic of the animation.\n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n\tAppBar,\n\tClickAwayListener,\n\tToolbar,\n\tIconButton,\n\tTypography,\n\tMenu,\n\tMenuItem,\n\tInputBase\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\n// import OriDomi from \"oridomi\";\nimport { setShowNavDrawer, setFoldState, setLayoutState } from './../infra/actions';\nimport useStyles from './../style/theme.js';\nimport Lettering from './../static/lettering.js';\n\nexport const Header = props => {\n\tconst { setShowNavDrawer, setFoldState, setLayoutState } = props;\n\n\tconst [showMenu, setShowMenu] = useState(false);\n\n\tconst styles = useStyles();\n\tconst fold = useRef(null);\n\n\tconst toggleMenu = e => {\n\t\tconsole.log('toggleMenu');\n\t\tsetShowNavDrawer();\n\t};\n\n\tconst handleClickAway = e => {\n\t\tsetShowNavDrawer(false);\n\t};\n\n\tconst handleClickLogo = e => {\n\t\tsetFoldState(null);\n\t\tsetLayoutState(null);\n\t};\n\n\tconsole.log(styles);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<AppBar className={styles.appBarContainer}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tclassName=\"menu-button\"\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\tonClick={toggleMenu}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName={styles.appLogo}\n\t\t\t\t\t\theight=\"28px\"\n\t\t\t\t\t\tsrc={window.location.origin + '/logo512x256.png'}\n\t\t\t\t\t\tonClick={handleClickLogo}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className={styles.appLettering}>\n\t\t\t\t\t\t<Lettering />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.searchContainer}>\n\t\t\t\t\t\t<div className={styles.searchIcon}>\n\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<InputBase\n\t\t\t\t\t\t\tplaceholder=\"Search Modelsâ€¦\"\n\t\t\t\t\t\t\tclasses={{ root: styles.inputRoot, input: styles.inputInput }}\n\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'search' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<Menu\n\t\t\t\televation={0}\n\t\t\t\tgetContentAnchorEl={null}\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: 'bottom',\n\t\t\t\t\thorizontal: 'center'\n\t\t\t\t}}\n\t\t\t\ttransformOrigin={{\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'center'\n\t\t\t\t}}\n\t\t\t\tanchorEl={showMenu}\n\t\t\t\topen={Boolean(showMenu)}\n\t\t\t\tkeepMounted\n\t\t\t\tonClose={toggleMenu}\n\t\t\t>\n\t\t\t\t<MenuItem> A Menu without options </MenuItem>\n\t\t\t\t<MenuItem> is no menu at all </MenuItem>\n\t\t\t</Menu>\n\t\t</React.Fragment>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {};\n};\n\nexport default connect(mapStateToProps, { setShowNavDrawer, setFoldState, setLayoutState })(Header);\n","/home/bbor/dev/origamiodyssey/src/layout/Body.js",["97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114"],"/home/bbor/dev/origamiodyssey/src/layout/Footer.js",["115","116","117","118","119"],"/**\n * FILENAME: Scene.js \n *\n * DESCRIPTION: Renders the basic of the animation. \n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nexport const Footer = props => {\n\tconst { } = props;\n\n\treturn (\n\t\t<div className=\"footer\">\n\t\t</div>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {};\n};\n\nexport default connect(mapStateToProps, {})(Footer);\n","/home/bbor/dev/origamiodyssey/src/layout/pages/Splash.js",[],"/home/bbor/dev/origamiodyssey/src/layout/pages/Lesson.js",[],["120","121"],"/home/bbor/dev/origamiodyssey/src/infra/constants.js",["122","123","124","125"],"/**\n * FILENAME: Constants.js \n *\n * DESCRIPTION: Contains constants for use accross the app. \n */\n\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport ClassIcon from \"@material-ui/icons/Class\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\n\n// The FOLD files \nimport BirdBase from \"./../folds/BirdBase.json\";\nimport BoatBase from \"./../folds/BoatBase.json\";\nimport FrogBase from \"./../folds/FrogBase.json\";\n\nexport const Pages = {\n\tSplash: \"Splash\",\n\tModelSelect: \"ModelSelect\",\n\tFold: \"Fold\",\n\tUser: \"User\",\n\n\t// Used but undefined\n\tLesson: \"Lesson\",\n\tHistory: \"History\",\n\tLearnDashboard: \"LearnDashboard\",\n\tTeachDashboard: \"TeachDashboard\"\n};\n\nexport const Folds = {\n\tBirdBase: {\n\t\tname: \"Bird Base\",\n\t\tdescription: \"The first base many learn, this is perfect for winged creations such as birds and dragons.\",\n\t\ttags: [],\n\t\tauthor: \"Traditional\",\n\t\tjson: BirdBase\n\t},\n\tBoatBase: {\n\t\tname: \"Boat Base\",\n\t\tdescription: \"A more specific base for blocky models, such as boats and frames.\",\n\t\ttags: [],\n\t\tauthor: \"Traditional\",\n\t\tjson: BoatBase\n\t},\n\tFrogBase: {\n\t\tname: \"Frog Base\",\n\t\tdescription: \"A complex base used for models with length-wise asymmetry, like flowers and animals.\",\n\t\ttags: [],\n\t\tauthor: \"Traditional\",\n\t\tjson: FrogBase \n\t}\n};\n\nexport const initAppReducerState = {\n\tlayoutState: {\n\t\thash: 0,\n\t\tpage: Pages.ModelSelect,\n\t\tcurFold: null,\n\t\tfoldHash: 0,\n\t\tuseImages: false,\n\t\tshowEditor: true,\n\t},\n\tfoldState: {\n\t\thash: 0,\n\t\tselectedLevel: 0,\n\t\tstepIndex: -1, // Depends on selected level\n\t\toverrideWithEditor: false \n\t},\n\teditorState: {\n\t\thash: 0,\n\t\tedgeHighlights: [],\n\t\tvertexHighlights: [],\n\t\tfaceHighlights: [],\n\t\tshowEdges: true,\n\t\tshowVertices: true,\n\t\tshowFaces: true,\n\t\tshowTriangulations: false\n\t},\n\tshowNavDrawer: false\n\n};\n\nexport const Actions = {\n\tSET_LAYOUT_STATE: \"SET_LAYOUT_STATE\",\n\tSET_SHOW_NAV_DRAWER: \"SET_SHOW_NAV_DRAWER\",\n\tSET_PAGE_CONFIG: \"SET_PAGE_CONFIG\",\n\tSET_FOLD_STATE: \"SET_FOLD_STATE\",\n\tSET_EDITOR_STATE: \"SET_EDITOR_STATE\",\n};\n\nexport const initNavTree = [\n\t{\t\n\t\ttext: \"What is Origami?\",\n\t\tkey: \"context_root\",\n\t\tchildren: [\n\t\t\t{\n\t\t\t\ttext: \"History\",\n\t\t\t\tkey: \"history\"\t\t\t\t\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"Origami Today\",\n\t\t\t\tkey: \"current_origami\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"Practical Origami\",\n\t\t\t\tkey: \"practical\"\n\t\t\t}\n\t\t]\n\t},\n\t{\t\n\t\ttext: \"Learn Origami\",\n\t\tkey: \"learn_root\",\n\t\tchildren: [\n\t\t\t{\n\t\t\t\ticon: <DashboardIcon />,\n\t\t\t\ttext: \"Dashboard\",\n\t\t\t\tkey: \"learn_dashboard\"\t\t\t\t\n\t\t\t},\n\t\t\t{\n\t\t\t\ticon: <GroupAddIcon />,\n\t\t\t\ttext: \"Join Class\",\n\t\t\t\tkey: \"join_class\"\n\t\t\t}\n\t\t]\n\t},\n\t{\t\n\t\ttext: \"Teach Origami\",\n\t\tkey: \"teach_root\",\n\t\tchildren: [\n\t\t\t{\n\t\t\t\ticon: <DashboardIcon />,\n\t\t\t\ttext: \"Lesson Plans\",\n\t\t\t\tkey: \"lesson_plan_dashboard\"\t\t\t\t\n\t\t\t},\n\t\t\t{\n\t\t\t\ticon: <SchoolIcon />,\n\t\t\t\ttext: \"Read Research Paper\",\n\t\t\t\tkey: \"google_scholar\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ticon: <ClassIcon />,\n\t\t\t\ttext: \"Origami in the Classroom\",\n\t\t\t\tkey: \"teaching_tips\"\n\t\t\t}\n\t\t]\n\t},\n\t{\t\n\t\ticon: <GitHubIcon />,\n\t\ttext: \"Source Code\",\n\t\tkey: \"github\"\n\t},\n];\n\nexport const initFoldState = {\n\t//place to store buffer geo vertex data\n\tpositions: [],\n\t//place to store buffer geo vertex colors\n\tcolors: [],\n\tindices: [],\n\tnodes: [], \n\tfaces: [], \n\tedges: [], \n\tcreases: [], \n\tvertices: [], //indexed vertices array\n\tfold: null,\n\tcreaseParams: null\n}\n\n/*\nexport const Lines = {\n    U: hingeLines,\n    M: mountainLines,\n    V: valleyLines,\n    C: cutLines,\n    F: facetLines,\n    B: borderLines\n};\n*/\n","/home/bbor/dev/origamiodyssey/src/anim/Scene.js",["126","127","128","129","130","131","132","133","134","135","136"],"/**\n * FILENAME: Scene.js \n *\n * DESCRIPTION: Renders the basic of the animation. \n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\n// Threejs - 3D Animation\nimport { Canvas, useFrame, useThree, useLoader, extend } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\n// React Spring - animation\nimport { useUpdate, useSpring, useSprings, animated, config }  from 'react-spring';\n// import { a, useTransition, Transition } from '@react-spring/three';\n\nimport { Paper } from \"./Paper\";\nimport { Folds } from \"./../infra/constants\";\nimport { setLayoutState, setFoldState } from \"./../infra/actions\";\n\n// Extend will make OrbitControls available as a JSX element called orbitControls for us to use.\nextend({ OrbitControls });\n\nconst CameraControls = () => {\n\t// Get a reference to the Three.js Camera, and the canvas html element.\n\t// We need these to setup the OrbitControls class.\n\t// https://threejs.org/docs/#examples/en/controls/OrbitControls\n\tconst {\n\t\tcamera,\n\t\tgl: { domElement }\n\t} = useThree();\n\n\tconst controls = useRef();\n\n\tuseFrame(({ gl }) => {\n\t\tgl.setClearColor(0xf1f4f4, 1);\n\t\treturn controls.current.update();\n\t});\n\n\treturn (\n\t\t<orbitControls\n\t\t\tref={controls}\n\t\t\targs={[camera, domElement]}\n\t\t\tenableZoom={false}\n\t\t\tenableRotate={true}\n\t\t\tenableDolly={false}\n\t\t\tmouseButtons={{\n\t\t\t\tRIGHT: THREE.MOUSE.ROTATE\n\t\t\t}}\n\t\t\t// maxAzimuthAngle={Math.PI / 4}\n\t\t\tmaxPolarAngle={Math.PI * 3 / 4}\n\t\t\t// minAzimuthAngle={-Math.PI / 4}\n\t\t\tminPolarAngle={-Math.PI * 3 / 4}\n\t\t/>\n\t);\n};\n\n/**\n * Main component.\n */\nexport const Scene = props => {\n\tconst { initFold, foldLastUpdated, paperSize, layoutState, layoutStateHash, foldState, foldStateHash, setFoldState, editorState, editorStateHash } = props;\n\tconst [overlays, setOverlays] = useState({});\n\n\tconst ctrlOverlay = ({ show, name, component }) => {\n\t\tconst newObj = Object.assign({}, overlays);\n\t\tif (show && !newObj[name]) {\n\t\t\tnewObj[name] = component;\n\t\t} else if (!show && newObj[name]) {\n\t\t\tdelete newObj[name];\n\t\t}\n\n\t\tsetOverlays(newObj);\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Canvas camera={{fov: 100, position: [0, 1.8, 0]}} onCreated={state => state.gl.setClearColor(\"red\")} >\n\t\t\t\t<spotLight position={[5, 10, 0]} color='#f1f1ff' distance={100} penumbra={0.75} decay={2} />\n\t\t\t\t<CameraControls />\n\n\t\t\t\t<Paper\n\t\t\t\t\tposition={[0, 0, 0]}\n\t\t\t\t\tscale={10}\n\t\t\t\t\tinitFold={initFold}\n\t\t\t\t\tfoldLastUpdated={foldLastUpdated}\n\t\t\t\t\tfoldKey={layoutState.curFold}\n\t\t\t\t\tfoldState={foldState}\n\t\t\t\t\tfoldStateHash={foldStateHash}\n\t\t\t\t\teditorState={editorState}\n\t\t\t\t\teditorStateHash={editorStateHash}\n\t\t\t\t\tsetFoldState={setFoldState}\n\t\t\t\t\tinitStep={-1}\n\t\t\t\t\tctrlOverlay={ctrlOverlay}\n\t\t\t\t/>\n\t\t\t</Canvas>\n\t\t\t{Object.values(overlays)}\n\t\t</React.Fragment>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tlayoutState: state.appReducer.layoutState,\n\t\tlayoutStateHash: state.appReducer.layoutState.hash,\n\t\tfoldState: state.appReducer.foldState,\n\t\tfoldStateHash: state.appReducer.foldState.hash,\n\t\teditorState: state.appReducer.editorState,\n\t\teditorStateHash: state.appReducer.editorState.hash,\n\t};\n};\n\nexport default connect(mapStateToProps, { setLayoutState, setFoldState })(Scene);\n","/home/bbor/dev/origamiodyssey/src/infra/appReducer.js",["137"],"/**\n * FILENAME: appReducer.js \n *\n * DESCRIPTION: Handles state update for all layout actions.\n */\n\nimport { initAppReducerState, Actions } from \"./constants\";\n\nconst finalInitState = JSON.parse(JSON.stringify(initAppReducerState));\n\nexport const appReducer = (state = finalInitState, action) => {\n\tlet newState = Object.assign({}, state);\n\n\tswitch (action.type) {\n\t\tcase Actions.SET_SHOW_NAV_DRAWER:\n\t\t\t// If passed a val set to that, otherwise toggle\n\t\t\tnewState.showNavDrawer = (action.payload !== undefined) ? action.payload : !newState.showNavDrawer;\n\t\t\tbreak;\n\t\tcase Actions.SET_LAYOUT_STATE:\n\t\t\tconsole.log(\"[SET_LAYOUT_STATE]\", action.payload, initAppReducerState);\n\t\t\tObject.assign(newState.layoutState, action.payload || initAppReducerState.layoutState);\n\t\t\tnewState.layoutState.hash++;\n\t\t\tbreak;\n\t\tcase Actions.SET_FOLD_STATE:\n\t\t\tconsole.log(\"[SET_FOLD_STATE]\", action.payload);\n\t\t\tObject.assign(newState.foldState, action.payload || initAppReducerState.foldState);\n\t\t\tnewState.foldState.hash++;\n\t\t\tbreak;\n\t\tcase Actions.SET_EDITOR_STATE:\n\t\t\tconsole.log(\"[SET_EDITOR_STATE]\", action.payload);\n\t\t\tObject.assign(newState.editorState, action.payload || initAppReducerState.editorState);\n\t\t\tnewState.editorState.hash++;\n\t\t\tbreak;\n\t}\n\n\treturn newState;\n}","/home/bbor/dev/origamiodyssey/src/style/theme.js",["138"],"import { red } from '@material-ui/core/colors';\nimport { createMuiTheme, makeStyles, fade } from '@material-ui/core/styles';\n\n// A custom theme for this app\nexport const theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: '#03506f',\n\t\t\tdark3: '#022e40'\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: '#0a043c'\n\t\t},\n\t\terror: {\n\t\t\tmain: red.A400\n\t\t},\n\t\tbackground: {\n\t\t\tdefault: '#f1f4f4'\n\t\t}\n\t}\n});\n\nexport const useStyles = makeStyles(theme => ({\n\t// Basic Navigation + Layout elements\n\tnavDrawerRoot: {\n\t\tzIndex:4 \n\t},\n\tnavDrawerPaper: {\n\t\tpaddingTop: theme.spacing(8),\n\t},\n\tnavDrawerNode0: {\n\t\tcolor: 'red',\n\t\theight: '200px'\n\t},\n\tnavDrawerNode1: {\n\t\tcolor: 'red'},\n\tnavDrawerNode2: {\n\t\tcolor: 'red'\n\t},\n\tbodyContainer: {\n\t\tmarginTop: theme.spacing(8),\n\t\ttextAlign: 'center'\n\t},\n\tcenterColumn: {\n\t\twidth: '100%',\n\t\tmaxWidth: '1200px',\n\t\t// height: \"100%\",\n\t\tmargin: '0 auto',\n\t\tpadding: \"2rem\",\n\t\tzIndex: 300,\n\t\tposition: \"relative\"\n\t},\n\tsceneContainer: {\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\tposition: 'absolute'\n\t},\n\n\t// Page \"main col\" style \n\tpage_Splash: {\n\n\t},\n\tpage_ModelSelect_container: {\n\t\twidth: \"100%\",\n\t\theight: \"100%\"\n\t},\n\tpage_FoldControls: {\n\t},\n\tpage_User: {\n\t},\n\n\t// Model Cards\n\tmodelCard: {\n\t\tposition: \"absolute\",\n\t},\n\tmodelCard__active: {\n\t\tzIndex: 300,\n\t},\n\tmodelCard_title: {\n\t\tpadding: \"0.5rem\",\n\t\ttextAlign: \"left\",\n\t},\n\tmodelCard_placeholder: {\n\t\theight: \"180px\",\n\t\twidth: \"200px\",\n\t\tdisplay: \"inline-block\",\n\t\twidth: \"200px\",\n\t\tmargin: \"0 10px\"\n\t},\n\tmodelCard_rail: {\n\t\tflexGrow: 1,\n\t\tflexBasis: \"50%\",\n\t\theight: \"100%\"\n\t},\n\tmodelCard_rail_container: {\n\t\tdisplay: \"flex !important\",\n\t\tflexDirection: \"row\",\n\t\theight: \"200px\",\n\t},\n\tmodelCard_rail_container__active: {\n\t\theight: \"340px !important\"\n\t},\n\tmodelCard_foldButton: {\n\t\tmargin: '0 0.5rem 0 auto !important'\n\t},\n\tmodelCard_bodyText: {\n\n\t},\n\tmodelCard_label: {\n\t\ttextAlign: \"left\",\n\t\tmarginBottom: \"-4px\"\n\t},\n\n\t// Header / App Bar\n\tappBarContainer: {\n\t\tposition: 'static',\n\t\tzIndex: 3000,\n\t\tbackgroundColor: '#022e40 !important'\n\t},\n\tappTitle: {\n\t\tverticalAlign: 'middle'\n\t},\n\tappLettering: {\n\t\theight: \"64px !important\",\n\t\tpadding: \"15px 0\"\n\t},\n\tappLogo: {\n\t\tmarginRight: \"1rem\"\n\t},\n\tsearchContainer: {\n\t\t// position: 'relative',\n\t\tborderRadius: theme.shape.borderRadius,\n\t\tbackgroundColor: fade(theme.palette.common.white, 0.15),\n\t\t'&:hover': {\n\t\t\tbackgroundColor: fade(theme.palette.common.white, 0.25)\n\t\t},\n\t\tmarginRight: \"1rem\",\n\t\tmarginLeft: 'auto',\n\t\twidth: '100%',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tmarginLeft: \"auto\",\n\t\t\twidth: 'auto'\n\t\t}\n\t},\n\tsearchIcon: {\n\t\tpadding: theme.spacing(0, 2),\n\t\theight: '32px !important',\n\t\tposition: 'absolute',\n\t\tpointerEvents: 'none',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center'\n\t},\n\tinputRoot: {\n\t\tpaddingLeft: `48px`,\n\t},\n\tinputInput: {\n\t\tcolor: '#ffffff',\n\t\tpadding: theme.spacing(1, 20, 1, 0),\n\t\t// vertical padding + font size from searchIcon\n\t\ttransition: theme.transitions.create('width'),\n\t\twidth: '100%',\n\t\t[theme.breakpoints.up('md')]: {\n\t\t\twidth: '20ch'\n\t\t}\n\t},\n\n\t// Fold Controls\n\tfold_controls: {\n\t\twidth: \"min-content\",\n\t\tposition: \"absolute\",\n\t\tbottom: \"64px\",\n\t},\n\tfold_controls_button: {\n\t\theight: \"64px\",\n\t\twidth: \"64px\",\n\t\talignItems: \"center\"\n\t},\n\tfold_controls_button_label: {\n\t\tflexDirection: \"column\",\n\t},\n\tfold_controls_button_container: {\n\t},\n\tfold_controls_button_icon: {\n\t\tfontSize: '32px !important',\n\t\tmarginBottom: theme.spacing.unit\n\t},\n\tfold_diagrams_container: {\n\t\twidth: \"100%\",\n\t\tborder: \"1px solid blue\"\n\t},\n\n\n\t// Fold Editor\n\teditorState: {\n\t\tposition: \"absolute\",\n\t\twidth: \"400px\",\n\t\theight: \"25%\",\n\t\ttop: \"10%\",\n\t\tleft: \"20px\",\n\t\tpadding: \"0.5rem !important\",\n\t},\n\teditorDetails: {\n\t\tposition: \"absolute\",\n\t\twidth: \"400px\",\n\t\theight: \"60%\",\n\t\ttop: \"37%\",\n\t\tleft: \"20px\",\n\t\tpadding: \"0.5rem !important\",\n\t},\n\teditorEntry: {\n\t\tposition: \"absolute\",\n\t\twidth: \"500px\",\n\t\theight: \"87%\",\n\t\ttop: \"10%\",\n\t\tright: \"20px\",\n\t\tpadding: \"0.5rem !important\"\n\t},\n\teditor_row: {\n\t\theight: \"4rem\"\n\t},\n\teditor_cardTitle: {\n\t\ttextAlign: \"left\",\t\n\t\tmargin: \"0 0 15px 5px !important\"\n\t},\n\teditor_jsonTextArea: {\n\t\theight: \"90%\",\n\t\twidth: \"500px\",\n\t\tmarginLeft: \"-0.5rem\"\n\t},\n\teditor_bodyText: {\n\t\tfontSize: \"1.25rem !important\"\n\t},\n\teditor_floatAction: {\n\t\tposition: \"absolute\",\n\t\ttop: \"10px\",\n\t\tright: \"0\"\n\t},\n\teditor_select: {\n\t\twidth: \"90%\"\n\t},\n\n\t// Paper\n\tvertLabel: {\n\t\tposition: \"absolute\",\n\t\tzIndex: 3001,\n\t\tfontWeight: \"bold\"\n\t}\n}));\n\nexport default useStyles;\n","/home/bbor/dev/origamiodyssey/src/anim/Paper.js",["139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156"],"/home/bbor/dev/origamiodyssey/src/infra/actions.js",[],"/home/bbor/dev/origamiodyssey/src/layout/NavDrawer.js",["157","158","159","160","161","162","163"],"/**\n * FILENAME: NavDrawer.js \n *\n * DESCRIPTION: A sidebar-based nav tree, custom built to take advantage of react-spring.\n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SwipeableDrawer, Button, List, Divider, ListItem, } from '@material-ui/core';\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\n\nimport { Pages, initNavTree } from \"./../infra/constants\";\nimport { setShowNavDrawer, setLayoutState } from \"./../infra/actions\";\nimport useStyles from \"./../style/theme\";\n\nexport const NavDrawer = props => {\n\tconst { page, showNavDrawer, setShowNavDrawer, setLayoutState } = props;\n\n\tconst [navTreeData, setNavTree] = useState(initNavTree);\n\tconst styles = useStyles();\n\n\tconst findNode = (key, node = navTreeData, path = []) => {\n\t\t// Root case - recurse into array of subtrees\n\t\tif (Array.isArray(node)) {\n\t\t\treturn node.reduce((acc, childNode) => {\n\t\t\t\tif (!acc) {\n\t\t\t\t\tconst ret = findNode(key, childNode, path);\n\n\t\t\t\t\tif (ret && ret[1]) {\n\t\t\t\t\t\tacc = ret;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t}, null) || [null, null];\n\n\t\t// Success case - we found the node\n\t\t} else if (node.key === key) {\n\t\t\treturn [[node.key, ...path], node];\n\n\t\t// Child case - recurse into children\n\t\t} else if (node.children) {\n\t\t\treturn node.children.reduce((acc, childNode) => {\n\t\t\t\tif (!acc) {\n\t\t\t\t\tconst [foundPath, foundNode] = findNode(key, childNode, path);\n\n\t\t\t\t\tif (foundNode) {\n\t\t\t\t\t\tacc = [[key, ...foundPath], foundNode];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn acc;\n\t\t\t}, null) || [null, null];\n\t\t}\n\n\t\t// Failure case - return null\n\t\treturn [[], null];\n\t}\n\n\tconst setNode = (path, field, val, node = navTreeData) => {\n\t\tlet newNavTree = [...navTreeData];\n\n\t\t// Nested function that recurses through the tree to modify a node\n\t\tconst recursiveSet = (path, node = newNavTree) => {\n\t\t\tif (!path || path.length === 0) {\n\t\t\t\tnode[field] = val; \n\t\t\t} else if (Array.isArray(node)) {\n\t\t\t\tlet child = node.find(e => e.key === path[0]);\n\t\t\t\trecursiveSet(path.slice(1), child);\n\t\t\t} else if (node.children) {\n\t\t\t\tlet child = node.children.find(e => e.key === path[0]);\n\t\t\t\trecursiveSet(path.slice(1), child);\n\t\t\t}\n\t\t}\n\n\t\trecursiveSet(path);\n\t\tsetNavTree(newNavTree);\n\t}\n\n\tconst handleNavDrawerSelect = (event, key) => {\n\t\tif (!key) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the key is a page ID, just take us to that page\n\t\tif (Object.keys(Pages).includes(key)) {\n\t\t\tsetLayoutState({ curPage: key });\n\t\t\treturn;\n\t\t} \n\n\t\t// If the node has children, show or hide them on parent click\n\t\tconst [path, node] = findNode(key);\n\t\tif (node.children) {\n\t\t\tsetNode(path, \"expanded\", !node.expanded);\n\t\t\treturn;\n\t\t}\n\n\t\t// Else handle key-specific behavior (i.e. everything else)\n\t\tswitch (key) {\n\t\t\tcase \"github\":\n\t\t\t\twindow.open('https://github.com/robbwdoering/origamiodyssey', '_blank');\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"unhandled navDrawer option\", key);\n\t\t}\n\n\t}\n\n\tconst renderNavNode = (node, nestedLevel = 0) => {\n\t\tif (!node || node.hidden) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Nested component that just renders one node, with no regard for hierarchy beyond tracking nestedLevel\n\t\tconst Node = ({ node, nestedLevel }) => {\n\t\t\tconst icon = node.icon || (node.children ? (node.expanded ? <ArrowDropDownIcon /> : <ArrowRightIcon />) : null );\n\t\t\tconsole.log(\"Key: \", node.key)\n\n\t\t\treturn (\n\t\t\t\t<ListItem \n\t\t\t\t\tclassName={`nested-level-${nestedLevel}`}\n\t\t\t\t\tkey={node.key}\n\t\t\t\t\tbutton\n\t\t\t\t\tonClick={e => handleNavDrawerSelect(e, node.key)}\n\t\t\t\t>\n\t\t\t\t\t{icon && <ListItemIcon> {icon} </ListItemIcon>}\n\t\t\t\t\t<ListItemText> {node.text} </ListItemText>\n\t\t\t\t</ListItem>\n\t\t\t);\n\t\t};\n\n\t\tlet ret = [<Node key={\"node_\"+node.key} node={node} nestedLevel={nestedLevel} />];\n\n\t\tif (node.children && node.expanded) {\n\t\t\tnode.children.forEach(child => {\n\t\t\t\tret = ret.concat(renderNavNode(child, nestedLevel + 1));\n\t\t\t});\n\t\t};\n\n\t\treturn ret;\n\t};\n\n\treturn (\n\t\t<SwipeableDrawer\n\t\t\tanchor='left'\n\t\t\tkey=\"swipable-drawer\"\n\t\t\tclasses={{\n\t\t\t\troot: styles.navDrawerRoot,\n\t\t\t\tpaper: styles.navDrawerPaper\n\t\t\t}}\n\t\t\topen={showNavDrawer}\n\t\t\tonOpen={() => setShowNavDrawer(true)}\n\t\t\tonClose={() => setShowNavDrawer(false)}\n\t\t>\n\t\t\t<List key=\"main-list\">\n\t\t\t\t{navTreeData.reduce((acc, node) => {\n\t\t\t\t\tacc = acc.concat(renderNavNode(node));\n\t\t\t\t\treturn acc;\n\t\t\t\t}, [])}\n\t\t\t</List>\n\t\t</SwipeableDrawer>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tshowNavDrawer: state.appReducer.showNavDrawer \n\t};\n};\n\nexport default connect(mapStateToProps, {setShowNavDrawer})(NavDrawer);","/home/bbor/dev/origamiodyssey/src/layout/pages/ModelSelect.js",["164","165","166","167","168","169","170","171","172","173"],"/**\n * FILENAME: ModelSelect.js\n *\n * DESCRIPTION: This page allows the user to browse through cards, read details on models, and select one to fold.\n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useUpdate, useSpring, useSprings, animated, config } from 'react-spring';\n\nimport {\n\tDivider,\n\tTypography,\n\tCardMedia,\n\tCardActionArea,\n\tCardActions,\n\tCardContent,\n\tButton,\n\tCard,\n\tChip\n} from '@material-ui/core';\n\nimport useStyles from './../../style/theme';\nimport { Folds, Pages } from './../../infra/constants';\nimport { setLayoutState } from './../../infra/actions';\nconst AnimatedCard = animated(Card);\n\nexport const ModelSelect = props => {\n\tconst { layoutState, setLayoutState } = props;\n\tconst classes = useStyles();\n\n\t// ----------\n\t// STATE INIT\n\t// ----------\n\t// Used to track each \"placeholder\" element\t\n\t// const [cardRefs, setCardRefs] = useState([]);\n\n\t// Used to track which card is currently open\n\tconst [activeIndex, setActiveIndex] = useState(-1);\n\n\t// ----------------\n\t// MEMBER FUNCTIONS\n\t// ----------------\n\n\t/**\n\t * Reads the list of all cards, and decides which to include.\n\t * Note that this is likely to grow suddenly and quickly in complexity as soon as we start\n\t * including folds from other sources, or, god forbid, external REST sources.\n\t * @return an array of Fold objects - see constants.js for format\n\t */\n\tconst filterCardList = () => {\n\t\treturn Object.keys(Folds).filter(() => true);\n\t};\n\n\t/**\n\t * Handles a click on one of the cards - just prompts update and relies on hooks to do actual work.\n\t */\n\tconst handleCardClick = (event, index) => {\n\t\tsetActiveIndex(activeIndex === index ? -1 : index);\n\t};\n\n\t/**\n\t * Open the fold page with the supplied model name, closing this page.\n\t */\n\tconst openFold = foldKey => {\n\t\tsetLayoutState({\n\t\t\tpage: Pages.Fold,\n\t\t\tcurFold: foldKey\n\t\t});\n\t};\n\n\t/**\n\t * Recreate the refs array, reusing elements. Note that this algo doesn't support reordering\n\t */\n\t// const updateCardRefs = () => {\n\t// \tsetCardRefs(elRefs =>\n\t// \t\tArray(cardList.length)\n\t// \t\t\t.fill()\n\t// \t\t\t.map((el, i) => cardRefs[i] || createRef())\n\t// \t);\n\t// };\n\n\t/**\n\t * A subcomponent that displays one card. This component needs to grow and shrink without affecting html\n\t * layout styling, so it relies on a placeholder div that only suggests a shape to the actual, absolute, Card.\n\t */\n\tconst ModelCard = props => {\n\t\tconst { foldEntry, name, cardKey, index, isActive } = props;\n\t\tconst [posHash, setPosHash] = useState(0);\n\t\tconst ref = useRef();\n\n\t\t/**\n\t\t * Pass the click event on to the parent function to open a fold page.\n\t\t */\n\t\tconst handleFoldClick = e => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\n\t\t\topenFold(cardKey);\n\t\t};\n\n\t\t/**\n\t\t * Sub-subcomponent to show the label for a row on this card. This probably could be abstracted out, but it \n\t\t * doesn't seem worth it.\n\t\t */\n\t\tconst CardLabel = ({ text }) => (\n\t\t\t<React.Fragment>\n\t\t\t\t<Typography className={classes.modelCard_label} variant=\"body2\" color=\"textSecondary\" component=\"h4\">\n\t\t\t\t\t{text}\n\t\t\t\t</Typography>\n\t\t\t\t<Divider />\n\t\t\t</React.Fragment>\n\t\t);\n\n\t\t// INNER LIFECYCLE\n\n\t\t// Dynamically calculate the target size of the card\n\t\tconst style = useMemo(\n\t\t\t() => ({\n\t\t\t\theight: isActive ? '400px' : '180px',\n\t\t\t\twidth: isActive ? '400px' : '200px',\n\t\t\t\ttop: ref.current ? ref.current.offsetTop : 0,\n\t\t\t\tleft: ref.current ? ref.current.offsetLeft : 0\n\t\t\t}),\n\t\t\t[isActive, ref.current && ref.current.offsetTop, ref.current && ref.current.offsetLeft]\n\t\t);\n\n\t\t// Update hash when style changes so we can inform children\n\t\tuseEffect(() => setPosHash(cur => cur + 1), [style]);\n\n\t\t// Get the location of the current image using webpack  - probably only done once per card\n\t\tconst imagePath = useMemo(() => (layoutState.useImages ? require(`./../../static/${name}.png`) : undefined), [\n\t\t\tname,\n\t\t\tlayoutState.useImages\n\t\t]);\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{/* This is the \"anchor\" that positions the card, takes advantage of CSS */}\n\t\t\t\t<div ref={ref} className={classes.modelCard_placeholder} />\n\n\t\t\t\t{/* This is the actual card: an `absolute` element so it can grow or shrink in place without affecting others' positioning */}\n\t\t\t\t<Card\n\t\t\t\t\tclassName={`${classes.modelCard} ${isActive ? classes.modelCard__active : ''}`}\n\t\t\t\t\tname={index}\n\t\t\t\t\tonClick={event => handleCardClick(event, index)}\n\t\t\t\t\tstyle={style}\n\t\t\t\t>\n\t\t\t\t\t<CardActionArea\n\t\t\t\t\t\tclassName={`${classes.modelCard_rail_container} ${\n\t\t\t\t\t\t\tisActive ? classes.modelCard_rail_container__active : ''\n\t\t\t\t\t\t}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className={classes.modelCard_rail}>\n\t\t\t\t\t\t\t{/* Picture / Preview Model */}\n\t\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\t\tcomponent=\"img\"\n\t\t\t\t\t\t\t\talt={'Folded Model Picture'}\n\t\t\t\t\t\t\t\ttitle=\"Folded Model Picture\"\n\t\t\t\t\t\t\t\theight=\"120\"\n\t\t\t\t\t\t\t\timage={imagePath}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t{/* Title */}\n\t\t\t\t\t\t\t\t<Typography className={classes.modelCard_title} variant=\"h5\" component=\"h2\">\n\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t{/* Tags */}\n\t\t\t\t\t\t\t\t{props.isActive && (\n\t\t\t\t\t\t\t\t\t<div className={classes.tags} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\t\t\t\t\t\t\t\t\t\t{foldEntry.tags && foldEntry.tags.length\n\t\t\t\t\t\t\t\t\t\t\t? foldEntry.tags.map(({ name, category }, i) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={cardKey + '_' + name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclickable\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={category ? classes[`tags__${category}`] : undefined}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{/* Details rail */}\n\t\t\t\t\t\t{isActive && (\n\t\t\t\t\t\t\t<div className={classes.modelCard_rail}>\n\t\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t\t{props.isActive && (\n\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t{/* Attribution */}\n\t\t\t\t\t\t\t\t\t\t\t<CardLabel text=\"Creator\" />\n\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.modelCard_bodyText}\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{foldEntry.author}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t\t\t\t\t\t<CardLabel text=\"Description\" />\n\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.modelCard_bodyText}\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"p\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{foldEntry.description}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</CardActionArea>\n\n\t\t\t\t\t{/* Actions */}\n\t\t\t\t\t{isActive && (\n\t\t\t\t\t\t<CardActions classes={classes.modelCard_footer}>\n\t\t\t\t\t\t\t<Button size=\"small\" color=\"primary\">\n\t\t\t\t\t\t\t\tShare\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button size=\"small\" color=\"primary\">\n\t\t\t\t\t\t\t\tLearn More\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<div className={classes.modelCard_foldButton}>\n\t\t\t\t\t\t\t\t<Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={handleFoldClick}>\n\t\t\t\t\t\t\t\t\tFold\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t)}\n\t\t\t\t</Card>\n\t\t\t</React.Fragment>\n\t\t);\n\t};\n\n\t// ---------\n\t// LIFECYCLE\n\t// ---------\n\n\t// Get the list of all cards to display\n\tconst cardList = useMemo(filterCardList, []);\n\n\t// Update our list of refs for each card\n\t// useEffect(updateCardRefs, [cardList.length]);\n\n\treturn (\n\t\t<div className={classes.page_ModelSelect_container}>\n\t\t\t{cardList.map((cardKey, i) => (\n\t\t\t\t<ModelCard\n\t\t\t\t\tname={Folds[cardKey].name}\n\t\t\t\t\tkey={cardKey}\n\t\t\t\t\tcardKey={cardKey}\n\t\t\t\t\tfoldEntry={Folds[cardKey]}\n\t\t\t\t\tindex={i}\n\t\t\t\t\tisActive={activeIndex === i}\n\t\t\t\t\tshouldOpenFlipped={false}\n\t\t\t\t>\n\t\t\t\t\t<span> mainChild! </span>\n\t\t\t\t</ModelCard>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tlayoutState: state.appReducer.layoutState\n\t};\n};\n\nexport default connect(mapStateToProps, { setLayoutState })(ModelSelect);\n","/home/bbor/dev/origamiodyssey/src/layout/pages/FoldControls.js",["174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192"],"/**\n * FILENAME: FoldControls.js \n *\n * DESCRIPTION: These are piecemeal controls for the fold state. \n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useUpdate, useSpring, useSprings, animated, config }  from 'react-spring';\n\nimport { SwipeableDrawer, Button,  ButtonGroup, List, Divider, ListItem, Card } from '@material-ui/core';\nimport SkipPrevious from \"@material-ui/icons/SkipPrevious\";\nimport SkipNext from \"@material-ui/icons/SkipNext\";\n\nimport useStyles from \"./../../style/theme\";\nimport { Folds } from \"./../../infra/constants\";\nimport { setFoldState } from \"./../../infra/actions\";\n// const AnimatedCard = animated(Card);\n\nexport const FoldControls = props => {\n\tconst { windowHeight, foldState, foldStateHash, setFoldState } = props;\n\n\t// ----------\n\t// STATE INIT \n\t// ----------\n\tconst classes = useStyles();\n\tconst [cardRefs, setCardRefs] = useState([]);\n\tconst [curHash, setHash] = useState(0);\n\n\t// ----------------\n\t// MEMBER FUNCTIONS \n\t// ----------------\n\n\t// Changes the current instructional sequential step, prompting animation.\n\tconst changeStep = (delta) => {\n\t\tlet newStepIndex = Math.min(Math.max(foldState.stepIndex + delta, -1), foldState.maxSteps);\n\t\tsetFoldState({\n\t\t\tstepIndex: newStepIndex\n\t\t});\n\t};\n\n\tconst calcControlsPosition = () => {\n\t\treturn (window.innerWidth - 128) / 2;\n\t}\n\n\tconst triggerRerender = () => {\n\t\tsetHash(cur => cur + 1);\n\t};\n\n\t// ---------\n\t// LIFECYCLE\n\t// ---------\n\n\tconst buttonClasses = useMemo(() => ({\n\t\troot: classes.fold_controls_button,\n\t\tlabel: classes.fold_controls_button_label\n\t}), []);\n\n\t// Rerender whenever the page resizes\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"resize\", triggerRerender);\n\t}, []);\n\n\tconst ctrlLeft = useMemo(calcControlsPosition, [window.innerWidth]);\n\n    return (\n    \t<React.Fragment>\n\t\t\t<Card className={classes.fold_controls} style={{left: ctrlLeft}} >\n\t\t\t\t<ButtonGroup className={classes.fold_controls_button_container} color=\"primary\" variant=\"text\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclasses={buttonClasses}\n\t\t\t\t\t\tonClick={() => changeStep(-1)}\n\t\t\t\t\t\tdisabled={foldState.stepIndex < 0}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SkipPrevious className={classes.fold_controls_button_icon} />\n\t\t\t\t\t\tPrev\t\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclasses={buttonClasses}\n\t\t\t\t\t\tonClick={() => changeStep(1)}\n\t\t\t\t\t\tdisabled={foldState.stepIndex >= foldState.maxSteps - 1}\n\t\t\t\t\t>\n\t\t\t\t\t\t<SkipNext className={classes.fold_controls_button_icon} />\n\t\t\t\t\t\tNext\t\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n    \t\t</Card>\n    \t</React.Fragment>\n    );\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tfoldState: state.appReducer.foldState,\n\t\tfoldStateHash: state.appReducer.foldState.hash\n\t};\n};\n\nexport default connect(mapStateToProps, { setFoldState })(FoldControls);\n","/home/bbor/dev/origamiodyssey/src/layout/pages/User.js",["193","194","195","196","197","198","199","200","201","202","203","204","205","206"],"/**\n * FILENAME: User.js \n *\n * DESCRIPTION: This page allows the user to browser through cards, read details on models, and select one to fold. \n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useUpdate, useSpring, useSprings, animated, config }  from 'react-spring';\n\nimport { SwipeableDrawer, Button, List, Divider, ListItem, Card } from '@material-ui/core';\n\nimport useStyles from \"./../../style/theme\";\nimport { Folds } from \"./../../infra/constants\";\n// const AnimatedCard = animated(Card);\n\nexport const User = () => {\n\tconst classes = useStyles();\n\n\t// ----------\n\t// STATE INIT \n\t// ----------\n\tconst [cardRefs, setCardRefs] = useState([]);\n\n\t// ----------------\n\t// MEMBER FUNCTIONS \n\t// ----------------\n\n\tconst selectCardList = () => {\n\t\treturn Folds.filter(() => true);\n\t};\n\n\n\tconst createCard = () => {\n\n\t}\n\n\n\tconst updateCardRefs = () => {\n\t\t// Recreate the refs array, reusing elements. Note that this algo doesn't support reordering\n\t\tsetCardRefs(elRefs => (\n\t\t\tArray(cardList.length).fill().map((el, i) => cardRefs[i] || createRef())\n\t\t));\n\t};\n\n\n\t// ---------\n\t// LIFECYCLE\n\t// ---------\n\n\tconst cardList = useMemo(selectCardList, []);\n\n\tuseEffect(updateCardRefs, [cardList.length]);\n\n    return (\n        <div className={classes.User.container}>\n        </div>\n    );\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t};\n};\n\nexport default connect(mapStateToProps, {})(User);\n","/home/bbor/dev/origamiodyssey/src/static/lettering.js",[],"/home/bbor/dev/origamiodyssey/src/layout/pages/FoldEditorCards.js",["207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228"],"/**\n * FILENAME: FoldEditorCards.js\n *\n * DESCRIPTION: These cards are shown on either side of the model, and allow realtime editing of .fold files.\n */\n\n// React + Redux\nimport React, { useState, useRef, useMemo, useEffect, createRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useUpdate, useSpring, useSprings, animated, config } from 'react-spring';\nimport { JsonEditor } from 'jsoneditor-react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport Downloader from 'js-file-downloader';\n\nimport {\n\tButton,\n\tTypography,\n\tButtonGroup,\n\tChip,\n\tInput,\n\tSelect,\n\tMenuItem,\n\tGrid,\n\tList,\n\tDivider,\n\tListItem,\n\tCard\n} from '@material-ui/core';\nimport SkipPrevious from '@material-ui/icons/SkipPrevious';\nimport SkipNext from '@material-ui/icons/SkipNext';\nimport { ToggleButton } from '@material-ui/lab';\n\nimport useStyles from './../../style/theme';\nimport { Folds } from './../../infra/constants';\nimport { setFoldState, setEditorState } from './../../infra/actions';\n// const AnimatedCard = animated(Card);\n\nexport const FoldEditorCards = props => {\n\tconst {\n\t\tcurFold,\n\t\tinitFold,\n\t\tfoldLastUpdated,\n\t\twindowHeight,\n\t\tfoldOverrideCallback,\n\t\tfoldState,\n\t\tfoldStateHash,\n\t\tsetFoldState,\n\t\teditorState,\n\t\teditorStateHash,\n\t\tsetEditorState\n\t} = props;\n\n\t// ----------\n\t// STATE INIT\n\t// ----------\n\tconst classes = useStyles();\n\tconst [curHash, setHash] = useState(0);\n\tconst localFold = useRef();\n\n\t// ----------------\n\t// MEMBER FUNCTIONS\n\t// ----------------\n\tconst calcControlsPosition = () => {\n\t\treturn (window.innerWidth - 128) / 2;\n\t};\n\n\tconst CardLabel = ({ text }) => (\n\t\t<React.Fragment>\n\t\t\t<Typography className={classes.modelCard_label} variant=\"body2\" color=\"textSecondary\" component=\"h4\">\n\t\t\t\t{text}\n\t\t\t</Typography>\n\t\t\t<Divider />\n\t\t</React.Fragment>\n\t);\n\n\tconst ControlRow = ({ name, text, width, children }) => (\n\t\t<Grid item xs={width || 12} className={classes.editor_row}>\n\t\t\t{/* Title */}\n\t\t\t<CardLabel text={name} />\n\t\t\t{text !== undefined && (\n\t\t\t\t<Typography className={classes.editor_bodyText} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\t\t\t\t\t<strong>{text}</strong>\n\t\t\t\t</Typography>\n\t\t\t)}\n\n\t\t\t{children}\n\t\t</Grid>\n\t);\n\n\tconst resetLocalFold = () => {\n\t\tconsole.log('[resetLocalFold]', initFold);\n\t\tlocalFold.current = JSON.parse(JSON.stringify(initFold));\n\t};\n\n\tconst handleFoldChange = e => {\n\t\tObject.assign(localFold.current, e);\n\t};\n\n\tconst handleSaveClick = () => {\n\t\tif (!localFold.current || !curFold) {\n\t\t\tconsole.error(\"Couldn't save file; no current value.\");\n\t\t\treturn;\n\t\t}\n\n\t\tfoldOverrideCallback(localFold.current);\n\t};\n\n\tconst handleExportClick = async () => {\n\t\tif (!localFold.current || !curFold) {\n\t\t\tconsole.error(\"Couldn't export file; no current value.\");\n\t\t\treturn;\n\t\t}\n\n\t\tlet fileDownloadUrl = `data:application/json,${encodeURIComponent(JSON.stringify(localFold.current, null, 2))}`;\n\t\t// fileDownloadUrl = URL.createObjectURL(fileDownloadUrl)\n\n\t\tnew Downloader({\n\t\t\turl: fileDownloadUrl,\n\t\t\tfilename: `${curFold}.json`\n\t\t}).then(() => {\n\t\t\tconsole.log('finished download.');\n\t\t});\n\t};\n\n\tconst handleEditorFormChange = (field, value) => {\n\t\tsetEditorState({ [field]: value });\n\t};\n\n\tconst handleSelectionChange = event => {\n\t\tconsole.log('GOT EVENT! ', event.target);\n\t\tconst field = event.target.name;\n\t\tconst value = event.target.value;\n\n\t\tsetEditorState({ [field]: value });\n\t};\n\n\t// ---------\n\t// LIFECYCLE\n\t// ---------\n\tconst buttonClasses = useMemo(\n\t\t() => ({\n\t\t\troot: classes.fold_controls_button,\n\t\t\tlabel: classes.fold_controls_button_label\n\t\t}),\n\t\t[]\n\t);\n\n\tuseEffect(resetLocalFold, [initFold]);\n\n\tconst ctrlLeft = useMemo(calcControlsPosition, [window.innerWidth]);\n\n\t// If we don't have any fold file loaded yet, don't show these\n\tif (!initFold) {\n\t\treturn <div />;\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{/* Details on the fold state */}\n\t\t\t<Card className={classes.editorState}>\n\t\t\t\t<Typography className={classes.editor_cardTitle} variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n\t\t\t\t\tFold State\n\t\t\t\t</Typography>\n\t\t\t\t<Grid container>\n\t\t\t\t\t<ControlRow name=\"Selected Level\" text={foldState.selectedLevel} width={6} />\n\t\t\t\t\t<ControlRow name=\"Step Index\" text={`${foldState.stepIndex}/${foldState.maxSteps - 1}`} width={6} />\n\t\t\t\t</Grid>\n\t\t\t</Card>\n\n\t\t\t{/* Details on the current instruction */}\n\t\t\t<Card className={classes.editorDetails}>\n\t\t\t\t<Typography className={classes.editor_cardTitle} variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n\t\t\t\t\tEditor Controls\n\t\t\t\t</Typography>\n\t\t\t\t<Grid container>\n\t\t\t\t\t<ControlRow name=\"Highlighted Edges\">\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tname=\"edgeHighlights\"\n\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\tvalue={editorState.edgeHighlights}\n\t\t\t\t\t\t\tonChange={handleSelectionChange}\n\t\t\t\t\t\t\tinput={<Input id=\"select-multiple-chip\" />}\n\t\t\t\t\t\t\trenderValue={selected => (\n\t\t\t\t\t\t\t\t<div className={classes.chips}>\n\t\t\t\t\t\t\t\t\t{selected.map(idx => (\n\t\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\t\t\tlabel={initFold.edges_vertices[idx].toString()}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tclassName={classes.editor_select}\n\t\t\t\t\t\t\t// MenuProps={MenuProps}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{initFold.edges_vertices.map((edge, index) => {\n\t\t\t\t\t\t\t\tconst name = edge.toString();\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<MenuItem key={name} value={index}>\n\t\t\t\t\t\t\t\t\t\t{index}: {name}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"vertexHighlights\">\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tname=\"vertexHighlights\"\n\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\tvalue={editorState.vertexHighlights}\n\t\t\t\t\t\t\tonChange={handleSelectionChange}\n\t\t\t\t\t\t\tinput={<Input id=\"select-multiple-chip\" />}\n\t\t\t\t\t\t\trenderValue={selected => (\n\t\t\t\t\t\t\t\t<div className={classes.chips}>\n\t\t\t\t\t\t\t\t\t{selected.map(idx => (\n\t\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\t\t\tlabel={`${idx}: ${initFold.vertices_coords[idx].toString()}`}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tclassName={classes.editor_select}\n\t\t\t\t\t\t\t// MenuProps={MenuProps}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{initFold.vertices_coords.map((coords, index) => {\n\t\t\t\t\t\t\t\tconst name = coords.toString();\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<MenuItem key={name} value={index}>\n\t\t\t\t\t\t\t\t\t\t{index}: {name}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"faceHighlights\">\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tname=\"faceHighlights\"\n\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\tvalue={editorState.faceHighlights}\n\t\t\t\t\t\t\tonChange={handleSelectionChange}\n\t\t\t\t\t\t\tinput={<Input id=\"select-multiple-chip\" />}\n\t\t\t\t\t\t\trenderValue={selected => (\n\t\t\t\t\t\t\t\t<div className={classes.chips}>\n\t\t\t\t\t\t\t\t\t{selected.map(idx => (\n\t\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\t\t\tlabel={`${idx}: ${initFold.faces_vertices[idx].toString()}`}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tclassName={classes.editor_select}\n\t\t\t\t\t\t\t// MenuProps={MenuProps}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{initFold.faces_vertices.map((face, index) => {\n\t\t\t\t\t\t\t\tconst name = face.toString();\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<MenuItem key={name} value={index}>\n\t\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"Show Edges\" width={4}>\n\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\tselected={editorState.showEdges}\n\t\t\t\t\t\t\tonChange={() => handleEditorFormChange('showEdges', !editorState.showEdges)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"Show Vertices\" width={4}>\n\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\tselected={editorState.showVertices}\n\t\t\t\t\t\t\tonChange={() => handleEditorFormChange('showVertices', !editorState.showVertices)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"Show Faces\" width={4}>\n\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\tselected={editorState.showFaces}\n\t\t\t\t\t\t\tonChange={() => handleEditorFormChange('showFaces', !editorState.showFaces)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t\t<ControlRow name=\"Show Triangulations\" width={4}>\n\t\t\t\t\t\t<ToggleButton\n\t\t\t\t\t\t\tselected={editorState.showTriangulations}\n\t\t\t\t\t\t\tonChange={() =>\n\t\t\t\t\t\t\t\thandleEditorFormChange('showTriangulations', !editorState.showTriangulations)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ControlRow>\n\t\t\t\t</Grid>\n\t\t\t</Card>\n\n\t\t\t{/* Entry box for direct JSON manipulation */}\n\t\t\t<Card className={classes.editorEntry}>\n\t\t\t\t<Typography className={classes.editor_cardTitle} variant=\"h4\" color=\"textSecondary\" component=\"h4\">\n\t\t\t\t\t<code>.fold</code> file\n\t\t\t\t</Typography>\n\t\t\t\t<ButtonGroup className={classes.editor_floatAction} color=\"primary\" variant=\"text\" size=\"large\">\n\t\t\t\t\t<Button onClick={handleSaveClick}> Local Save </Button>\n\t\t\t\t\t<Button onClick={handleExportClick}> Export To Disk </Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t\t<JsonEditor\n\t\t\t\t\tvalue={{\n\t\t\t\t\t\tfaces_vertices: initFold.faces_vertices,\n\t\t\t\t\t\tvertices_coords: initFold.vertices_coords,\n\t\t\t\t\t\tedges_vertices: initFold.edges_vertices,\n\t\t\t\t\t\tinstructions: initFold.instructions\n\t\t\t\t\t}}\n\t\t\t\t\tonChange={handleFoldChange}\n\t\t\t\t\thtmlElementProps={{ class: classes.editor_jsonTextArea }}\n\t\t\t\t\tallowedModes={['tree', 'form']}\n\t\t\t\t\tnavigationBar={false}\n\t\t\t\t\thistory={true}\n\t\t\t\t/>\n\t\t\t</Card>\n\t\t</React.Fragment>\n\t);\n};\n\nexport const mapStateToProps = (state, props) => {\n\treturn {\n\t\tfoldState: state.appReducer.foldState,\n\t\tfoldStateHash: state.appReducer.foldState.hash,\n\t\teditorState: state.appReducer.editorState,\n\t\teditorStateHash: state.appReducer.editorState.hash\n\t};\n};\n\nexport default connect(mapStateToProps, { setFoldState, setEditorState })(FoldEditorCards);\n",{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":8,"column":35,"nodeType":"235","messageId":"236","endLine":8,"endColumn":42},{"ruleId":"233","severity":1,"message":"237","line":8,"column":44,"nodeType":"235","messageId":"236","endLine":8,"endColumn":53},{"ruleId":"233","severity":1,"message":"238","line":13,"column":2,"nodeType":"235","messageId":"236","endLine":13,"endColumn":19},{"ruleId":"233","severity":1,"message":"239","line":16,"column":2,"nodeType":"235","messageId":"236","endLine":16,"endColumn":12},{"ruleId":"233","severity":1,"message":"240","line":32,"column":19,"nodeType":"235","messageId":"236","endLine":32,"endColumn":30},{"ruleId":"233","severity":1,"message":"241","line":35,"column":8,"nodeType":"235","messageId":"236","endLine":35,"endColumn":12},{"ruleId":"233","severity":1,"message":"242","line":42,"column":8,"nodeType":"235","messageId":"236","endLine":42,"endColumn":23},{"ruleId":"243","severity":1,"message":"244","line":66,"column":6,"nodeType":"245","endLine":71,"endColumn":8},{"ruleId":"233","severity":1,"message":"246","line":11,"column":10,"nodeType":"235","messageId":"236","endLine":11,"endColumn":25},{"ruleId":"233","severity":1,"message":"247","line":11,"column":27,"nodeType":"235","messageId":"236","endLine":11,"endColumn":33},{"ruleId":"233","severity":1,"message":"248","line":11,"column":35,"nodeType":"235","messageId":"236","endLine":11,"endColumn":39},{"ruleId":"233","severity":1,"message":"249","line":11,"column":41,"nodeType":"235","messageId":"236","endLine":11,"endColumn":48},{"ruleId":"233","severity":1,"message":"250","line":11,"column":50,"nodeType":"235","messageId":"236","endLine":11,"endColumn":58},{"ruleId":"233","severity":1,"message":"251","line":12,"column":8,"nodeType":"235","messageId":"236","endLine":12,"endColumn":20},{"ruleId":"233","severity":1,"message":"252","line":13,"column":8,"nodeType":"235","messageId":"236","endLine":13,"endColumn":20},{"ruleId":"233","severity":1,"message":"253","line":14,"column":8,"nodeType":"235","messageId":"236","endLine":14,"endColumn":22},{"ruleId":"233","severity":1,"message":"254","line":15,"column":8,"nodeType":"235","messageId":"236","endLine":15,"endColumn":25},{"ruleId":"233","severity":1,"message":"255","line":18,"column":24,"nodeType":"235","messageId":"236","endLine":18,"endColumn":35},{"ruleId":"233","severity":1,"message":"256","line":31,"column":3,"nodeType":"235","messageId":"236","endLine":31,"endColumn":18},{"ruleId":"233","severity":1,"message":"257","line":34,"column":3,"nodeType":"235","messageId":"236","endLine":34,"endColumn":16},{"ruleId":"233","severity":1,"message":"258","line":37,"column":3,"nodeType":"235","messageId":"236","endLine":37,"endColumn":18},{"ruleId":"259","severity":1,"message":"260","line":150,"column":5,"nodeType":"261","endLine":150,"endColumn":7,"suggestions":"262"},{"ruleId":"259","severity":1,"message":"263","line":154,"column":5,"nodeType":"261","endLine":154,"endColumn":57,"suggestions":"264"},{"ruleId":"259","severity":1,"message":"265","line":157,"column":24,"nodeType":"261","endLine":157,"endColumn":45,"suggestions":"266"},{"ruleId":"259","severity":1,"message":"267","line":163,"column":5,"nodeType":"261","endLine":163,"endColumn":14,"suggestions":"268"},{"ruleId":"259","severity":1,"message":"269","line":166,"column":45,"nodeType":"261","endLine":166,"endColumn":77,"suggestions":"270"},{"ruleId":"233","severity":1,"message":"271","line":8,"column":17,"nodeType":"235","messageId":"236","endLine":8,"endColumn":25},{"ruleId":"233","severity":1,"message":"272","line":8,"column":27,"nodeType":"235","messageId":"236","endLine":8,"endColumn":33},{"ruleId":"233","severity":1,"message":"234","line":8,"column":35,"nodeType":"235","messageId":"236","endLine":8,"endColumn":42},{"ruleId":"233","severity":1,"message":"237","line":8,"column":44,"nodeType":"235","messageId":"236","endLine":8,"endColumn":53},{"ruleId":"273","severity":1,"message":"274","line":12,"column":8,"nodeType":"275","messageId":"276","endLine":12,"endColumn":11},{"ruleId":"229","replacedBy":"277"},{"ruleId":"231","replacedBy":"278"},{"ruleId":"233","severity":1,"message":"271","line":7,"column":17,"nodeType":"235","messageId":"236","endLine":7,"endColumn":25},{"ruleId":"233","severity":1,"message":"272","line":7,"column":27,"nodeType":"235","messageId":"236","endLine":7,"endColumn":33},{"ruleId":"233","severity":1,"message":"234","line":7,"column":35,"nodeType":"235","messageId":"236","endLine":7,"endColumn":42},{"ruleId":"233","severity":1,"message":"237","line":7,"column":44,"nodeType":"235","messageId":"236","endLine":7,"endColumn":53},{"ruleId":"233","severity":1,"message":"234","line":8,"column":35,"nodeType":"235","messageId":"236","endLine":8,"endColumn":42},{"ruleId":"233","severity":1,"message":"237","line":8,"column":44,"nodeType":"235","messageId":"236","endLine":8,"endColumn":53},{"ruleId":"233","severity":1,"message":"279","line":12,"column":38,"nodeType":"235","messageId":"236","endLine":12,"endColumn":47},{"ruleId":"233","severity":1,"message":"280","line":17,"column":10,"nodeType":"235","messageId":"236","endLine":17,"endColumn":19},{"ruleId":"233","severity":1,"message":"281","line":17,"column":21,"nodeType":"235","messageId":"236","endLine":17,"endColumn":30},{"ruleId":"233","severity":1,"message":"282","line":17,"column":32,"nodeType":"235","messageId":"236","endLine":17,"endColumn":42},{"ruleId":"233","severity":1,"message":"283","line":17,"column":44,"nodeType":"235","messageId":"236","endLine":17,"endColumn":52},{"ruleId":"233","severity":1,"message":"284","line":17,"column":54,"nodeType":"235","messageId":"236","endLine":17,"endColumn":60},{"ruleId":"233","severity":1,"message":"285","line":21,"column":10,"nodeType":"235","messageId":"236","endLine":21,"endColumn":15},{"ruleId":"233","severity":1,"message":"286","line":65,"column":37,"nodeType":"235","messageId":"236","endLine":65,"endColumn":46},{"ruleId":"233","severity":1,"message":"256","line":65,"column":61,"nodeType":"235","messageId":"236","endLine":65,"endColumn":76},{"ruleId":"287","severity":1,"message":"288","line":14,"column":2,"nodeType":"289","messageId":"290","endLine":34,"endColumn":3},{"ruleId":"291","severity":1,"message":"292","line":87,"column":3,"nodeType":"293","messageId":"276","endLine":87,"endColumn":8},{"ruleId":"233","severity":1,"message":"294","line":11,"column":10,"nodeType":"235","messageId":"236","endLine":11,"endColumn":16},{"ruleId":"233","severity":1,"message":"295","line":11,"column":28,"nodeType":"235","messageId":"236","endLine":11,"endColumn":36},{"ruleId":"233","severity":1,"message":"279","line":11,"column":38,"nodeType":"235","messageId":"236","endLine":11,"endColumn":47},{"ruleId":"233","severity":1,"message":"296","line":11,"column":49,"nodeType":"235","messageId":"236","endLine":11,"endColumn":55},{"ruleId":"233","severity":1,"message":"281","line":16,"column":13,"nodeType":"235","messageId":"236","endLine":16,"endColumn":22},{"ruleId":"233","severity":1,"message":"297","line":24,"column":3,"nodeType":"235","messageId":"236","endLine":24,"endColumn":11},{"ruleId":"233","severity":1,"message":"298","line":25,"column":3,"nodeType":"235","messageId":"236","endLine":25,"endColumn":8},{"ruleId":"233","severity":1,"message":"299","line":29,"column":3,"nodeType":"235","messageId":"236","endLine":29,"endColumn":18},{"ruleId":"233","severity":1,"message":"257","line":32,"column":3,"nodeType":"235","messageId":"236","endLine":32,"endColumn":16},{"ruleId":"233","severity":1,"message":"258","line":35,"column":3,"nodeType":"235","messageId":"236","endLine":35,"endColumn":18},{"ruleId":"233","severity":1,"message":"300","line":41,"column":9,"nodeType":"235","messageId":"236","endLine":41,"endColumn":21},{"ruleId":"233","severity":1,"message":"301","line":41,"column":23,"nodeType":"235","messageId":"236","endLine":41,"endColumn":38},{"ruleId":"233","severity":1,"message":"302","line":44,"column":8,"nodeType":"235","messageId":"236","endLine":44,"endColumn":16},{"ruleId":"233","severity":1,"message":"303","line":46,"column":8,"nodeType":"235","messageId":"236","endLine":46,"endColumn":21},{"ruleId":"259","severity":1,"message":"304","line":604,"column":50,"nodeType":"261","endLine":608,"endColumn":3,"suggestions":"305"},{"ruleId":"259","severity":1,"message":"306","line":605,"column":3,"nodeType":"307","endLine":605,"endColumn":46},{"ruleId":"259","severity":1,"message":"308","line":609,"column":33,"nodeType":"261","endLine":609,"endColumn":54,"suggestions":"309"},{"ruleId":"259","severity":1,"message":"310","line":610,"column":27,"nodeType":"261","endLine":610,"endColumn":54,"suggestions":"311"},{"ruleId":"233","severity":1,"message":"272","line":8,"column":27,"nodeType":"235","messageId":"236","endLine":8,"endColumn":33},{"ruleId":"233","severity":1,"message":"234","line":8,"column":35,"nodeType":"235","messageId":"236","endLine":8,"endColumn":42},{"ruleId":"233","severity":1,"message":"237","line":8,"column":44,"nodeType":"235","messageId":"236","endLine":8,"endColumn":53},{"ruleId":"233","severity":1,"message":"247","line":11,"column":27,"nodeType":"235","messageId":"236","endLine":11,"endColumn":33},{"ruleId":"233","severity":1,"message":"249","line":11,"column":41,"nodeType":"235","messageId":"236","endLine":11,"endColumn":48},{"ruleId":"233","severity":1,"message":"312","line":18,"column":28,"nodeType":"235","messageId":"236","endLine":18,"endColumn":42},{"ruleId":"233","severity":1,"message":"313","line":22,"column":10,"nodeType":"235","messageId":"236","endLine":22,"endColumn":14},{"ruleId":"233","severity":1,"message":"314","line":8,"column":55,"nodeType":"235","messageId":"236","endLine":8,"endColumn":64},{"ruleId":"233","severity":1,"message":"280","line":11,"column":10,"nodeType":"235","messageId":"236","endLine":11,"endColumn":19},{"ruleId":"233","severity":1,"message":"281","line":11,"column":21,"nodeType":"235","messageId":"236","endLine":11,"endColumn":30},{"ruleId":"233","severity":1,"message":"282","line":11,"column":32,"nodeType":"235","messageId":"236","endLine":11,"endColumn":42},{"ruleId":"233","severity":1,"message":"284","line":11,"column":54,"nodeType":"235","messageId":"236","endLine":11,"endColumn":60},{"ruleId":"233","severity":1,"message":"315","line":28,"column":7,"nodeType":"235","messageId":"236","endLine":28,"endColumn":19},{"ruleId":"233","severity":1,"message":"316","line":91,"column":10,"nodeType":"235","messageId":"236","endLine":91,"endColumn":17},{"ruleId":"259","severity":1,"message":"306","line":127,"column":15,"nodeType":"307","endLine":127,"endColumn":51},{"ruleId":"259","severity":1,"message":"306","line":127,"column":53,"nodeType":"307","endLine":127,"endColumn":90},{"ruleId":"259","severity":1,"message":"317","line":134,"column":112,"nodeType":"261","endLine":137,"endColumn":4,"suggestions":"318"},{"ruleId":"233","severity":1,"message":"272","line":8,"column":27,"nodeType":"235","messageId":"236","endLine":8,"endColumn":33},{"ruleId":"233","severity":1,"message":"314","line":8,"column":55,"nodeType":"235","messageId":"236","endLine":8,"endColumn":64},{"ruleId":"233","severity":1,"message":"280","line":11,"column":10,"nodeType":"235","messageId":"236","endLine":11,"endColumn":19},{"ruleId":"233","severity":1,"message":"281","line":11,"column":21,"nodeType":"235","messageId":"236","endLine":11,"endColumn":30},{"ruleId":"233","severity":1,"message":"282","line":11,"column":32,"nodeType":"235","messageId":"236","endLine":11,"endColumn":42},{"ruleId":"233","severity":1,"message":"283","line":11,"column":44,"nodeType":"235","messageId":"236","endLine":11,"endColumn":52},{"ruleId":"233","severity":1,"message":"284","line":11,"column":54,"nodeType":"235","messageId":"236","endLine":11,"endColumn":60},{"ruleId":"233","severity":1,"message":"246","line":13,"column":10,"nodeType":"235","messageId":"236","endLine":13,"endColumn":25},{"ruleId":"233","severity":1,"message":"248","line":13,"column":49,"nodeType":"235","messageId":"236","endLine":13,"endColumn":53},{"ruleId":"233","severity":1,"message":"249","line":13,"column":55,"nodeType":"235","messageId":"236","endLine":13,"endColumn":62},{"ruleId":"233","severity":1,"message":"250","line":13,"column":64,"nodeType":"235","messageId":"236","endLine":13,"endColumn":72},{"ruleId":"233","severity":1,"message":"285","line":18,"column":10,"nodeType":"235","messageId":"236","endLine":18,"endColumn":15},{"ruleId":"233","severity":1,"message":"319","line":23,"column":10,"nodeType":"235","messageId":"236","endLine":23,"endColumn":22},{"ruleId":"233","severity":1,"message":"257","line":23,"column":35,"nodeType":"235","messageId":"236","endLine":23,"endColumn":48},{"ruleId":"233","severity":1,"message":"320","line":29,"column":9,"nodeType":"235","messageId":"236","endLine":29,"endColumn":17},{"ruleId":"233","severity":1,"message":"321","line":29,"column":19,"nodeType":"235","messageId":"236","endLine":29,"endColumn":30},{"ruleId":"233","severity":1,"message":"322","line":30,"column":9,"nodeType":"235","messageId":"236","endLine":30,"endColumn":16},{"ruleId":"259","severity":1,"message":"323","line":59,"column":6,"nodeType":"261","endLine":59,"endColumn":8,"suggestions":"324"},{"ruleId":"259","severity":1,"message":"325","line":66,"column":49,"nodeType":"261","endLine":66,"endColumn":68,"suggestions":"326"},{"ruleId":"233","severity":1,"message":"272","line":8,"column":27,"nodeType":"235","messageId":"236","endLine":8,"endColumn":33},{"ruleId":"233","severity":1,"message":"280","line":11,"column":10,"nodeType":"235","messageId":"236","endLine":11,"endColumn":19},{"ruleId":"233","severity":1,"message":"281","line":11,"column":21,"nodeType":"235","messageId":"236","endLine":11,"endColumn":30},{"ruleId":"233","severity":1,"message":"282","line":11,"column":32,"nodeType":"235","messageId":"236","endLine":11,"endColumn":42},{"ruleId":"233","severity":1,"message":"283","line":11,"column":44,"nodeType":"235","messageId":"236","endLine":11,"endColumn":52},{"ruleId":"233","severity":1,"message":"284","line":11,"column":54,"nodeType":"235","messageId":"236","endLine":11,"endColumn":60},{"ruleId":"233","severity":1,"message":"246","line":13,"column":10,"nodeType":"235","messageId":"236","endLine":13,"endColumn":25},{"ruleId":"233","severity":1,"message":"247","line":13,"column":27,"nodeType":"235","messageId":"236","endLine":13,"endColumn":33},{"ruleId":"233","severity":1,"message":"248","line":13,"column":35,"nodeType":"235","messageId":"236","endLine":13,"endColumn":39},{"ruleId":"233","severity":1,"message":"249","line":13,"column":41,"nodeType":"235","messageId":"236","endLine":13,"endColumn":48},{"ruleId":"233","severity":1,"message":"250","line":13,"column":50,"nodeType":"235","messageId":"236","endLine":13,"endColumn":58},{"ruleId":"233","severity":1,"message":"327","line":13,"column":60,"nodeType":"235","messageId":"236","endLine":13,"endColumn":64},{"ruleId":"233","severity":1,"message":"328","line":36,"column":8,"nodeType":"235","messageId":"236","endLine":36,"endColumn":18},{"ruleId":"259","severity":1,"message":"329","line":55,"column":28,"nodeType":"261","endLine":55,"endColumn":45,"suggestions":"330"},{"ruleId":"233","severity":1,"message":"314","line":8,"column":55,"nodeType":"235","messageId":"236","endLine":8,"endColumn":64},{"ruleId":"233","severity":1,"message":"280","line":11,"column":10,"nodeType":"235","messageId":"236","endLine":11,"endColumn":19},{"ruleId":"233","severity":1,"message":"281","line":11,"column":21,"nodeType":"235","messageId":"236","endLine":11,"endColumn":30},{"ruleId":"233","severity":1,"message":"282","line":11,"column":32,"nodeType":"235","messageId":"236","endLine":11,"endColumn":42},{"ruleId":"233","severity":1,"message":"283","line":11,"column":44,"nodeType":"235","messageId":"236","endLine":11,"endColumn":52},{"ruleId":"233","severity":1,"message":"284","line":11,"column":54,"nodeType":"235","messageId":"236","endLine":11,"endColumn":60},{"ruleId":"233","severity":1,"message":"248","line":25,"column":2,"nodeType":"235","messageId":"236","endLine":25,"endColumn":6},{"ruleId":"233","severity":1,"message":"250","line":27,"column":2,"nodeType":"235","messageId":"236","endLine":27,"endColumn":10},{"ruleId":"233","severity":1,"message":"331","line":30,"column":8,"nodeType":"235","messageId":"236","endLine":30,"endColumn":20},{"ruleId":"233","severity":1,"message":"332","line":31,"column":8,"nodeType":"235","messageId":"236","endLine":31,"endColumn":16},{"ruleId":"233","severity":1,"message":"285","line":35,"column":10,"nodeType":"235","messageId":"236","endLine":35,"endColumn":15},{"ruleId":"233","severity":1,"message":"299","line":43,"column":3,"nodeType":"235","messageId":"236","endLine":43,"endColumn":18},{"ruleId":"233","severity":1,"message":"319","line":44,"column":3,"nodeType":"235","messageId":"236","endLine":44,"endColumn":15},{"ruleId":"233","severity":1,"message":"257","line":47,"column":3,"nodeType":"235","messageId":"236","endLine":47,"endColumn":16},{"ruleId":"233","severity":1,"message":"333","line":48,"column":3,"nodeType":"235","messageId":"236","endLine":48,"endColumn":15},{"ruleId":"233","severity":1,"message":"258","line":50,"column":3,"nodeType":"235","messageId":"236","endLine":50,"endColumn":18},{"ruleId":"233","severity":1,"message":"322","line":58,"column":9,"nodeType":"235","messageId":"236","endLine":58,"endColumn":16},{"ruleId":"233","severity":1,"message":"334","line":58,"column":18,"nodeType":"235","messageId":"236","endLine":58,"endColumn":25},{"ruleId":"233","severity":1,"message":"335","line":141,"column":8,"nodeType":"235","messageId":"236","endLine":141,"endColumn":21},{"ruleId":"259","severity":1,"message":"323","line":146,"column":3,"nodeType":"261","endLine":146,"endColumn":5,"suggestions":"336"},{"ruleId":"233","severity":1,"message":"337","line":151,"column":8,"nodeType":"235","messageId":"236","endLine":151,"endColumn":16},{"ruleId":"259","severity":1,"message":"325","line":151,"column":49,"nodeType":"261","endLine":151,"endColumn":68,"suggestions":"338"},"no-native-reassign",["339"],"no-negated-in-lhs",["340"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'ClickAwayListener' is defined but never used.","'Typography' is defined but never used.","'setShowMenu' is assigned a value but never used.","'fold' is assigned a value but never used.","'handleClickAway' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SwipeableDrawer' is defined but never used.","'Button' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'ArrowRightIcon' is defined but never used.","'ArrowDropDownIcon' is defined but never used.","'initNavTree' is defined but never used.","'layoutStateHash' is assigned a value but never used.","'foldStateHash' is assigned a value but never used.","'editorStateHash' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchStateFromCookies' and 'saveStateToCookies'. Either include them or remove the dependency array.","ArrayExpression",["341"],"React Hook useEffect has a missing dependency: 'saveStateToCookies'. Either include it or remove the dependency array.",["342"],"React Hook useEffect has a missing dependency: 'layoutState'. Either include it or remove the dependency array.",["343"],"React Hook useMemo has an unnecessary dependency: 'curHash'. Either exclude it or remove the dependency array.",["344"],"React Hook useMemo has missing dependencies: 'foldOverrideCallback', 'layoutState.curFold', and 'layoutState.showEditor'. Either include them or remove the dependency array.",["345"],"'useState' is defined but never used.","'useRef' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["339"],["340"],"'useLoader' is defined but never used.","'useUpdate' is defined but never used.","'useSpring' is defined but never used.","'useSprings' is defined but never used.","'animated' is defined but never used.","'config' is defined but never used.","'Folds' is defined but never used.","'paperSize' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","'Canvas' is defined but never used.","'useThree' is defined but never used.","'extend' is defined but never used.","'position' is assigned a value but never used.","'scale' is assigned a value but never used.","'foldLastUpdated' is assigned a value but never used.","'instructions' is assigned a value but never used.","'setInstructions' is assigned a value but never used.","'rotation' is assigned a value but never used.","'edgeRotations' is assigned a value but never used.","React Hook useMemo has an unnecessary dependency: 'foldKey'. Either exclude it or remove the dependency array.",["346"],"React Hook useMemo has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","React Hook useEffect has missing dependencies: 'foldState.maxSteps', 'performCommands', 'prevStep', and 'stepArray'. Either include them or remove the dependency array.",["347"],"React Hook useEffect has missing dependencies: 'initFold', 'readInstructionsIntoState', 'setFoldObj', and 'setFoldState'. Either include them or remove the dependency array.",["348"],"'setLayoutState' is defined but never used.","'page' is assigned a value but never used.","'createRef' is defined but never used.","'AnimatedCard' is assigned a value but never used.","'posHash' is assigned a value but never used.","React Hook useMemo has an unnecessary dependency: 'layoutState.useImages'. Either exclude it or remove the dependency array. Outer scope values like 'layoutState.useImages' aren't valid dependencies because mutating them doesn't re-render the component.",["349"],"'windowHeight' is assigned a value but never used.","'cardRefs' is assigned a value but never used.","'setCardRefs' is assigned a value but never used.","'curHash' is assigned a value but never used.","React Hook useMemo has missing dependencies: 'classes.fold_controls_button' and 'classes.fold_controls_button_label'. Either include them or remove the dependency array.",["350"],"React Hook useMemo has an unnecessary dependency: 'window.innerWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.innerWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["351"],"'Card' is defined but never used.","'createCard' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'cardRefs'. Either include it or remove the dependency array. You can also do a functional update 'setCardRefs(c => ...)' if you only need 'cardRefs' in the 'setCardRefs' call.",["352"],"'SkipPrevious' is defined but never used.","'SkipNext' is defined but never used.","'setFoldState' is assigned a value but never used.","'setHash' is assigned a value but never used.","'buttonClasses' is assigned a value but never used.",["353"],"'ctrlLeft' is assigned a value but never used.",["354"],"no-global-assign","no-unsafe-negation",{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"361","fix":"375"},{"desc":"376","fix":"377"},{"desc":"373","fix":"378"},{"desc":"361","fix":"379"},"Update the dependencies array to be: [fetchStateFromCookies, saveStateToCookies]",{"range":"380","text":"381"},"Update the dependencies array to be: [layoutState.hash, foldState.hash, editorState.hash, saveStateToCookies]",{"range":"382","text":"383"},"Update the dependencies array to be: [layoutState, layoutState.curFold]",{"range":"384","text":"385"},"Update the dependencies array to be: []",{"range":"386","text":"387"},"Update the dependencies array to be: [foldOverrideCallback, layoutState.curFold, layoutState.page, layoutState.showEditor, windowHeight]",{"range":"388","text":"389"},"Update the dependencies array to be: [foldState.selectedLevel]",{"range":"390","text":"391"},"Update the dependencies array to be: [foldState.maxSteps, foldState.stepIndex, performCommands, prevStep, stepArray]",{"range":"392","text":"393"},"Update the dependencies array to be: [foldKey, initFold, readInstructionsIntoState, setFoldObj, setFoldState, stepArray.length]",{"range":"394","text":"395"},"Update the dependencies array to be: [name]",{"range":"396","text":"397"},"Update the dependencies array to be: [classes.fold_controls_button, classes.fold_controls_button_label]",{"range":"398","text":"399"},{"range":"400","text":"387"},"Update the dependencies array to be: [cardList.length, cardRefs]",{"range":"401","text":"402"},{"range":"403","text":"399"},{"range":"404","text":"387"},[4075,4077],"[fetchStateFromCookies, saveStateToCookies]",[4128,4180],"[layoutState.hash, foldState.hash, editorState.hash, saveStateToCookies]",[4266,4287],"[layoutState, layoutState.curFold]",[4489,4498],"[]",[4601,4633],"[foldOverrideCallback, layoutState.curFold, layoutState.page, layoutState.showEditor, windowHeight]",[20907,20995],"[foldState.selectedLevel]",[21030,21051],"[foldState.maxSteps, foldState.stepIndex, performCommands, prevStep, stepArray]",[21080,21107],"[foldKey, initFold, readInstructionsIntoState, setFoldObj, setFoldState, stepArray.length]",[3903,3942],"[name]",[1656,1658],"[classes.fold_controls_button, classes.fold_controls_button_label]",[1832,1851],[1285,1302],"[cardList.length, cardRefs]",[3537,3539],[3634,3653]]